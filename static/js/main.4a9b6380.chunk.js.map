{"version":3,"sources":["redux/website/Website.selectors.js","redux/accounts/accounts.selectors.js","redux/website/Website.types.js","redux/website/Website.actions.js","redux/accounts/accounts.types.js","config/backend.js","redux/accounts/accounts.actions.js","redux/outlet/Outlet.types.js","redux/outlet/Outlet.actions.js","components/NavBar.js","redux/outlet/Outlet.selectors.js","components/sales/active_outlet.js","redux/record/Record.selectors.js","redux/record/Record.types.js","redux/record/Record.actions.js","components/home/sale_record.js","components/home/purchase_record.js","pages/home.js","pages/user/login.js","pages/user/register.js","pages/outlet/all_outlets.js","redux/menu/Menu.selectors.js","redux/menu/Menu.types.js","redux/menu/Menu.actions.js","redux/item/Item.selectors.js","redux/item/Item.types.js","redux/item/Item.actions.js","pages/outlet/items.js","pages/outlet/menus.js","pages/outlet/outlet.js","components/sales/search.js","components/sales/invoice.js","components/sales/sale_cart.js","components/sales/all_items.js","components/sales/all_menus.js","pages/sales.js","redux/vendor/Vendor.selectors.js","redux/vendor/Vendor.types.js","redux/vendor/Vendor.actions.js","redux/product/Product.selectors.js","redux/product/Product.types.js","redux/product/Product.actions.js","components/inventory/cart.js","components/inventory/controls.js","components/inventory/all_products.js","components/inventory/all_vendors.js","pages/inventory.js","pages/user/profile.js","App.js","serviceWorker.js","redux/accounts/accounts.reducer.js","redux/website/Website.reducer.js","redux/outlet/Outlet.reducer.js","redux/menu/Menu.reducer.js","redux/item/Item.reducer.js","redux/vendor/Vendor.reducer.js","redux/product/Product.reducer.js","redux/record/Record.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["selectMenuToggle","createSelector","state","website","menuSwitch","selectAccounts","accounts","selectActiveUser","activeUser","selectIsAuthenticated","selectUserError","userError","selectLoadingUser","loadingUser","selectTokenError","tokenError","websiteTypes","TOGGLE_MENU","toggleMenu","type","accountsTypes","AUTH_TOKEN_START","AUTH_TOKEN_SUCCESS","AUTH_TOKEN_ERROR","USER_START","USER_SUCCESS","USER_ERROR","USER_LOGOUT","backendAPI","axios","create","baseURL","timeout","userLogin","authData","dispatch","post","then","res","token","data","payload","res2","user","catch","err","error","response","outletTypes","ALL_OUTLETS_START","ALL_OUTLETS_SUCCESS","ALL_OUTLETS_ERROR","SELECT_OUTLET","SINGLE_OUTLET_START","SINGLE_OUTLET_ERROR","SINGLE_OUTLET_SUCCESS","getAllOutlets","get","all_outlets","getsingleOutlet","outlet_id","NavBar","componentDidMount","props","render","toggle","logout","className","src","display_image","first_name","last_name","alt","onClick","history","push","to","aria-hidden","Component","withRouter","connect","selectOutlet","outlet","selectAllOutlets","selectLoadingOutlets","loading_outlets","selectOutletsError","outlets_error","selectActiveOutlet","active_outlet","selectUserOutlet","key","find","i","id","selectSingleOutlet","single_outlet","selectOutletError","outlet_error","selectLoadingOutlet","loading_outlet","ActiveOutlet","cover_image_url","name","contact_number","address","selectRecord","record","selectSaleDate","sale_date","selectPurchaseDate","purchase_date","selectSaleRecords","sale_records","selectSaleRecordsError","sale_records_error","selectSaleRecordsLoading","sale_records_loading","selectPurchaseRecords","purchase_records","selectPurchaseRecordsError","purchase_records_error","selectPurchaseRecordsLoading","purchase_records_loading","recordTypes","SALE_DATE_CHANGE","PURCHASE_DATE_CHANGE","SALE_RECORDS_START","SALE_RECORDS_SUCCESS","SALE_RECORDS_ERROR","PURCHASE_RECORDS_START","PURCHASE_RECORDS_SUCCESS","PURCHASE_RECORDS_ERROR","getSaleRecords","date","records","saleRecordError","getPurchaseRecords","purchaseRecordError","SaleRecord","getRecords","changeDate","Date","date_string","getFullYear","getMonth","getDate","loading","value","onChange","e","target","placeholder","color","height","width","style","marginTop","JSON","stringify","map","grand_total","time","split","items","item","j","quantity","price","PurchaseRecord","r","products","p","product","measuring_unit","price_per_unit","Home","getOutlet","match","sale_today","purchase_today","activeClassName","path","exact","Login","username","password","inputChange","setState","submit","login","action","disabled","Register","min","AllOutlets","fetch","componentWillUnmount","choose","outlets","activeOutlet","transform","selectMenu","menu","selectAllMenus","all_menus","selectMenusError","menus_error","selectLoadingMenus","loading_menus","selectActiveMenu","activeMenu","menuTypes","MENUS_START","MENUS_SUCCESS","MENUS_ERROR","CHOOSE_MENU","getAllMenusByOutlet","menus","dispatchEvent","menusError","chooseMenu","selectItem","selectAllItems","all_items","selectItemsError","items_error","selectLoadingItems","loading_items","selectFilterItems","filter","toLowerCase","includes","search_text","selectSearchText","selectCartSwitch","cartSwitch","selectCart","cart","selectCartTotal","total","forEach","c_i","selectLatestSale","latest_sale","selectSaleError","sale_error","selectMakingSale","making_sale","itemTypes","ITEMS_START","ITEMS_SUCCESS","ITEMS_ERROR","SEARCH_ITEM","ADD_ITEM_TO_CART","INCREASE_ITEM","DECREASE_ITEM","REMOVE_ITEM_FROM_CART","CLEAR_CART","CART_TOGGLE","ADD_SALE_START","ADD_SALE_SUCCESS","ADD_SALE_ERROR","getItemsOfmenu","menu_id","clearCart","addNewSale","newSale","Items","componentWillMount","parentmatch","getItems","componentDidUpdate","oldProps","old_menu_id","params","new_menu_id","cover_image","title","descrition","margin","image","Menus","getMenus","old_outlet_id","new_oulet_id","componentDidUnmount","showItems","url","choosen","menu_type","Outlet","Search","searchItem","searchText","text","Invoice","visible","toggleVisibility","printStyles","printInvoice","invoiceHTML","document","querySelector","innerHTML","printWindow","window","open","write","close","class","s_item","SaleCart","confirmSale","addSale","cart_mod","c_item","mod_item","flip","clear","AllItems","addItem","add","increase","q","removeItem","remove","filteredItems","item_id","cart_item","selectItemQuantity","addItemToCart","increaseItem","AllMenus","Sales","selectVendor","vendor","selectAllVendors","all_vendors","selectVendorsError","vendors_error","selectLoadingVendors","loading_vendors","selectSelectedVendor","selected_vendor","vendorTypes","ALL_VENDORS_START","ALL_VENDORS_SUCCESS","ALL_VENDORS_ERROR","CHOOSE_VENDOR","getVendorsOfOutlet","allVendors","selectProduct","selectAllProducts","all_products","selectProductsError","products_error","selectLoadingProducts","loading_products","selectFilteredProducts","selectProductQuantity","product_id","index","findIndex","selectPurchaseCart","selectPurchaseCartTotal","length","pro","selectLatestPurchase","latest_purchase","selectMakingPurchase","making_purchase","selectPurchaseError","purchase_error","productTypes","ALL_PRODUCTS_START","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_ERROR","CHANGE_PRODUCT_SEARCH","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","UPDATE_PRODUCT_IN_CART","CLEAR_PURCHASE_CART","ADD_PRCHASE_START","ADD_PURCHASE_SUCCESS","ADD_PURCHASE_ERROR","getProductsOfVendor","vendor_id","addProductToCart","removeProductFromCart","updateProductInCart","addNewPurchase","newPurchase","PurchaseCart","createPurchase","addPurchase","mod_cart","cart_p","mod_cart_p","Controls","quan","changeQuantity","pressAdd","update","AllProducts","getProducts","addProduct","updateProduct","old_ven_id","new_ven_id","search","filteredProducts","searchProducts","AllVendors","getVendors","vendors","chooseVendor","Inventory","Profile","email","App","isAuth","Boolean","location","hostname","INITIAL_STATE","accountsReducer","websiteReducer","outletReducer","menuReducer","itemReducer","oldCart","newItem","splice","oldCart_1","index_1","vendorReducer","productReducer","recordReducer","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","middlewares","thunk","logger","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sUAKaA,EAAmBC,YAC5B,CAHkB,SAAAC,GAAK,OAAIA,EAAMC,WAIjC,SAAAA,GAAO,OAAIA,EAAQC,cCLjBC,EAAiB,SAAAH,GAAK,OAAIA,EAAMI,UAEzBC,EAAmBN,YAC5B,CAACI,IACD,SAAAC,GAAQ,OAAIA,EAASE,cAGZC,EAAwBR,YACjC,CAACI,IACD,SAAAC,GAAQ,QAAIA,EAASE,cAGZE,EAAkBT,YAC3B,CAACI,IACD,SAAAC,GAAQ,OAAIA,EAASK,aAEZC,EAAoBX,YAC7B,CAACI,IACD,SAAAC,GAAQ,OAAIA,EAASO,eAEZC,EAAmBb,YAC5B,CAACI,IACD,SAAAC,GAAQ,OAAIA,EAASS,cCnBVC,EALM,CACjBC,YAAc,eCELC,EAAa,WACtB,MAAO,CACHC,KAAOH,EAAaC,cCObG,EAZO,CAClBC,iBAAmB,mBACnBC,mBAAqB,qBACrBC,iBAAmB,mBAEnBC,WAAa,aACbC,aAAe,eACfC,WAAa,aAEbC,YAAc,e,iBCPZC,EAAaC,IAAMC,OAAO,CAC5BC,QAAU,0CACVC,QAAU,MAGCJ,ICyBFK,EAAY,SAAAC,GACrB,OAAO,SAAAC,GACHA,EA3BoB,CACxBhB,KAAOC,EAAcC,mBA2BjBO,EAAWQ,KAAK,mBAAqBF,GAChCG,MAAK,SAAAC,GA1BO,IAAAC,EA2BTJ,GA3BSI,EA2BiBD,EAAIE,KAAKD,MA3BjB,CAC9BpB,KAAOC,EAAcE,mBACrBmB,QAAUF,KA0BEJ,EAnBO,CACnBhB,KAAOC,EAAcI,aAmBTI,EAAWQ,KAAK,8BAA8B,CAACG,MAAMD,EAAIE,KAAKD,QACzDF,MAAK,SAAAK,GAAI,OAAEP,GAlBZQ,EAkBiCD,EAAKF,KAlB9B,CACxBrB,KAAOC,EAAcK,aACrBgB,QAAUE,KAFM,IAAAA,KAmBCC,OAAM,SAAAC,GAAG,OAAEV,GAfdW,EAeiCD,EAAIE,SAf7B,CACtB5B,KAAOC,EAAcM,WACrBe,QAAWK,KAFG,IAAAA,QAiBLF,OAAM,SAAAC,GAAG,OAAEV,GA7BDW,EA6ByBD,EAAIE,SA7BpB,CAC5B5B,KAAOC,EAAcG,iBACrBkB,QAAUK,KAFS,IAAAA,OCFRE,EAZM,CACjBC,kBAAoB,oBACpBC,oBAAsB,sBACtBC,kBAAoB,oBAEpBC,cAAgB,gBAEhBC,oBAAsB,sBACtBC,oBAAsB,sBACtBC,sBAAwB,yBCKfC,EAAgB,WACzB,OAAO,SAAArB,GACHA,EAbqB,CACzBhB,KAAQ6B,EAAYC,oBAahBrB,EAAW6B,IAAI,kBACVpB,MAAK,SAAAC,GAAG,OAAEH,GAZGuB,EAYwBpB,EAAIE,KAZb,CACrCrB,KAAO6B,EAAYE,oBACnBT,QAAUiB,KAFY,IAAAA,KAabd,OAAM,SAAAC,GAAG,OAAEV,GATAW,EASyBD,EAAIE,SATpB,CAC7B5B,KAAO6B,EAAYG,kBACnBV,QAAUK,KAFU,IAAAA,OA6BXa,EAAkB,SAACC,GAC5B,OAAO,SAAAzB,GACHA,EAbuB,CAC3BhB,KAAQ6B,EAAYK,sBAahBzB,EAAW6B,IAAX,wBAAgCG,EAAhC,MACKvB,MAAK,SAAAC,GAAG,OAAEH,GAZKuB,EAYwBpB,EAAIE,KAZb,CACvCrB,KAAO6B,EAAYO,sBACnBd,QAAUiB,KAFc,IAAAA,KAafd,OAAM,SAAAC,GAAG,OAAEV,GATEW,EASyBD,EAAIE,SATpB,CAC/B5B,KAAO6B,EAAYM,oBACnBb,QAAUK,KAFY,IAAAA,OCTpBe,E,2MACFC,kBAAmB,WACf,EAAKC,MAAMP,iB,EAGfQ,OAAQ,WAAK,IAAD,EAOJ,EAAKD,MALL3D,EAFI,EAEJA,WACA6D,EAHI,EAGJA,OACAC,EAJI,EAIJA,OACAvB,EALI,EAKJA,KAGJ,OACI,6BACI,yBAAKwB,UAAW/D,EAAa,SAAW,IACpC,yBAAK+D,UAAU,SACX,yCACA,6CAGAxB,GAEA,yBAAKwB,UAAU,QACX,yBAAKC,IACDzB,EAAK0B,cACH1B,EAAK0B,cADP,2CAEsC1B,EAAKA,KAAK2B,WAFhD,YAE8D3B,EAAKA,KAAK4B,UAFxE,0CAIAC,IAAI,KAER,4BAAK7B,EAAKA,KAAK2B,WAAf,IAA4B3B,EAAKA,KAAK4B,WACtC,yBAAKJ,UAAU,YACX,4BACIA,UAAU,cACVM,QAAS,kBAAI,EAAKV,MAAMW,QAAQC,KAAK,cAFzC,WAIA,4BAAQR,UAAU,aAAaM,QAAS,kBAAIP,MAA5C,YAKZ,yBAAKC,UAAU,QACX,4BACI,4BAAI,kBAAC,IAAD,CAASS,GAAG,KAAZ,SACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,WAAZ,aAGR,4BACI,4BAAI,kBAAC,IAAD,CAASA,GAAG,UAAZ,UACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,cAAZ,cACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,KAAZ,aAOhB,4BAAQT,UAAU,cAAcM,QAASR,GAEhC7D,EACE,uBAAG+D,UAAU,cAAcU,cAAY,SACvC,uBAAGV,UAAU,aAAaU,cAAY,Y,6BA9D5CC,aAiFNC,cACXC,aAZoB,SAAA9E,GAAK,MAAI,CAC7BE,WAAaJ,EAAiBE,GAC9ByC,KAAOpC,EAAiBL,OAGD,SAAAiC,GAAQ,MAAI,CACnC8B,OAAS,kBAAI9B,EAASjB,MACtBgD,OAAS,kBAAI/B,EHxDU,CACvBhB,KAAOC,EAAcO,eGwDrB6B,cAAgB,kBAAIrB,EAASqB,SAI7BwB,CAIEnB,I,iBC9GAoB,EAAe,SAAA/E,GAAK,OAAIA,EAAMgF,QAGvBC,EAAmBlF,YAC5B,CAACgF,IACD,SAAAC,GAAM,OAAIA,EAAOxB,eAER0B,EAAuBnF,YAChC,CAACgF,IACD,SAAAC,GAAM,OAAIA,EAAOG,mBAERC,EAAqBrF,YAC9B,CAACgF,IACD,SAAAC,GAAM,OAAIA,EAAOK,iBAERC,EAAqBvF,YAC9B,CAACgF,IACD,SAAAC,GAAM,OAAIA,EAAOO,iBAERC,EAAmBzF,YAC5B,CAACgF,EAnBkB,SAAA/E,GAAK,OAAIA,EAAMI,YAoBlC,SAAC4E,EAAO5E,GAAc,IACXoD,EAAewB,EAAfxB,YACAlD,EAAcF,EAAdE,WACP,GAAGkD,GAAelD,EAAW,CACzB,IAAMmF,EAAMjC,EAAYkC,MAAK,SAAAC,GAAC,OAAEA,EAAEC,KAAKtF,EAAW0E,UAElD,OAAIS,GAAY,KAGpB,OAAO,QAKFI,EAAqB9F,YAC9B,CAACgF,IACD,SAAAC,GAAM,OAAIA,EAAOc,iBAERC,EAAoBhG,YAC7B,CAACgF,IACD,SAAAC,GAAM,OAAIA,EAAOgB,gBAERC,EAAsBlG,YAC/B,CAACgF,IACD,SAAAC,GAAM,OAAIA,EAAOkB,kBClCfC,E,2MAEFrC,OAAO,WAAK,IAEJkB,EAEA,EAAKnB,MAFLmB,OAGJ,OAAIA,EAEA,yBAAKf,UAAU,iBACX,yBAAKC,IAAKc,EAAOoB,gBAAiB9B,IAAI,KACtC,4BACKU,EAAOqB,MAEZ,2BAAG,uBAAGpC,UAAU,qBAAqBU,cAAY,SAAjD,IAA8DK,EAAOsB,gBACrE,2BAAG,uBAAGrC,UAAU,mBAAmBU,cAAY,SAA/C,IAA4DK,EAAOuB,UARxD,2C,6BAPA3B,aA0BZE,eAJS,SAAA9E,GAAK,MAAI,CAC7BgF,OAASQ,EAAiBxF,MAGf8E,CAEbqB,GCvCIK,EAAe,SAAAxG,GAAK,OAAIA,EAAMyG,QAEvBC,EAAiB3G,YAC1B,CAACyG,IACD,SAAAC,GAAM,OAAIA,EAAOE,aAERC,EAAqB7G,YAC9B,CAACyG,IACD,SAAAC,GAAM,OAAIA,EAAOI,iBAERC,EAAoB/G,YAC7B,CAACyG,IACD,SAAAC,GAAM,OAAIA,EAAOM,gBAERC,EAAyBjH,YAClC,CAACyG,IACD,SAAAC,GAAM,OAAIA,EAAOQ,sBAERC,GAA2BnH,YACpC,CAACyG,IACD,SAAAC,GAAM,OAAIA,EAAOU,wBAERC,GAAwBrH,YACjC,CAACyG,IACD,SAAAC,GAAM,OAAIA,EAAOY,oBAERC,GAA6BvH,YACtC,CAACyG,IACD,SAAAC,GAAM,OAAIA,EAAOc,0BAERC,GAA+BzH,YACxC,CAACyG,IACD,SAAAC,GAAM,OAAIA,EAAOgB,4BCrBNC,GAbK,CAChBC,iBAAmB,mBACnBC,qBAAuB,uBAEvBC,mBAAqB,qBACrBC,qBAAuB,uBACvBC,mBAAqB,qBAErBC,uBAAyB,yBACzBC,yBAA2B,2BAC3BC,uBAAyB,0BCgBhBC,GAAiB,SAACC,EAAK1E,GAChC,OAAO,SAAAzB,GACHA,EAdqB,CACzBhB,KAAOyG,GAAYG,qBAcfnG,EAAW6B,IAAX,mBAA2BG,EAA3B,wBAAoD0E,EAApD,MACKjG,MAAK,SAAAC,GAAG,OAAEH,GAZGoG,EAYwBjG,EAAIE,KAZjB,CACjCrB,KAAOyG,GAAYI,qBACnBvF,QAAU8F,KAFY,IAAAA,KAab3F,OAAM,SAAAC,GAAG,OAAEV,EATA,SAAAU,GAAG,MAAI,CAC3B1B,KAAOyG,GAAYK,mBACnBxF,QAAUI,GAOmB2F,CAAgB3F,EAAIE,gBAiBxC0F,GAAqB,SAACH,EAAK1E,GACpC,OAAO,SAAAzB,GACHA,EAdyB,CAC7BhB,KAAOyG,GAAYM,yBAcftG,EAAW6B,IAAX,mBAA2BG,EAA3B,4BAAwD0E,EAAxD,MACKjG,MAAK,SAAAC,GAAG,OAAEH,GAZOoG,EAYwBjG,EAAIE,KAZjB,CACrCrB,KAAOyG,GAAYO,yBACnB1F,QAAU8F,KAFgB,IAAAA,KAajB3F,OAAM,SAAAC,GAAG,OAAEV,EATI,SAAAU,GAAG,MAAI,CAC/B1B,KAAOyG,GAAYQ,uBACnB3F,QAAUI,GAOmB6F,CAAoB7F,EAAIE,gBC3BnD4F,G,2MACF7E,kBAAoB,WAAK,IAAD,EACiB,EAAKC,MAAnC6E,EADa,EACbA,WAAWjG,EADE,EACFA,KAAKkG,EADH,EACGA,WACjBP,EAAO,IAAIQ,KACXC,EAAW,UAAMT,EAAKU,cAAX,YAA4BV,EAAKW,WAAW,EAAI,GAAKX,EAAKW,WAAW,EAAzC,WAAiDX,EAAKW,WAAW,GAA7F,YAAoGX,EAAKY,WAC1HL,EAAWE,GACRpG,GAAMiG,EAAWG,EAAcpG,EAAKuC,S,EAG3ClB,OAAO,WAAK,IAAD,EAUH,EAAKD,MARLuE,EAFG,EAEHA,KACAO,EAHG,EAGHA,WACAlG,EAJG,EAIHA,KACA4F,EALG,EAKHA,QACAzF,EANG,EAMHA,MACAqG,EAPG,EAOHA,QACAP,EARG,EAQHA,WAGJ,OACI,yBAAKzE,UAAU,eACX,yBAAKA,UAAU,QACX,uBAAGA,UAAU,iBAAiBU,cAAY,SAC1C,2BACI1D,KAAK,OACLoF,KAAK,OACLT,GAAG,GACHsD,MAAOd,EACPe,SAAU,SAAAC,GACNT,EAAWS,EAAEC,OAAOH,OACpBR,EAAWU,EAAEC,OAAOH,MAAQzG,EAAKuC,SAErCsE,YAAY,mBAGpB,yBAAKrF,UAAU,oBAEPgF,GAEA,kBAAC,IAAD,CACIhI,KAAK,OACLsI,MAAM,UACNC,OAAQ,IACRC,MAAO,IACP3H,QAAS,KACT4H,MAAO,CAACC,UAAY,SAIxB/G,GAEA,yBAAKqB,UAAU,SACX,4BACK2F,KAAKC,UAAUjH,EAAMN,QAK9B+F,GAEAA,EAAQyB,KAAI,SAACrD,EAAOd,GAChB,OACI,yBAAK1B,UAAU,gBAAgBwB,IAAKE,GAChC,4BACI,uBAAG1B,UAAU,YAAYU,cAAY,SAAY8B,EAAOsD,aAE5D,yBAAK9F,UAAU,YAEX,2BAAG,uBAAGA,UAAU,gBAAgBU,cAAY,SAA5C,IAAyD8B,EAAOuD,KAAKC,MAAM,KAAK,KAEpF,yBAAKhG,UAAU,SAEPwC,EAAOyD,MAAMJ,KAAI,SAACK,EAAKC,GACnB,OACI,yBAAKnG,UAAU,cAAcwB,IAAK2E,GAC9B,4BACKD,EAAKA,KAAK9D,MAEf,4BACK8D,EAAKE,UAEV,4BAAI,uBAAGpG,UAAU,YAAYU,cAAY,SAAzC,IAAsDwF,EAAKA,KAAKG,MAAQH,EAAKE,sB,6BAlF5GzF,aAgHVC,eAAWC,aAbT,SAAA9E,GAAK,MAAI,CACtBqI,QAAUvB,EAAkB9G,GAC5B4C,MAAQoE,EAAuBhH,GAC/BiJ,QAAU/B,GAAyBlH,GACnCoI,KAAO1B,EAAe1G,GACtByC,KAAOpC,EAAiBL,OAGR,SAAAiC,GAAQ,MAAI,CAC5ByG,WAAa,SAACN,EAAK1E,GAAN,OAAkBzB,EAASkG,GAAeC,EAAK1E,KAC5DiF,WAAa,SAAAP,GAAI,OAAInG,EDnIgB,CACrChB,KAAOyG,GAAYC,iBACnBpF,QCiI6C6F,QAGvBtD,CAIxB2D,KCpHI8B,G,2MACF3G,kBAAoB,WAAK,IAAD,EACiB,EAAKC,MAAnC6E,EADa,EACbA,WAAWjG,EADE,EACFA,KAAKkG,EADH,EACGA,WACjBP,EAAO,IAAIQ,KACXC,EAAW,UAAMT,EAAKU,cAAX,YAA4BV,EAAKW,WAAW,EAAI,GAAKX,EAAKW,WAAW,EAAzC,WAAiDX,EAAKW,WAAW,GAA7F,YAAoGX,EAAKY,WAC1HL,EAAWE,GACRpG,GAAMiG,EAAWG,EAAcpG,EAAKuC,S,EAE3ClB,OAAO,WAAK,IAAD,EAUH,EAAKD,MARLuE,EAFG,EAEHA,KACAO,EAHG,EAGHA,WACAlG,EAJG,EAIHA,KACA4F,EALG,EAKHA,QACAzF,EANG,EAMHA,MACAqG,EAPG,EAOHA,QACAP,EARG,EAQHA,WAGJ,OACI,yBAAKzE,UAAU,mBACZ,yBAAKA,UAAU,QACV,uBAAGA,UAAU,iBAAiBU,cAAY,SAC1C,2BACI1D,KAAK,OACLoF,KAAK,OACLT,GAAG,GACHsD,MAAOd,EACPe,SAAU,SAAAC,GACNT,EAAWS,EAAEC,OAAOH,OACpBR,EAAWU,EAAEC,OAAOH,MAAQzG,EAAKuC,SAErCsE,YAAY,mBAGpB,yBAAKrF,UAAU,wBAEPgF,GAEA,kBAAC,IAAD,CACIhI,KAAK,OACLsI,MAAM,UACNC,OAAQ,IACRC,MAAO,IACP3H,QAAS,KACT4H,MAAO,CAACC,UAAY,SAIxB/G,GAEA,yBAAKqB,UAAU,SACX,4BACK2F,KAAKC,UAAUjH,EAAMN,QAK9B+F,GAEAA,EAAQyB,KAAI,SAACU,EAAE7E,GACX,OACI,yBAAK1B,UAAU,aAAawB,IAAKE,GAC7B,4BAAI,uBAAG1B,UAAU,YAAYU,cAAY,SAAY6F,EAAET,aACvD,yBAAK9F,UAAU,YAEX,2BAAG,uBAAGA,UAAU,gBAAgBU,cAAY,SAA5C,IAAyD6F,EAAER,KAAKC,MAAM,KAAK,KAE/E,yBAAKhG,UAAU,YAEPuG,EAAEC,SAASX,KAAI,SAACY,EAAEN,GACd,OACI,yBAAKnG,UAAU,iBAAiBwB,IAAK2E,GACjC,4BACKM,EAAEC,QAAQtE,MAEf,4BACKqE,EAAEL,SADP,IACkBK,EAAEC,QAAQC,gBAE5B,4BAAI,uBAAG3G,UAAU,YAAYU,cAAY,SAAzC,IAAsD+F,EAAEC,QAAQE,eAAiBH,EAAEL,sB,6BA/E9GzF,aA6GdC,eAAWC,aAbT,SAAA9E,GAAK,MAAI,CACtBqI,QAAUjB,GAAsBpH,GAChCiJ,QAAUzB,GAA6BxH,GACvC4C,MAAQ0E,GAA2BtH,GACnCyC,KAAOpC,EAAiBL,GACxBoI,KAAOxB,EAAmB5G,OAEV,SAAAiC,GAAQ,MAAI,CAC5B0G,WAAa,SAAAP,GAAI,OAAGnG,EF1HqB,CACzChB,KAAOyG,GAAYE,qBACnBrF,QEwHgD6F,KAChDM,WAAa,SAACN,EAAK1E,GAAN,OAAkBzB,EAASsG,GAAmBH,EAAK1E,QAI1CoB,CAIxByF,KC7GIO,G,2MACFlH,kBAAoB,WAAK,IAAD,EAMhB,EAAKC,MAJLpB,EAFgB,EAEhBA,KACAsI,EAHgB,EAGhBA,WAIJhH,EAPoB,EAIhBA,UAIDtB,GAAMsI,EAAUtI,EAAKuC,S,EAE5BlB,OAAO,WAAK,IAAD,EAOH,EAAKD,MALLmB,EAFG,EAEHA,OACApC,EAHG,EAGHA,MACAqG,EAJG,EAIHA,QACA+B,EALG,EAKHA,MAGJ,OACI,yBAAK/G,UAAU,QACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,gBACX,6BAGAe,GAEA,yBAAKf,UAAU,SACX,wBAAIA,UAAU,QAAd,gBAAkC,uBAAGA,UAAU,YAAYU,cAAY,SAAvE,IAAoFK,EAAOiG,YAC3F,wBAAIhH,UAAU,YAAd,oBAA0C,uBAAGA,UAAU,YAAYU,cAAY,SAA/E,IAA4FK,EAAOkG,gBACnG,wBACIjH,UACIe,EAAOiG,WAAajG,EAAOkG,eACzB,SACA,QAJV,cAOY,uBAAGjH,UAAU,YAAYU,cAAY,SAPjD,IAO8DK,EAAOiG,WAAajG,EAAOkG,iBAK7FjC,GACG,kBAAC,IAAD,CACKhI,KAAK,OACLsI,MAAM,UACNC,OAAQ,IACRC,MAAO,IACP3H,QAAS,OAIjBc,GAEA,yBAAKqB,UAAU,SACX,4BACK2F,KAAKC,UAAUjH,KAI5B,yBAAKqB,UAAU,WACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAASkH,gBAAgB,KAAKzG,GAAE,UAAKsG,EAAMI,KAAX,kBAAgC,uBAAGnH,UAAU,cAAcU,cAAY,SAAvG,iBACA,kBAAC,IAAD,CAASwG,gBAAgB,KAAKzG,GAAE,UAAKsG,EAAMI,KAAX,sBAAoC,uBAAGnH,UAAU,wBAAwBU,cAAY,SAArH,qBAGJ,yBAAKV,UAAU,SACX,kBAAC,IAAD,CAAOoH,OAAK,EAACD,KAAI,UAAKJ,EAAMI,KAAX,kBACb,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAQC,OAAK,EAACD,KAAI,UAAKJ,EAAMI,KAAX,sBACd,kBAAC,GAAD,W,6BAxETxG,aAgGJC,eACXC,aAda,SAAA9E,GAAK,MAAI,CACtBgF,OAASa,EAAmB7F,GAC5B4C,MAAQmD,EAAkB/F,GAC1BiJ,QAAUhD,EAAoBjG,GAC9ByC,KAAOpC,EAAiBL,OAGT,SAAAiC,GAAQ,MAAI,CAC3B8B,OAAS,kBAAI9B,EAASjB,MACtB+J,UAAY,SAAArH,GAAS,OAAGzB,EAASwB,EAAgBC,QAKjDoB,CAIEgG,K,SC/GAQ,G,2MAEFtL,MAAQ,CACJuL,SAAW,GACXC,SAAW,I,EAEfC,YAAc,SAAArC,GACV,EAAKsC,SAAL,gBACKtC,EAAEC,OAAOhD,KAAQ+C,EAAEC,OAAOH,S,EAGnCyC,OAAS,WAAK,IAAD,EAKL,EAAK3L,MAHLuL,EAFK,EAELA,SACAC,EAHK,EAGLA,UAOJI,EADI,EAAK/H,MAFL+H,OAGE,CAACL,WAASC,c,EAEpB1H,OAAS,WAAK,IAAD,EAIL,EAAK9D,MAFLuL,EAFK,EAELA,SACAC,EAHK,EAGLA,SAHK,EAUL,EAAK3H,MAJLoF,EANK,EAMLA,QACAxI,EAPK,EAOLA,UACAI,EARK,EAQLA,WAIJ,OACI,yBAAKoD,UAAU,cAEPpD,GACA,yBAAKoD,UAAU,SACX,4BAAK2F,KAAKC,UAAUhJ,EAAWyB,QAInC7B,GACA,yBAAKwD,UAAU,SACX,4BAAK2F,KAAKC,UAAUpJ,EAAU6B,QAGtC,0BAAMuJ,OAAO,IACT,yBAAK5H,UAAU,cACX,4BAEQgF,EACE,oBACA,sBAGV,2BACIhI,KAAK,OACLoF,KAAK,WACLiD,YAAY,WACZJ,MAAOqC,EACPpC,SAAU,EAAKsC,YACfK,SAAU7C,IAEd,2BACIhI,KAAK,WACLoF,KAAK,WACLiD,YAAY,WACZJ,MAAOsC,EACPrC,SAAU,EAAKsC,YACfK,SAAU7C,IAEd,4BACIhF,UAAU,iBACVhD,KAAK,SACLsD,QAAS,EAAKoH,OACdG,SAAU7C,GAEVA,EACE,kBAAC,IAAD,CACEhI,KAAK,OACLsI,MAAM,QACNC,OAAQ,GACRC,MAAO,GACP3H,QAAS,OAGZ,YAIXmH,GAAW,yBAAKhF,UAAU,iBACxB,kDACA,kBAAC,IAAD,CAASS,GAAG,aAAZ,gB,6BA/FAE,aAkHLE,gBAVS,SAAA9E,GAAK,MAAI,CAC7BiJ,QAAUvI,EAAkBV,GAC5BS,UAAYD,EAAgBR,GAC5Ba,WAAaD,EAAiBZ,OAGP,SAAAiC,GAAQ,MAAG,CAClC2J,MAAQ,SAAC5J,GAAD,OAAYC,EAASF,EAAUC,QAG5B8C,CAGbwG,ICnDaS,G,2MA/EXjI,OAAQ,WACJ,OACI,yBAAKG,UAAU,iBACX,8CACA,0BAAM4H,OAAO,IACT,yBAAK5H,UAAU,cACX,oDADJ,IAGI,2BACIhD,KAAK,OACLoF,KAAK,aACLT,GAAG,GACH0D,YAAY,oBAEhB,2BACIrI,KAAK,OACLoF,KAAK,YACLT,GAAG,GACH0D,YAAY,mBAEhB,2BACIrI,KAAK,QACLoF,KAAK,QACLT,GAAG,GACH0D,YAAY,uBAEhB,2BACIrI,KAAK,SACLoF,KAAK,QACLT,GAAG,GACHoG,IAAK,EACL1C,YAAY,sBAEhB,2BACIrI,KAAK,MACLoF,KAAK,oBACLT,GAAG,GAEH0D,YAAY,6BAGpB,yBAAKrF,UAAU,cACX,8CACA,2BACIhD,KAAK,OACLoF,KAAK,WACLT,GAAG,GAEH0D,YAAY,sBAEhB,2BACIrI,KAAK,WACLoF,KAAK,WACLT,GAAG,GAEH0D,YAAY,sBAEhB,2BACIrI,KAAK,WACLoF,KAAK,mBACLT,GAAG,GAEH0D,YAAY,0BAEhB,4BAAQrF,UAAU,iBAAiBhD,KAAK,UAAxC,YACA,yBAAKgD,UAAU,cACX,kDACA,kBAAC,IAAD,CAASS,GAAG,KAAZ,mB,6BArELE,aCkBjBqH,G,2MACFrI,kBAAoB,YAEhBsI,EADgB,EAAKrI,MAAdqI,U,EAGXC,qBAAuB,YAEnBC,EADiB,EAAKvI,MAAfuI,QACA,O,EAEXtI,OAAS,WAAK,IAAD,EASL,EAAKD,MAPLwI,EAFK,EAELA,QACApD,EAHK,EAGLA,QACAxG,EAJK,EAILA,KACAG,EALK,EAKLA,MACAwJ,EANK,EAMLA,OACAE,EAPK,EAOLA,aAGJ,OACI,yBAAKrI,UAAU,eAEX,4BAEQgF,EACE,qBACA,qBAKNrG,GACA,yBAAKqB,UAAU,SACX,4BAAK2F,KAAKC,UAAUjH,KAG5B,yBAAKqB,UAAU,QAEPgF,GACA,yBAAKS,MAAO,CAACC,UAAY,MAAM4C,UAAU,qBACrC,kBAAC,IAAD,CACItL,KAAK,OACLsI,MAAM,UACNC,OAAQ,IACRC,MAAO,IACP3H,QAAS,QAMjBuK,GACAA,EAAQvC,KAAI,SAAC9E,EAAOW,GAChB,OACI,yBACI1B,UAAU,gBACVwB,IAAKE,EACLpB,QAAS,WACL6H,EAAOpH,GACP,EAAKnB,MAAMW,QAAQC,KAAnB,kBAAmCO,EAAOY,GAA1C,aAGJ,yBAAK1B,IAAKc,EAAOoB,gBAAiB9B,IAAI,KAElCgI,GACGtH,EAAOY,KAAO0G,EAAa1G,IAG9B,yBAAK3B,UAAU,YACX,uCAIR,yBAAKA,UAAU,QACX,4BAAKe,EAAOqB,MACZ,uBAAGpC,UAAU,WACT,uBAAGA,UAAU,qBAAqBU,cAAY,SAC7CK,EAAOsB,gBAEZ,uBAAGrC,UAAU,WACT,uBAAGA,UAAU,mBAAmBU,cAAY,SAC3CK,EAAOuB,UAIZvB,EAAOY,KAAOnD,EAAKuC,QAEnB,yBAAKf,UAAU,aACX,0D,6BAxFnBW,aAmHVC,eACXC,aAboB,SAAA9E,GAAK,MAAI,CAC7BqM,QAAUpH,EAAiBjF,GAC3BiJ,QAAU/D,EAAqBlF,GAC/B4C,MAAQwC,EAAmBpF,GAC3ByC,KAAOpC,EAAiBL,GACxBsM,aAAehH,EAAmBtF,OAEX,SAAAiC,GAAQ,MAAG,CAClCiK,MAAQ,kBAAIjK,EAASqB,MACrB8I,OAAS,SAACpH,GAAD,OAAU/C,EZhHK,SAAA+C,GAAM,MAAG,CACjC/D,KAAO6B,EAAYI,cACnBX,QAAUyC,GY8GkBD,CAAaC,QAIzCF,CAGEmH,KC5IAO,GAAa,SAAAxM,GAAK,OAAIA,EAAMyM,MAGrBC,GAAiB3M,YAC1B,CAACyM,KACD,SAAAC,GAAI,OAAGA,EAAKE,aAEHC,GAAmB7M,YAC5B,CAACyM,KACD,SAAAC,GAAI,OAAGA,EAAKI,eAEHC,GAAqB/M,YAC9B,CAACyM,KACD,SAAAC,GAAI,OAAGA,EAAKM,iBAEHC,GAAmBjN,YAC5B,CAACyM,KACD,SAAAC,GAAI,OAAGA,EAAKQ,cCXDC,GARI,CACfC,YAAc,cACdC,cAAgB,gBAChBC,YAAc,cAEdC,YAAc,eCWLC,GAAsB,SAAA7J,GAC/B,OAAO,SAAAzB,GACHA,EAdgB,CACpBhB,KAAOiM,GAAUC,cAcbzL,EAAW6B,IAAX,mBAA2BG,EAA3B,YACKvB,MAAK,SAAAC,GAAG,OAAEH,GAbFuL,EAawBpL,EAAIE,KAbnB,CAC1BrB,KAAOiM,GAAUE,cACjB7K,QAAUiL,KAFO,IAAAA,KAcR9K,OAAM,SAAAC,GAAG,OAAE8K,cAVL,SAAA9K,GAAG,MAAI,CACtB1B,KAAOiM,GAAUG,YACjB9K,QAAUI,GAQwB+K,CAAW/K,SAIpCgL,GAAa,SAAAlB,GAAI,MAAI,CAC9BxL,KAAOiM,GAAUI,YACjB/K,QAAUkK,ICzBRmB,GAAa,SAAA5N,GAAK,OAAIA,EAAMmK,MAGrB0D,GAAiB9N,YAC1B,CAAC6N,KACD,SAAAzD,GAAI,OAAEA,EAAK2D,aAEFC,GAAmBhO,YAC5B,CAAC6N,KACD,SAAAzD,GAAI,OAAEA,EAAK6D,eAEFC,GAAqBlO,YAC9B,CAAC6N,KACD,SAAAzD,GAAI,OAAEA,EAAK+D,iBAEFC,GAAoBpO,YAC7B,CAAC6N,KACD,SAAAzD,GAAI,OAAEA,EAAK2D,UAAY3D,EAAK2D,UAAUM,QAAO,SAAAzI,GAAC,OAAEA,EAAEU,KAAKgI,cAAcC,SAASnE,EAAKoE,YAAYF,kBAAkB,QAExGG,GAAkBzO,YAC3B,CAAC6N,KACD,SAAAzD,GAAI,OAAEA,EAAKoE,eAEFE,GAAmB1O,YAC5B,CAAC6N,KACD,SAAAzD,GAAI,OAAEA,EAAKuE,cAaFC,GAAa5O,YACtB,CAAC6N,KACD,SAAAzD,GAAI,OAAEA,EAAKyE,QAGFC,GAAkB9O,YAC3B,CAAC6N,KACD,SAAAzD,GACI,IAAI2E,EAAQ,EAOZ,OANG3E,EAAKyE,MAEJzE,EAAKyE,KAAKG,SAAQ,SAAAC,GACdF,GAASE,EAAI7E,KAAKG,MAAM0E,EAAI3E,YAG7ByE,KAIFG,GAAmBlP,YAC5B,CAAC6N,KACD,SAAAzD,GAAI,OAAEA,EAAK+E,eAEFC,GAAkBpP,YAC3B,CAAC6N,KACD,SAAAzD,GAAI,OAAEA,EAAKiF,cAEFC,GAAmBtP,YAC5B,CAAC6N,KACD,SAAAzD,GAAI,OAAEA,EAAKmF,eCjDAC,GApBG,CACdC,YAAc,cACdC,cAAgB,gBAChBC,YAAc,cAEdC,YAAc,cACdC,iBAAmB,mBACnBC,cAAgB,gBAChBC,cAAgB,gBAChBC,sBAAwB,wBACxBC,WAAa,aAEbC,YAAc,cAEdC,eAAiB,iBACjBC,iBAAmB,mBACnBC,eAAiB,kBCFRC,GAAiB,SAAAC,GAC1B,OAAO,SAAArO,GACHA,EAbgB,CACpBhB,KAAOsO,GAAUC,cAab9N,EAAW6B,IAAX,wBAAgC+M,EAAhC,YACKnO,MAAK,SAAAC,GAAG,OAAEH,GAZFiI,EAYwB9H,EAAIE,KAZnB,CAC1BrB,KAAOsO,GAAUE,cACjBlN,QAAU2H,KAFO,IAAAA,KAaRxH,OAAM,SAAAC,GAAG,OAAEV,GATLW,EASyBD,EAAIE,SATrB,CACvB5B,KAAOsO,GAAUG,YACjBnN,QAAUK,KAFK,IAAAA,OAkCN2N,GAAY,iBAAK,CAC1BtP,KAAOsO,GAAUS,aAgBRQ,GAAa,SAAC5B,EAAOlL,GAC9B,OAAO,SAAAzB,GACHA,EAbkB,CACtBhB,KAAOsO,GAAUW,iBAabxO,EAAWQ,KAAX,mBAA4BwB,EAA5B,cAAkDkL,GAC7CzM,MAAK,SAAAC,GAZK,IAAAqO,EAaPxO,GAbOwO,EAaiBrO,EAAIE,KAbX,CAC7BrB,KAAOsO,GAAUY,iBACjB5N,QAAUkO,KAYExO,EAASsO,SAEZ7N,OAAM,SAAAC,GAAG,OAAEV,GAZHW,EAYyBD,EAAIE,SAZpB,CAC1B5B,KAAOsO,GAAUa,eACjB7N,QAAUK,KAFO,IAAAA,OCtCf8N,G,2MACFC,mBAAmB,WAAK,IAAD,EACQ,EAAK9M,MAAzB4I,EADY,EACZA,KAAKmE,EADO,EACPA,YACRnE,EAGA,EAAK5I,MAAMgN,SAASpE,EAAK7G,IAFzB,EAAK/B,MAAMW,QAAQC,KAAKmM,I,EAMhCE,mBAAqB,SAAAC,GACjB,IAAMC,EAAcD,EAAS/F,MAAMiG,OAAOrL,GACpCsL,EAAc,EAAKrN,MAAMmH,MAAMiG,OAAOrL,GAGzCoL,IAAgBE,GACf,EAAKrN,MAAMgN,SAASK,I,EAG5BpN,OAAO,WAAK,IAAD,EAOH,EAAKD,MALL4I,EAFG,EAEHA,KACAvC,EAHG,EAGHA,MACAjB,EAJG,EAIHA,QACArG,EALG,EAKHA,MAGJ,OACI,yBAAKqB,UAAU,SAEPwI,GAEA,yBAAKxI,UAAU,aACX,yBAAKC,IAAKuI,EAAK0E,YAAa7M,IAAI,KAChC,yBAAKL,UAAU,aACX,4BACKwI,EAAK2E,OAEV,2BACK3E,EAAK4E,aAIVpI,EACE,yBAAKhF,UAAU,aACT,kBAAC,IAAD,CACIhD,KAAK,OACLsI,MAAM,UACNC,OAAQ,IACRC,MAAO,IACP3H,QAAS,KACT4H,MAAO,CACH4H,OAAO,eAKrB,yBAAKrN,UAAU,aAELrB,GAEA,yBAAKqB,UAAU,SACX,4BACK2F,KAAKC,UAAUjH,KAKxBsH,GAEAA,EAAMJ,KAAI,SAACK,EAAKxE,GACZ,OACI,yBAAK1B,UAAU,cAAcwB,IAAKE,GAC9B,yBACIzB,IAAKiG,EAAKoH,MAAQpH,EAAKoH,MAAlB,2CAA8DpH,EAAK9D,KAAnE,0CACL/B,IAAI,KAER,4BAAK6F,EAAK9D,MACV,uBAAGpC,UAAU,SAAQ,uBAAGA,UAAU,YAAYU,cAAY,SAAYwF,EAAKG,e,6BA9E3G1F,aAwGLC,eACXC,aAZoB,SAAA9E,GAAK,MAAI,CAC7ByM,KAAOO,GAAiBhN,GACxBkK,MAAQ2D,GAAe7N,GACvBiJ,QAAUgF,GAAmBjO,GAC7B4C,MAAQmL,GAAiB/N,OAGF,SAAAiC,GAAQ,MAAG,CAClC4O,SAAU,SAACP,GAAD,OAAWrO,EAASoO,GAAeC,QAI7CxL,CAGE4L,KCpGAc,G,2MACF5N,kBAAoB,WAChB,IAAMF,EAAY,EAAKG,MAAMmH,MAAMiG,OAAOrL,IAE1C6L,EADmB,EAAK5N,MAAjB4N,UACE/N,I,EAEboN,mBAAqB,SAAAC,GACjB,IAAMW,EAAgBX,EAAS/F,MAAMiG,OAAOrL,GACtC+L,EAAe,EAAK9N,MAAMmH,MAAMiG,OAAOrL,GAEtC6L,EAAY,EAAK5N,MAAjB4N,SACJC,IAAkBC,GACjBF,EAASE,I,EAGjBC,oBAAoB,WAChB,EAAK/N,MAAMuI,OAAO,O,EAEtByF,UAAY,SAACzI,EAAEqD,GAAQ,IAAD,EACK,EAAK5I,MAArBmH,EADW,EACXA,OAEPoB,EAHkB,EACLA,QAENK,GACP,EAAK5I,MAAMW,QAAQC,KAAnB,UAA2BuG,EAAM8G,IAAjC,YAAwC1I,EAAEC,OAAOzD,GAAjD,Y,EAEJ9B,OAAO,WAAK,IAAD,EAQH,EAAKD,MALL2J,GAHG,EAEHpB,OAFG,EAGHoB,OACA5K,EAJG,EAIHA,MACAqG,EALG,EAKHA,QACA+B,EANG,EAMHA,MACA+G,EAPG,EAOHA,QAEJ,OACI,yBAAK9N,UAAU,SAEX,4BAEQgF,EACE,gBACA,aAINA,GAEA,yBAAKS,MAAO,CAACC,UAAY,MAAM4C,UAAU,qBACrC,kBAAC,IAAD,CACItL,KAAK,OACLsI,MAAM,UACNC,OAAQ,IACRC,MAAO,IACP3H,QAAS,QAMjBc,GAEA,yBAAKqB,UAAU,SACX,4BACK2F,KAAKC,UAAUjH,KAI5B,yBAAKqB,UAAU,QAEPuJ,GACGA,EAAM1D,KAAI,SAAC2C,EAAK9G,GACf,OACI,yBACI1B,UAAU,cAEVwB,IAAKE,EACLC,GAAI6G,EAAK7G,GACTrB,QAAS,SAAC6E,GACN,EAAKyI,UAAUzI,EAAEqD,KAGrB,yBAAKvI,IAAKuI,EAAK0E,YAAa7M,IAAI,GAAGsB,GAAI6G,EAAK7G,KAEpCmM,GACAA,EAAQnM,KAAO6G,EAAK7G,IAEpB,yBAAK3B,UAAU,eACX,2BACI,uBAAGA,UAAU,YAAYU,cAAY,WAIrD,yBAAKV,UAAU,QACX,4BAAKwI,EAAK2E,OACV,uBAAGnN,UAAU,QAAQwI,EAAKuF,iBAUlD,kBAAC,IAAD,CAAO5G,KAAI,UAAKJ,EAAMI,KAAX,eACP,kBAAC,GAAD,CAAOwF,YAAa5F,EAAM8G,S,6BAxG1BlN,aA8HLC,eACXC,aAfoB,SAAA9E,GAAK,MAAI,CAC7BwN,MAAQd,GAAe1M,GACvB4C,MAAQgK,GAAiB5M,GACzBiJ,QAAU6D,GAAmB9M,GAE7BgF,OAASM,EAAmBtF,GAC5B+R,QAAU/E,GAAiBhN,OAGJ,SAAAiC,GAAQ,MAAI,CACnCwP,SAAW,SAAC/N,GAAD,OAAazB,EAASsL,GAAoB7J,KACrD0I,OAAS,SAACK,GAAD,OAAQxK,EAAS0L,GAAWlB,QAIrC3H,CAGE0M,KCzIAS,G,2MACFrO,kBAAoB,YAEhBG,EADiB,EAAKF,MAAfE,W,EAIXD,OAAS,WAAK,IAENkH,EAGA,EAAKnH,MAHLmH,MAIJ,OACI,yBAAK/G,UAAU,UACX,kBAAC,IAAD,CAAQmH,KAAI,UAAKJ,EAAMI,OACnB,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CAAOA,KAAI,UAAKJ,EAAMI,KAAX,eACP,kBAAC,GAAD,S,6BAnBCxG,aAoCNC,eAAWC,aARF,SAAA9E,GAAK,MAAI,CAC7BsM,aAAehH,EAAmBtF,OAGX,SAAAiC,GAAQ,MAAK,CACpC8B,OAAS,kBAAI9B,EAASjB,SAGA8D,CAGxBmN,KC/CIC,G,2MAEFpO,OAAO,WAAK,IAAD,EAIH,EAAKD,MAFLsO,EAFG,EAEHA,WACAC,EAHG,EAGHA,WAEJ,OACI,yBAAKnO,UAAU,UACX,uBAAGA,UAAU,eAAeU,cAAY,SACxC,2BACI1D,KAAK,OACLoF,KAAK,GACLT,GAAG,GACH0D,YAAY,cACZJ,MAAOkJ,EACPjJ,SAAU,SAAAC,GAAC,OAAE+I,EAAW/I,EAAEC,OAAOH,Y,6BAhBhCtE,aA8BNE,gBAPE,SAAA9E,GAAK,MAAG,CACrBoS,WAAa5D,GAAiBxO,OAEd,SAAAiC,GAAQ,MAAG,CAC3BkQ,WAAa,SAACE,GAAD,OAAQpQ,EJjBC,SAACoQ,GAAD,MAAS,CAC/BpR,KAAOsO,GAAUI,YACjBpN,QAAU8P,GIeoBF,CAAWE,QAG9BvN,CAIboN,IC/BII,G,2MACFtS,MAAQ,CACJuS,SAAS,G,EAGbC,iBAAmB,WACf,EAAK9G,SAAS,CACV6G,SAAW,EAAKvS,MAAMuS,W,EAG9BE,Y,w2CA0CAC,aAAe,WACX,IAAMC,EAAcC,SAASC,cAAc,iBAAiBC,UACtDC,EAAcC,OAAOC,KAAK,GAAG,SAAS,yBAC5CF,EAAYH,SAASK,OACrBF,EAAYH,SAASM,MAArB,giBAU0B,EAAKT,YAV/B,6dAgB0BE,EAhB1B,2HAuBAI,EAAYH,SAASO,S,EAIzBrP,OAAO,WAAK,IACDyO,EAAW,EAAKvS,MAAhBuS,QADA,EAMH,EAAK1O,MAHLmB,EAHG,EAGHA,OACAkK,EAJG,EAIHA,YAGJ,OACI,yBAAKjL,UAAU,WACX,yBAAKA,UAAWsO,EAAU,uBAAyB,gBAC/C,yCACA,4CACA,yBAAKtO,UAAU,eACX,4BACIA,UAAU,YACVM,QAAS,EAAKmO,cACjB,uBAAGzO,UAAU,cAAcU,cAAY,WAE5C,4BACKK,EAAOqB,MAEZ,yBAAKpC,UAAU,cACX,2BAAG,uBAAGA,UAAU,iBAAiBU,cAAY,SAA7C,IAA0DuK,EAAY9G,MACtE,2BAAG,uBAAGgL,MAAM,gBAAgBzO,cAAY,SAAxC,IAAqDuK,EAAYlF,KAAKC,MAAM,KAAK,KAErF,yBAAKhG,UAAU,iBAEPiL,EAAYhF,MAAMJ,KAAI,SAACuJ,EAAO1N,GAC1B,OACI,yBAAK1B,UAAU,WAAWwB,IAAKE,GAC3B,4BACK0N,EAAOlJ,KAAK9D,MAEjB,2BACKgN,EAAOhJ,UAEZ,2BAAG,uBAAGpG,UAAU,YAAYU,cAAY,SAAxC,IAAqD0O,EAAOhJ,SAASgJ,EAAOlJ,KAAKG,YAMrG,yBAAKrG,UAAU,OACX,sCACA,sCACA,oCAEJ,wBAAIA,UAAU,eAAc,uBAAGA,UAAU,YAAYU,cAAY,SAAjE,IAA8EuK,EAAYnF,YAAYE,MAAM,KAAK,IACjH,yBAAKhG,UAAU,WACX,+DAGA,4CAEJ,yBAAKA,UAAU,WACX,2BAAG,uBAAGA,UAAU,cAAcU,cAAY,SAA1C,mBACA,2BAAG,uBAAGV,UAAU,mBAAmBU,cAAY,SAA/C,gCACA,2BAAG,uBAAGV,UAAU,cAAcU,cAAY,SAA1C,mBAIR,4BAAQV,UAAU,iBAAiBM,QAAS,EAAKiO,kBAAkB,uBAAGvO,UAAU,oBAAoBU,cAAY,SAAhH,IAA6H4N,EAAU,eAAiB,kB,6BAhJlJ3N,aA2JPE,gBAJE,SAAA9E,GAAK,MAAI,CACtBkP,YAAcD,GAAiBjP,GAC/BgF,OAASQ,EAAiBxF,MAEf8E,CAGbwN,IC/IIgB,G,2MACFC,YAAc,WAAK,IAAD,EACc,EAAK1P,MAA1B+K,EADO,EACPA,KAAK4E,EADE,EACFA,QAAQ/Q,EADN,EACMA,KAChBgR,EAAW,GACf7E,EAAKG,SAAQ,SAAC2E,GACV,IAAMC,EAAW,CACb/N,GAAK8N,EAAOvJ,KAAKvE,GACjByE,SAAWqJ,EAAOrJ,UAEtBoJ,EAAShP,KAAKkP,MAElBH,EAAQC,EAAShR,EAAKuC,S,EAE1BlB,OAAO,WAAK,IAAD,EAaH,EAAKD,MAXL+P,EAFG,EAEHA,KACA7P,EAHG,EAGHA,OACA6K,EAJG,EAIHA,KACAE,EALG,EAKHA,MACA+E,EANG,EAMHA,MAEA3E,EARG,EAQHA,YACAE,EATG,EASHA,WACAE,EAVG,EAUHA,YAIJ,OACI,yBAAKrL,UAAU,aAEP2P,GAEA,yBAAK3P,UAAU,aAEP2K,GAEAA,EAAK9E,KAAI,SAAC4J,EAAO/N,GACb,OACI,yBAAK1B,UAAU,YAAYwB,IAAKE,GAC5B,4BACK+N,EAAOvJ,KAAK9D,MAEjB,2BACKqN,EAAOrJ,UAEZ,2BAAG,uBAAGpG,UAAU,YAAYU,cAAY,SAAxC,IAAqD+O,EAAOvJ,KAAKG,MAAQoJ,EAAOrJ,cAM5F6E,GAEA,yBAAKjL,UAAU,eACX,4BAAI,uBAAGA,UAAU,YAAYU,cAAY,SAAzC,IAAsDuK,EAAYnF,YAAYE,MAAM,KAAK,IACzF,yBAAKhG,UAAU,aACX,2BAAG,uBAAGA,UAAU,gBAAgBU,cAAY,SAA5C,IAAyDuK,EAAYlF,KAAKC,MAAM,KAAK,IACrF,2BAAG,uBAAGhG,UAAU,iBAAiBU,cAAY,SAA7C,IAA0DuK,EAAY9G,OAE1E,yBAAKnE,UAAU,SAEPiL,EAAYhF,MAAMJ,KAAI,SAACuJ,EAAO1N,GAC1B,OACI,yBAAK1B,UAAU,WAAWwB,IAAKE,GAC3B,4BACK0N,EAAOlJ,KAAK9D,MAEjB,2BACKgN,EAAOhJ,UAEZ,2BAAG,uBAAGpG,UAAU,YAAYU,cAAY,SAAxC,IAAqD0O,EAAOhJ,SAASgJ,EAAOlJ,KAAKG,YAMrG,kBAAC,GAAD,OAKJ8E,GAEA,yBAAKnL,UAAU,SACX,4BACK2F,KAAKC,UAAUuF,MAOhCN,EAAQ,GAER8E,GAEA,wBAAI3P,UAAU,SAAQ,uBAAGA,UAAU,YAAYU,cAAY,SAA3D,IAAwEmK,GAGxEA,EAAQ,GAER8E,GAEA,4BAAQ3P,UAAU,WAAW6H,SAAUwD,EAAa/K,QAAS,EAAKgP,aAE1DjE,EACE,kBAAC,IAAD,CACErO,KAAK,OACLsI,MAAM,QACNC,OAAQ,GACRC,MAAO,GACP3H,QAAS,OAGT,uBAAGmC,UAAU,cAAcU,cAAY,UAMnDmK,EAAQ,GAAK8E,GAEb,4BAAQ3P,UAAU,aAAaM,QAASsP,GACpC,uBAAG5P,UAAU,qBAAqBU,cAAY,UAGtD,4BAAQV,UAAU,cAAcM,QAASR,GAEjC6P,EACE,uBAAG3P,UAAU,qBAAqBU,cAAY,SAC9C,uBAAGV,UAAU,sBAAsBU,cAAY,Y,6BAlIlDC,aAyJRE,gBAdE,SAAA9E,GAAK,MAAG,CACrB4T,KAAOnF,GAAiBzO,GACxB4O,KAAOD,GAAW3O,GAClB8O,MAAQD,GAAgB7O,GACxBkP,YAAcD,GAAiBjP,GAC/BoP,WAAaD,GAAgBnP,GAC7BsP,YAAcD,GAAiBrP,GAC/ByC,KAAOpC,EAAiBL,OAER,SAAAiC,GAAQ,MAAG,CAC3B8B,OAAS,kBAAI9B,ENzJc,CAC3BhB,KAAOsO,GAAUU,eMyJjB4D,MAAQ,kBAAI5R,EAASsO,OACrBiD,QAAU,SAAC5E,EAAKlL,GAAN,OAAkBzB,EAASuO,GAAW5B,EAAKlL,QAE1CoB,CAIbwO,IC7JIQ,G,2MACFlQ,kBAAmB,WAAK,IAAD,EACM,EAAKC,OAC9BgN,EAFmB,EACZA,UADY,EACH7F,MACDiG,OAAOrL,K,EAE1BkL,mBAAqB,SAAAC,GACjB,IAAMC,EAAcD,EAAS/F,MAAMiG,OAAOrL,GACpCsL,EAAc,EAAKrN,MAAMmH,MAAMiG,OAAOrL,GAGzCoL,IAAgBE,GACf,EAAKrN,MAAMgN,SAASK,I,EAG5B6C,QAAU,SAAA5J,GAAQ,IAAD,EACmB,EAAKtG,MAA9BmQ,EADM,EACNA,IAAI3J,EADE,EACFA,SAAS4J,EADP,EACOA,SACdC,EAAI7J,EAASF,EAAKvE,IACpBsO,EAMAD,EAAS,CACL9J,OACAE,SAAW6J,EAAE,IAPjBF,EAAI,CACA7J,OACAE,SAAW,K,EAUvB8J,WAAa,SAAAhK,GAAQ,IAAD,EACmB,EAAKtG,MAAjCwG,EADS,EACTA,SAAS4J,EADA,EACAA,SAASG,EADT,EACSA,OACnBF,EAAI7J,EAASF,EAAKvE,IACpBsO,IAEKA,EAAI,EACTD,EAAS,CACL9J,OACAE,SAAW6J,EAAE,IAGjBE,EAAO,CAACjK,W,EAGhBrG,OAAO,WAAK,IAAD,EASH,EAAKD,MAPLqG,EAFG,EAEHA,MACAtH,EAHG,EAGHA,MACAqG,EAJG,EAIHA,QACAoL,EALG,EAKHA,cAEAhK,EAPG,EAOHA,SAGJ,OACI,yBAAKpG,UAAU,aACX,wCAGQgF,GACG,kBAAC,IAAD,CACKhI,KAAK,OACLsI,MAAM,UACNC,OAAQ,GACRC,MAAO,GACP3H,QAAS,QAOrBc,GAEA,yBAAKqB,UAAU,SACX,4BAEQ2F,KAAKC,UAAUjH,KAK/B,yBAAKqB,UAAU,cAEPiG,GAEAmK,EACEA,EAAcvK,KAAI,SAACK,EAAKxE,GACtB,OACI,yBAAK1B,UAAU,cAAcwB,IAAKE,GAC9B,yBACIzB,IACQiG,EAAKoH,MACHpH,EAAKoH,MADP,2CAEsCpH,EAAK9D,KAF3C,mCAIR/B,IAAI,KAER,yBAAKL,UAAU,QACX,4BACKkG,EAAK9D,MAEV,2BAAG,uBAAGpC,UAAU,YAAYU,cAAY,SAAxC,IAAqDwF,EAAKG,MAAML,MAAM,KAAK,KAE/E,yBAAKhG,UAAU,YACX,4BAAQA,UAAU,SAASM,QAAS,kBAAI,EAAKwP,QAAQ5J,KAAO,uBAAGlG,UAAU,aAAaU,cAAY,UAClG,2BAAI0F,EAASF,EAAKvE,KAEQ,IAAtByE,EAASF,EAAKvE,KAEd,4BAAQ3B,UAAU,UAAUM,QAAS,kBAAI,EAAK4P,WAAWhK,KAAO,uBAAGlG,UAAU,cAAcU,cAAY,eAOzHuF,GAASA,EAAMJ,KAAI,SAACK,EAAKxE,GACvB,OACI,yBAAK1B,UAAU,cAAcwB,IAAKE,GAC9B,yBACIzB,IACQiG,EAAKoH,MACHpH,EAAKoH,MADP,2CAEsCpH,EAAK9D,KAF3C,mCAIR/B,IAAI,KAER,yBAAKL,UAAU,QACX,4BACKkG,EAAK9D,MAEV,2BAAG,uBAAGpC,UAAU,YAAYU,cAAY,SAAxC,IAAqDwF,EAAKG,MAAML,MAAM,KAAK,KAE/E,yBAAKhG,UAAU,YACX,4BAAQA,UAAU,UAAS,uBAAGA,UAAU,aAAaU,cAAY,UACjE,gCACA,4BAAQV,UAAU,WAAU,uBAAGmP,MAAM,cAAczO,cAAY,gBAOvF,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,6BAjJOC,aAsKRC,eAAWC,aAdF,SAAA9E,GAAK,MAAI,CAC7BkK,MAAQ2D,GAAe7N,GACvBqU,cAAgBlG,GAAkBnO,GAClC4C,MAAQmL,GAAiB/N,GACzBiJ,QAAUgF,GAAmBjO,GAC7BqK,SAAW,SAAAiK,GAAO,OT7JY,SAAAA,GAAO,OAAIvU,YACzC,CAAC6N,KACD,SAAAzD,GAAO,IAEGoK,EADSpK,EAARyE,KACgBlJ,MAAK,SAAAC,GAAC,OAAEA,EAAEwE,KAAKvE,KAAK0O,KAC3C,OAAGC,EAAkBA,EAAUlK,SACxB,KSuJWmK,CAAmBF,EAAnBE,CAA4BxU,QAE3B,SAAAiC,GAAQ,MAAG,CAClC4O,SAAW,SAACP,GAAD,OAAWrO,EAASoO,GAAeC,KAC9C0D,IAAM,SAAAO,GAAS,OAAGtS,EP/JO,SAAAsS,GAAS,MAAI,CACtCtT,KAAOsO,GAAUK,iBACjBrN,QAAUgS,GO6JiBE,CAAcF,KACzCN,SAAW,SAAAM,GAAS,OAAEtS,EP5JE,SAAAsS,GAAS,MAAI,CACrCtT,KAAOsO,GAAUM,cACjBtN,QAAUgS,GO0JqBG,CAAaH,KAC5CH,OAAS,SAAAG,GAAS,OAAEtS,EPzJE,SAAAsS,GAAS,MAAI,CACnCtT,KAAOsO,GAAUQ,sBACjBxN,QAAUgS,GOuJmBJ,CAAWI,QAGlBzP,CAIxBgP,KCzKIa,G,2MACF/Q,kBAAoB,WAAK,IAAD,EACI,EAAKC,OAC7B4N,EAFoB,EACbA,UADa,EACJhP,KACFuC,S,EAElBlB,OAAO,WAAK,IAAD,EAQH,EAAKD,MANL2J,EAFG,EAEHA,MACAvE,EAHG,EAGHA,QACAgE,EAJG,EAIHA,WACArK,EALG,EAKHA,MACAwJ,EANG,EAMHA,OACApB,EAPG,EAOHA,MAEJ,OACI,yBAAK/G,UAAU,aACX,yBAAKA,UAAU,aAEPrB,GAEA,yBAAKqB,UAAU,SACX,4BACK2F,KAAKC,UAAUjH,KAKxB4K,GAEAA,EAAM1D,KAAI,SAAC2C,EAAK9G,GACZ,OACI,yBAAK1B,UAAU,cAAcwB,IAAKE,EAC9BpB,QAAS,WACL6H,EAAOK,GACP,EAAK5I,MAAMW,QAAQC,KAAnB,UAA2BuG,EAAMI,KAAjC,YAAyCqB,EAAK7G,GAA9C,aAEJ,yBAAK1B,IAAKuI,EAAK0E,YAAa7M,IAAI,KAChC,4BAAKmI,EAAK2E,OAENnE,GACAA,EAAWrH,KAAO6G,EAAK7G,IAEvB,yBAAK3B,UAAU,WACX,uBAAGA,UAAU,YAAYU,cAAY,cAQzDsE,GAEA,kBAAC,IAAD,CACIhI,KAAK,OACLsI,MAAM,UACNC,OAAQ,IACRC,MAAO,IACP3H,QAAS,QAMrB,kBAAC,IAAD,CAAOsJ,KAAI,UAAKJ,EAAMI,KAAX,eACP,kBAAC,GAAD,S,6BAjEGxG,aAwFRC,eACXC,aAfoB,SAAA9E,GAAK,MAAG,CAC5BwN,MAAQd,GAAe1M,GACvBiN,WAAaD,GAAiBhN,GAC9B4C,MAAQgK,GAAiB5M,GACzBiJ,QAAU6D,GAAmB9M,GAC7BgF,OAASQ,EAAiBxF,GAC1ByC,KAAOpC,EAAiBL,OAED,SAAAiC,GAAQ,MAAG,CAClCwP,SAAW,SAAC/N,GAAD,OAAazB,EAASsL,GAAoB7J,KACrD0I,OAAS,SAACK,GAAD,OAAQxK,EAAS0L,GAAWlB,QAKrC3H,CAIE6P,KCxGAC,G,2MAEFhR,kBAAoB,WAChB,EAAKC,MAAME,U,EAGfD,OAAO,WACH,OACI,yBAAKG,UAAU,SACX,kBAAC,EAAD,MACA,kBAAC,GAAD,Q,6BAVIW,aAqBLE,eACX,MALuB,SAAA7C,GAAQ,MAAI,CACnC8B,OAAS,kBAAI9B,EAASjB,SAGX8D,CAGb8P,IC1CIC,GAAe,SAAA7U,GAAK,OAAIA,EAAM8U,QAEvBC,GAAmBhV,YAC5B,CAAC8U,KACD,SAAAC,GAAM,OAAIA,EAAOE,eAERC,GAAqBlV,YAC9B,CAAC8U,KACD,SAAAC,GAAM,OAAIA,EAAOI,iBAERC,GAAuBpV,YAChC,CAAC8U,KACD,SAAAC,GAAM,OAAIA,EAAOM,mBAERC,GAAuBtV,YAChC,CAAC8U,KACD,SAAAC,GAAM,OAAIA,EAAOQ,mBCXNC,GAPK,CAChBC,kBAAmB,oBACnBC,oBAAsB,sBACtBC,kBAAoB,oBACpBC,cAAgB,iBCWPC,GAAqB,SAAAlS,GAC9B,OAAO,SAAAzB,GACHA,EAbkB,CACtBhB,KAAOsU,GAAYC,oBAaf9T,EAAW6B,IAAX,mBAA2BG,EAA3B,kBACKvB,MAAK,SAAAC,GAAG,OAAEH,GAZA4T,EAYwBzT,EAAIE,KAZd,CACjCrB,KAAOsU,GAAYE,oBACnBlT,QAAUsT,KAFS,IAAAA,KAaVnT,OAAM,SAAAC,GAAG,OAAEV,GATHW,EASyBD,EAAIE,SATpB,CAC1B5B,KAAOsU,GAAYG,kBACnBnT,QAAUK,KAFO,IAAAA,OCTfkT,GAAgB,SAAA9V,GAAK,OAAEA,EAAM2K,SAEtBoL,GAAoBhW,YAC7B,CAAC+V,KACD,SAAAnL,GAAO,OAAIA,EAAQqL,gBAEVC,GAAsBlW,YAC/B,CAAC+V,KACD,SAAAnL,GAAO,OAAIA,EAAQuL,kBAEVC,GAAwBpW,YACjC,CAAC+V,KACD,SAAAnL,GAAO,OAAIA,EAAQyL,oBAEV5H,GAAmBzO,YAC5B,CAAC+V,KACD,SAAAnL,GAAO,OAAIA,EAAQ4D,eAGV8H,GAAyBtW,YAClC,CAAC+V,KACD,SAAAnL,GACI,IAAM0H,EAAO1H,EAAQ4D,YACrB,OAAG5D,EAAQqL,aACJ3D,EACQ1H,EAAQqL,aAAa5H,QAAO,SAAA1D,GAAC,OAAEA,EAAErE,KAAKgI,cAAcC,SAAS+D,EAAKhE,kBAElE1D,EAAQqL,aAGZ,QAKNM,GAAwB,SAAAC,GAAU,OAAGxW,YAC9C,CAAC+V,KACD,SAAAnL,GACI,IAAM6L,EAAQ7L,EAAQiE,KAAK6H,WAAU,SAAA9Q,GAAC,OAAEA,EAAEgF,QAAQ/E,KAAO2Q,KACzD,OAAGC,GAAS,EACD7L,EAAQiE,KAAK4H,GAAOnM,SAExB,MAIFqM,GAAqB3W,YAC9B,CAAC+V,KACD,SAAAnL,GAAO,OAAIA,EAAQiE,QAGV+H,GAA0B5W,YACnC,CAAC+V,KACD,SAAAnL,GACI,IAAImE,EAAQ,EAMZ,OALGnE,EAAQiE,KAAKgI,OAAS,GACrBjM,EAAQiE,KAAKG,SAAQ,SAAA8H,GACjB/H,GAAS+H,EAAIlM,QAAQE,eAAegM,EAAIxM,YAGzCyE,KAGFgI,GAAuB/W,YAChC,CAAC+V,KACD,SAAAnL,GAAO,OAAIA,EAAQoM,mBAEVC,GAAuBjX,YAChC,CAAC+V,KACD,SAAAnL,GAAO,OAAIA,EAAQsM,mBAEVC,GAAsBnX,YAC/B,CAAC+V,KACD,SAAAnL,GAAO,OAAIA,EAAQwM,kBCxDRC,GAnBM,CACjBC,mBAAqB,qBACrBC,qBAAuB,uBACvBC,mBAAqB,qBAErBC,sBAAwB,wBAExBC,oBAAsB,sBACtBC,yBAA2B,2BAC3BC,uBAAyB,yBAEzBC,oBAAsB,sBAEtBC,kBAAoB,qBACpBC,qBAAuB,uBACvBC,mBAAqB,sBCAZC,GAAsB,SAAAC,GAC/B,OAAO,SAAAhW,GACHA,EAbmB,CACvBhB,KAAOmW,GAAaC,qBAahB3V,EAAW6B,IAAX,0BAAkC0U,EAAlC,eACK9V,MAAK,SAAAC,GAAG,OAAEH,GAZCwI,EAYwBrI,EAAIE,KAZhB,CAChCrB,KAAOmW,GAAaE,qBACpB/U,QAAUkI,KAFU,IAAAA,KAaX/H,OAAM,SAAAC,GAAG,OAAEV,GATFW,EASyBD,EAAIE,SATpB,CAC3B5B,KAAOmW,GAAaG,mBACpBhV,QAAUK,KAFQ,IAAAA,OAiBTsV,GAAmB,SAAAvN,GAAO,MAAI,CACvC1J,KAAOmW,GAAaK,oBACpBlV,QAAUoI,IAEDwN,GAAwB,SAAAxN,GAAO,MAAI,CAC5C1J,KAAOmW,GAAaM,yBACpBnV,QAAUoI,IAEDyN,GAAsB,SAAAzN,GAAO,MAAI,CAC1C1J,KAAOmW,GAAaO,uBACpBpV,QAAUoI,IAkBD0N,GAAiB,SAAC/V,EAAKoB,GAChC,OAAO,SAAAzB,GACHA,EAbsB,CAC1BhB,KAAOmW,GAAaS,oBAahBnW,EAAWQ,KAAX,mBAA4BwB,EAA5B,kBAAsDpB,GACjDH,MAAK,SAAAC,GAAG,OAAEH,GAZIqW,EAYwBlW,EAAIE,KAZd,CACrCrB,KAAOmW,GAAaU,qBACpBvV,QAAU+V,KAFa,IAAAA,KAad5V,OAAM,SAAAC,GAAG,OAAEV,GATCW,EASyBD,EAAIE,SATpB,CAC9B5B,KAAOmW,GAAaW,mBACpBxV,QAAWK,KAFU,IAAAA,OC3BnB2V,G,2MACFvY,MAAQ,CACJuS,SAAU,G,EAEdC,iBAAmB,WACf,EAAK9G,SAAS,CACV6G,SAAW,EAAKvS,MAAMuS,W,EAG9BiG,eAAiB,WAAK,IAAD,EACe,EAAK3U,MAA9B+K,EADU,EACVA,KAAKnM,EADK,EACLA,KAAKgW,EADA,EACAA,YACXC,EAAW,GACjB9J,EAAKG,SAAQ,SAAC4J,GACV,IAAMC,EAAa,CACfhT,GAAK+S,EAAOhO,QAAQ/E,GACpByE,SAAWsO,EAAOtO,UAEtBqO,EAASjU,KAAKmU,MAElBH,EAAYC,EAAWjW,EAAKuC,S,EAEhClB,OAAS,WAAK,IAENyO,EAEA,EAAKvS,MAFLuS,QAFK,EAkBL,EAAK1O,MAZL+K,EANK,EAMLA,KACAwF,EAPK,EAOLA,OACAP,EARK,EAQLA,MAEA/E,EAVK,EAULA,MAEAiI,EAZK,EAYLA,gBACAnU,EAbK,EAaLA,MACAqG,EAdK,EAcLA,QAKJ,OACI,yBAAKhF,UAAU,iBACX,yBAAKA,UAAWsO,EAAU,6BAA+B,sBAEjD3D,GAEAA,EAAK9E,KAAI,SAAC6O,EAAOhT,GACb,OACI,yBAAK1B,UAAU,eAAewB,IAAKE,GAC/B,4BACKgT,EAAOhO,QAAQtE,MAEpB,2BAAIsS,EAAOtO,SAAX,IAAsBsO,EAAOhO,QAAQC,gBACrC,4BAAI,uBAAG3G,UAAU,YAAYU,cAAY,SAAzC,IAAsDgU,EAAOhO,QAAQE,eAAiB8N,EAAOtO,UAC7F,4BAAQpG,UAAU,iBAAiBM,QAAS,kBAAI6P,EAAOuE,KAAS,uBAAG1U,UAAU,cAAcU,cAAY,cAMnHoS,GAEA,yBAAK9S,UAAU,mBACX,4BAAI,uBAAGA,UAAU,YAAYU,cAAY,SAAzC,IAAsDoS,EAAgBhN,YAAYE,MAAM,KAAK,IAC7F,yBAAKhG,UAAU,YAEP8S,EAAgBtM,SAASX,KAAI,SAAC6O,EAAShT,GACnC,OACI,yBAAK1B,UAAU,eAAewB,IAAKE,GAC/B,4BACKgT,EAAOhO,QAAQtE,MAEpB,2BAAG,uBAAGpC,UAAU,cAAcU,cAAY,SAA1C,IAAuDgU,EAAOtO,UAC9D,2BAAG,uBAAGpG,UAAU,YAAYU,cAAY,SAAxC,IAAqDgU,EAAOtO,SAAWsO,EAAOhO,QAAQE,sBAS9GjI,GAEA,yBAAKqB,UAAU,SACX,4BACK2F,KAAKC,UAAUjH,MAM5BkM,EAAQ,GAERyD,GAGA,yBAAKtO,UAAU,uBACX,4BAAI,uBAAGA,UAAU,YAAYU,cAAY,SAAzC,IAAsDmK,IAI1DA,EAAQ,GAERyD,GAEA,4BAAQtO,UAAU,sBAAsBM,QAASsP,GAC7C,uBAAG5P,UAAU,cAAcU,cAAY,UAI/C,4BAAQV,UAAU,uBAAuBM,QAAS,EAAKiO,kBAE/CD,EACE,uBAAGtO,UAAU,cAAcU,cAAY,SACvC,uBAAGV,UAAU,kBAAkBU,cAAY,UAIrD,4BACIV,UAAWsO,EAAU,0BAA4B,mBACjDzG,UAAWgD,GAAS7F,EACpB1E,QAAS,EAAKiU,gBAGVvP,EACE,kBAAC,IAAD,CACEhI,KAAK,OACLsI,MAAM,QACNC,OAAQ,GACRC,MAAO,GACP3H,QAAS,OAGX,uBAAGmC,UAAU,kBAAkBU,cAAY,Y,6BAtI1CC,aA8JZC,eAAWC,aAfT,SAAA9E,GAAK,MAAG,CACrB4O,KAAO8H,GAAmB1W,GAC1B8O,MAAQ6H,GAAwB3W,GAChC+W,gBAAkBD,GAAqB9W,GACvC4C,MAAQsU,GAAoBlX,GAC5BiJ,QAAU+N,GAAqBhX,GAC/ByC,KAAOpC,EAAiBL,OAGR,SAAAiC,GAAQ,MAAG,CAC3BmS,OAAS,SAAAzJ,GAAO,OAAI1I,EAASkW,GAAsBxN,KACnDkJ,MAAQ,kBAAI5R,ED3IsB,CAClChB,KAAOmW,GAAaQ,uBC2IpBa,YAAc,SAACnW,EAAKoB,GAAN,OAAmBzB,EAASoW,GAAe/V,EAAOoB,QAG1CoB,CAIxByT,KCzKIM,G,2MACF7Y,MAAQ,CACJ8Y,KAAO,G,EAEXC,eAAiB,SAAA3P,GACb,EAAKsC,SAAS,CACVoN,KAAO1P,EAAEC,OAAOH,S,EAIxB8P,SAAW,SAAArO,GAAW,IAAD,EACa,EAAK9G,MAA5BmQ,EADU,EACVA,IAAIiF,EADM,EACNA,OAAO5O,EADD,EACCA,SACXyO,EAAQ,EAAK9Y,MAAb8Y,KACGzO,EAASM,EAAQ/E,IAEvBqT,EAAO,CACHtO,UACAN,SAAWyO,IAGf9E,EAAI,CACArJ,UACAN,SAAWyO,K,EAMvBhV,OAAO,WAAK,IAAD,EAKH,EAAKD,MAHLwG,EAFG,EAEHA,SACAM,EAHG,EAGHA,QAIAmO,EAEA,EAAK9Y,MAFL8Y,KAGJ,OACI,yBAAK7U,UAAU,YACX,2BACIA,UAAU,QACVqF,YAAc,mBACdrI,KAAK,SACL+K,IAAK,EACL9C,MAAO4P,EACP3P,SAAU,EAAK4P,iBAIf1O,EAASM,EAAQ/E,IACd,4BAAQ3B,UAAU,iBAAiBM,QAAS,kBAAI,EAAKyU,SAASrO,KAAU,uBAAG1G,UAAU,eAAeU,cAAY,UACjH,4BAASJ,QAAS,kBAAI,EAAKyU,SAASrO,IAAUmB,UAAWgN,GAAM,uBAAG7U,UAAU,aAAaU,cAAY,Y,6BApDpGC,aAqERE,gBAVE,SAAA9E,GAAK,MAAI,CACtBqK,SAAW,SAAAkM,GAAU,OAAGD,GAAsBC,EAAtBD,CAAkCtW,QAG1C,SAAAiC,GAAQ,MAAI,CAC5B+R,IAAM,SAAAtJ,GAAC,OAAEzI,EAASiW,GAAiBxN,KACnC0J,OAAS,SAAA1J,GAAC,OAAEzI,EAASkW,GAAsBzN,KAC3CuO,OAAS,SAAAvO,GAAC,OAAEzI,EAASmW,GAAoB1N,QAG9B5F,CAIb+T,ICvDIK,G,2MAIFtV,kBAAoB,WAAK,IAAD,EAC6B,EAAKC,MAA5B+B,EADN,EACboF,MAASiG,OAAUrL,IAC1BuT,EAFoB,EACcA,aACtBvT,I,EAGhBwT,WAAa,SAAAzO,GAAW,IAAD,EACW,EAAK9G,MAA5BmQ,EADY,EACZA,IAAIiF,EADQ,EACRA,OACL/E,GAAI7J,EAFS,EACDA,UACCM,EAAQ/E,IACxBsO,EACC+E,EAAO,CACHtO,UACAN,SAAW6J,EAAE,IAGjBF,EAAI,CACArJ,UACAN,SAAW,K,EAIvBgP,cAAgB,SAAA1O,GAAW,IAAD,EACW,EAAK9G,MAA/BoV,EADe,EACfA,OAAO7E,EADQ,EACRA,OACRF,GAAI7J,EAFY,EACDA,UACFM,EAAQ/E,IACxBsO,GAAI,EACH+E,EAAO,CACHtO,UACAN,SAAW6J,EAAE,IAGjBE,EAAO,CACHzJ,a,EAKZmG,mBAAqB,SAAAC,GACjB,IAAMuI,EAAavI,EAAS/F,MAAMiG,OAAOrL,GACnC2T,EAAa,EAAK1V,MAAMmH,MAAMiG,OAAOrL,GACxC0T,IAAeC,GAAY,EAAK1V,MAAMsV,YAAYI,I,EAGzDzV,OAAS,WAAK,IAAD,EAUL,EAAKD,MARLiR,EAFK,EAELA,OACA7L,EAHK,EAGLA,QACArG,EAJK,EAILA,MACA4W,EALK,EAKLA,OACAC,EANK,EAMLA,iBACAlL,EAPK,EAOLA,YAPK,EAQLlE,SAMJ,OACI,yBAAKpG,UAAU,gBAEP6Q,GAEA,yBAAK7Q,UAAU,mBACX,4BACK6Q,EAAOzO,MAEZ,2BAAG,uBAAGpC,UAAU,cAAcU,cAAY,SAA1C,IAAuDmQ,EAAOxO,gBAC9D,2BAAG,uBAAGrC,UAAU,mBAAmBU,cAAY,SAA/C,IAA4DmQ,EAAOvO,UAG3E,yBAAKtC,UAAU,iBAEPrB,GAEA,yBAAKqB,UAAU,SACX,4BACK2F,KAAKC,UAAUjH,KAKxBqG,GAEA,kBAAC,IAAD,CACIhI,KAAK,OACLsI,MAAM,UACNC,OAAQ,IACRC,MAAO,IACP3H,QAAS,OAMb2X,GAEAA,EAAiB3P,KAAI,SAACY,EAAE/E,GACpB,OACI,yBAAK1B,UAAU,UAAUwB,IAAKE,GAC1B,4BACK+E,EAAErE,MAEP,yBAAKpC,UAAU,QACX,2BAAG,uBAAGA,UAAU,YAAYU,cAAY,SAAxC,IAAqD+F,EAAEG,gBACvD,kCAAO,uBAAG5G,UAAU,sBAAsBU,cAAY,SAAtD,IAAmE+F,EAAEE,iBAEzE,kBAAC,GAAD,CAAWD,QAASD,SAMxC,yBAAKzG,UAAU,kBACX,uBAAGA,UAAU,eAAeU,cAAY,SACxC,2BACI1D,KAAK,OACLoF,KAAK,cACLT,GAAG,GACH0D,YAAY,iBACZJ,MAAOqF,EACPpF,SAAU,SAAAC,GACNoQ,EAAOpQ,EAAEC,OAAOH,WAM5B,kBAAC,GAAD,Q,6BAjIUtE,aA0JXC,eAAWC,aAlBT,SAAA9E,GAAK,MAAI,CACtB8U,OAASO,GAAqBrV,GAC9ByK,SAAWsL,GAAkB/V,GAC7ByZ,iBAAmBpD,GAAuBrW,GAC1C4C,MAAQqT,GAAoBjW,GAC5BiJ,QAAUkN,GAAsBnW,GAChCuO,YAAcC,GAAiBxO,GAC/BqK,SAAW,SAAAkM,GAAU,OAAID,GAAsBC,EAAtBD,CAAkCtW,QAG3C,SAAAiC,GAAQ,MAAI,CAC5BkX,YAAc,SAAAlB,GAAS,OAAGhW,EAAS+V,GAAoBC,KACvDuB,OAAS,SAAAnH,GAAI,OAAEpQ,EHjKW,SAAAoQ,GAAI,MAAI,CAClCpR,KAAOmW,GAAaI,sBACpBjV,QAAU8P,GG+JcqH,CAAerH,KACvC2B,IAAM,SAAAtJ,GAAC,OAAIzI,EAASiW,GAAiBxN,KACrC0J,OAAS,SAAA1J,GAAC,OAAIzI,EAASkW,GAAsBzN,KAC7CuO,OAAS,SAAAvO,GAAC,OAAIzI,EAASmW,GAAoB1N,QAGrB5F,CAIxBoU,KCrKIS,G,2MAEF/V,kBAAoB,WAAK,IAAD,EACM,EAAKC,MAAxBpB,EADa,EACbA,MACPmX,EAFoB,EACRA,YACDnX,EAAKuC,S,EAEpBmH,qBAAuB,YAEnBC,EADiB,EAAKvI,MAAfuI,QACA,O,EAGXtI,OAAS,WAAK,IAAD,EAUL,EAAKD,MARLgW,EAFK,EAELA,QACA5Q,EAHK,EAGLA,QACArG,EAJK,EAILA,MACAmP,EALK,EAKLA,QACA/G,EANK,EAMLA,MACAxG,EAPK,EAOLA,QAEA4H,EATK,EASLA,OAEJ,OACI,yBAAKnI,UAAU,eAEX,yBAAKA,UAAU,eACX,0CAGQgF,GAEA,kBAAC,IAAD,CACIhI,KAAK,OACLsI,MAAM,UACNC,OAAQ,GACRC,MAAO,GACP3H,QAAS,QAMjB+X,GAEAA,EAAQ/P,KAAI,SAACgL,EAAOnP,GAChB,OACI,yBAAK1B,UAAU,aAAawB,IAAKE,EAC7BpB,QAAS,WACL6H,EAAO0I,GACPtQ,EAAQC,KAAR,UAAgBuG,EAAMI,KAAtB,YAA8B0J,EAAOlP,GAArC,gBAGJ,4BAAI,uBAAG3B,UAAU,sBAAsBU,cAAY,SAAnD,IAAgEmQ,EAAOzO,MACvE,2BAAG,uBAAGpC,UAAU,cAAcU,cAAY,SAA1C,IAAuDmQ,EAAOxO,gBAC9D,2BAAG,uBAAGrC,UAAU,mBAAmBU,cAAY,SAA/C,IAA4DmQ,EAAOvO,SAC/DwL,GAEAA,EAAQnM,KAAOkP,EAAOlP,IAEtB,uBAAG3B,UAAU,UAAS,uBAAGA,UAAU,YAAYU,cAAY,cAQ3E/B,GAEA,yBAAKqB,UAAU,SACX,4BACK2F,KAAKC,UAAUjH,MAKhC,kBAAC,IAAD,CAAOwI,KAAI,UAAKJ,EAAMI,KAAX,kBACP,kBAAC,GAAD,S,6BA7EKxG,aAkGVC,eAAWC,aAZT,SAAA9E,GAAK,MAAI,CACtB6Z,QAAU9E,GAAiB/U,GAC3BiJ,QAAUkM,GAAqBnV,GAC/B4C,MAAQqS,GAAmBjV,GAC3B+R,QAAUsD,GAAqBrV,GAC/ByC,KAAOpC,EAAiBL,OAER,SAAAiC,GAAQ,MAAI,CAC5B2X,WAAa,SAAAlW,GAAS,OAAGzB,EAAS2T,GAAmBlS,KACrD0I,OAAS,SAAA0I,GAAM,OAAG7S,EPrGM,SAAA6S,GAAM,MAAI,CAClC7T,KAAOsU,GAAYI,cACnBpT,QAAUuS,GOmGiBgF,CAAahF,QAGlBhQ,CAIxB6U,KCpHII,G,2MACFnW,kBAAoB,WAChB,EAAKC,MAAME,U,EAEfD,OAAS,WACL,OACI,yBAAKG,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,GAAD,Q,6BARQW,aAmBTC,eAAWC,YACtB,MALgB,SAAA7C,GAAQ,MAAI,CAC5B8B,OAAS,kBAAI9B,EAASjB,SAGA8D,CAGxBiV,KCrBIC,G,2MACFpW,kBAAoB,YAEhBG,EADiB,EAAKF,MAAfE,W,EAGXD,OAAO,WAAK,IACDrB,EAAQ,EAAKoB,MAAbpB,KACP,OACI,yBAAKwB,UAAU,WAEPxB,GAEA,yBAAKwB,UAAU,aACX,yBAAKC,IACGzB,EAAK0B,cACH1B,EAAK0B,cADP,2CAEsC1B,EAAKA,KAAK2B,WAFhD,YAE8D3B,EAAKA,KAAK4B,UAFxE,0CAIAC,IAAI,KAEZ,4BAAK7B,EAAKA,KAAK2B,WAAf,IAA4B3B,EAAKA,KAAK4B,WACtC,yBAAKJ,UAAU,gBACX,2BAAG,uBAAGA,UAAU,cAAcU,cAAY,SAA1C,IAAuDlC,EAAK6D,gBAC5D,2BAAG,uBAAGrC,UAAU,iBAAiBU,cAAY,SAA7C,IAA0DlC,EAAKA,KAAKwX,W,6BAvB1ErV,aAyCPC,eAAWC,aART,SAAA9E,GAAK,MAAI,CACtByC,KAAOpC,EAAiBL,OAGD,SAAAiC,GAAQ,MAAK,CACpC8B,OAAS,kBAAI9B,EAASjB,SAGA8D,CAIxBkV,KCxCIE,G,2MAEJpW,OAAS,WAAK,IAEVqW,EACE,EAAKtW,MADPsW,OAEF,OAEI,kBAAC,IAAD,KACGA,GAAU,kBAAC,EAAD,MACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO9O,OAAK,EAACD,KAAK,KACb+O,EAAS,kBAAC,IAAD,CAAUzV,GAAG,UAAY,kBAAC,GAAD,OAEvC,kBAAC,IAAD,CAAQ0G,KAAK,SACV+O,EAAS,kBAAC,GAAD,MAAW,kBAAC,IAAD,CAAUzV,GAAG,OAEpC,kBAAC,IAAD,CAAO2G,OAAK,EAACD,KAAK,aACb+O,EAAS,kBAAC,IAAD,CAAUzV,GAAG,UAAY,kBAAC,GAAD,OAEvC,kBAAC,IAAD,CAAO0G,KAAK,YACP+O,EAAS,kBAAC,GAAD,MAAc,kBAAC,IAAD,CAAUzV,GAAG,OAEzC,kBAAC,IAAD,CAAO0G,KAAK,WACP+O,EAAS,kBAAC,GAAD,MAAa,kBAAC,IAAD,CAAUzV,GAAG,OAExC,kBAAC,IAAD,CAAO0G,KAAK,UACP+O,EAAS,kBAAC,GAAD,MAAY,kBAAC,IAAD,CAAUzV,GAAG,OAEvC,kBAAC,IAAD,CAAO0G,KAAK,cACP+O,EAAS,kBAAC,GAAD,MAAgB,kBAAC,IAAD,CAAUzV,GAAG,U,6BA9BrCE,aA8CHE,gBAHS,SAAA9E,GAAK,MAAI,CAC/Bma,OAAS5Z,EAAsBP,MAElB8E,CAEboV,ICzDkBE,QACW,cAA7BpH,OAAOqH,SAASC,UAEe,UAA7BtH,OAAOqH,SAASC,UAEhBtH,OAAOqH,SAASC,SAAStP,MACvB,2D,+EChBAuP,GAAgB,CAClBja,WAAa,KACbK,aAAc,EACdF,UAAY,KAEZ4B,MAAQ,KACRxB,WAAa,MAuDF2Z,GApDS,WAAmC,IAAlCxa,EAAiC,uDAAzBua,GAAgB1O,EAAS,uCACtD,OAAOA,EAAO5K,MACV,KAAKC,EAAcO,YACf,OAAO,gBACAzB,EADP,CAEIM,WAAa,KACbG,UAAY,KACZ4B,MAAQ,KACRxB,WAAa,OAErB,KAAKK,EAAcC,iBACf,OAAO,gBACAnB,EADP,CAEIW,aAAc,EACdF,UAAY,KACZI,WAAa,OAGjB,KAAKK,EAAcE,mBACf,OAAO,gBACApB,EADP,CAEIqC,MAAQwJ,EAAOtJ,QACf5B,aAAc,IAEtB,KAAKO,EAAcG,iBACf,OAAO,gBACArB,EADP,CAEIa,WAAagL,EAAOtJ,QACpB5B,aAAc,IAEtB,KAAKO,EAAcI,WACf,OAAO,gBACAtB,EADP,CAEIW,aAAc,IAEtB,KAAKO,EAAcK,aACf,OAAO,gBACAvB,EADP,CAEIM,WAAauL,EAAOtJ,QACpB5B,aAAc,IAEtB,KAAKO,EAAcM,WACf,OAAO,gBACAxB,EADP,CAEIS,UAAYoL,EAAOtJ,QACnB5B,aAAc,IAE1B,QACI,OAAOX,ICzDbua,GAAiB,CACnBra,YAAa,GAmBFua,GAdQ,WAAmC,IAAlCza,EAAiC,uDAAzBua,GAAgB1O,EAAS,uCACrD,OAAOA,EAAO5K,MACV,KAAKH,EAAaC,YACd,OAAO,gBACAf,EADP,CAEIE,YAAcF,EAAME,aAI5B,QACI,OAAOF,IChBbua,GAAgB,CAClB/W,YAAc,KACd6B,cAAgB,KAChBF,iBAAkB,EAElBI,cAAgB,KAEhBO,cAAgB,KAChBE,aAAe,KACfE,gBAAiB,GA0DNwU,GArDO,WAAiC,IAAhC1a,EAA+B,uDAAvBua,GAAc1O,EAAS,uCAElD,OAAOA,EAAO5K,MACV,KAAK6B,EAAYK,oBACb,OAAO,gBACAnD,EADP,CAEIkG,gBAAiB,EACjBF,aAAe,KACfF,cAAgB,OAExB,KAAKhD,EAAYO,sBACb,OAAO,gBACArD,EADP,CAEIkG,gBAAiB,EAEjBJ,cAAgB+F,EAAOtJ,UAE/B,KAAKO,EAAYM,oBACb,OAAO,gBACApD,EADP,CAEIkG,gBAAiB,EACjBF,aAAe6F,EAAOtJ,UAE9B,KAAKO,EAAYI,cACb,OAAO,gBACAlD,EADP,CAEIuF,cAAgBsG,EAAOtJ,UAE/B,KAAKO,EAAYC,kBACb,OAAO,gBACA/C,EADP,CAEImF,iBAAkB,EAClBE,cAAgB,OAExB,KAAKvC,EAAYE,oBACb,OAAO,gBACAhD,EADP,CAEIwD,YAAcqI,EAAOtJ,QACrB4C,iBAAkB,IAE1B,KAAKrC,EAAYG,kBACb,OAAO,gBACAjD,EADP,CAEIqF,cAAgBwG,EAAOtJ,QACvB4C,iBAAkB,IAG1B,QACI,OAAOnF,IC7Dbua,GAAgB,CAClB5N,UAAY,KACZE,YAAc,KACdE,eAAgB,EAEhBE,WAAa,MAmCF0N,GAhCK,WAA+B,IAA9B3a,EAA6B,uDAAvBua,GAAc1O,EAAS,uCAC9C,OAAOA,EAAO5K,MACV,KAAKiM,GAAUC,YACX,OAAO,gBACAnN,EADP,CAEI+M,eAAgB,EAChBF,aAAc,IAEtB,KAAKK,GAAUE,cACX,OAAO,gBACApN,EADP,CAEI2M,UAAYd,EAAOtJ,QACnBwK,eAAgB,IAExB,KAAKG,GAAUG,YACX,OAAO,gBACArN,EADP,CAEI6M,YAAchB,EAAOtJ,QACrBwK,eAAgB,IAGxB,KAAKG,GAAUI,YACX,OAAO,gBACAtN,EADP,CAEIiN,WAAapB,EAAOtJ,UAG5B,QACI,OAAOvC,I,SCpCbua,GAAgB,CAClBzM,UAAY,KACZE,YAAc,KACdE,eAAgB,EAEhBK,YAAc,GACdK,KAAO,GACPF,YAAa,EAEbQ,YAAc,KACdE,WAAa,KACbE,aAAc,GA2FHsL,GAxFI,WAA+B,IAA9B5a,EAA6B,uDAAvBua,GAAc1O,EAAS,uCAC7C,OAAOA,EAAO5K,MACV,KAAKsO,GAAUW,eACX,OAAO,gBACAlQ,EADP,CAEIsP,aAAc,EACdF,WAAa,KACbF,YAAc,OAEtB,KAAKK,GAAUY,iBACX,OAAO,gBACAnQ,EADP,CAEIkP,YAAcrD,EAAOtJ,QACrB+M,aAAc,IAEtB,KAAKC,GAAUa,eACX,OAAO,gBACApQ,EADP,CAEIoP,WAAWvD,EAAOtJ,QAClB+M,aAAc,IAEtB,KAAKC,GAAUS,WACX,OAAO,gBACAhQ,EADP,CAEI4O,KAAO,KAEf,KAAKW,GAAUU,YACX,OAAO,gBACAjQ,EADP,CAEI0O,YAAc1O,EAAM0O,aAE5B,KAAKa,GAAUK,iBAEX,OAAO,gBACA5P,EADP,CAEI4O,KAAI,uBAAO5O,EAAM4O,MAAb,CAAkB/C,EAAOtJ,UAC7B2M,YAAc,OAEtB,KAAKK,GAAUM,cACX,IAAMgL,EAAU7a,EAAM4O,KAChBkM,EAAUjP,EAAOtJ,QACjBiU,EAAQqE,EAAQpE,WAAU,SAAA9Q,GAAC,OAAEA,EAAEwE,KAAKvE,KAAKkV,EAAQ3Q,KAAKvE,MAE5D,OADAiV,EAAQE,OAAOvE,EAAM,GACd,gBACAxW,EADP,CAEI4O,KAAI,uBAAOiM,GAAP,CAAehP,EAAOtJ,YAIlC,KAAKgN,GAAUQ,sBACX,IAAMiL,EAAYhb,EAAM4O,KAClBzE,EAAO0B,EAAOtJ,QACd0Y,EAAUD,EAAUvE,WAAU,SAAA9Q,GAAC,OAAEA,EAAEwE,KAAKvE,KAAKuE,EAAKA,KAAKvE,MAE7D,OADAoV,EAAUD,OAAOE,EAAQ,GAClB,gBACAjb,EADP,CAEI4O,KAAI,aAAOoM,KAEnB,KAAKzL,GAAUI,YAEX,OAAO,gBACA3P,EADP,CAEIuO,YAAc1C,EAAOtJ,UAE7B,KAAKgN,GAAUC,YACX,OAAO,gBACAxP,EADP,CAEIkO,eAAgB,EAChBF,YAAc,OAEtB,KAAKuB,GAAUE,cACX,OAAO,gBACAzP,EADP,CAEI8N,UAAYjC,EAAOtJ,QACnB2L,eAAgB,IAExB,KAAKqB,GAAUG,YACX,OAAO,gBACA1P,EADP,CAEIgO,YAAcnC,EAAOtJ,QACrB2L,eAAgB,IAGxB,QACI,OAAOlO,IClGbua,GAAgB,CAClBvF,YAAY,KACZE,cAAgB,KAChBE,iBAAgB,EAEhBE,gBAAkB,MAqCP4F,GAjCO,WAA+B,IAA9Blb,EAA6B,uDAAvBua,GAAc1O,EAAS,uCAEhD,OAAOA,EAAO5K,MACV,KAAKsU,GAAYC,kBACb,OAAO,gBACAxV,EADP,CAEIgV,YAAc,KACdE,cAAc,KACdE,iBAAkB,IAE1B,KAAKG,GAAYE,oBACb,OAAO,gBACAzV,EADP,CAEIgV,YAAcnJ,EAAOtJ,QACrB6S,iBAAkB,IAE1B,KAAKG,GAAYG,kBACb,OAAO,gBACA1V,EADP,CAEIkV,cAAcrJ,EAAOtJ,QACrB6S,iBAAkB,IAE1B,KAAKG,GAAYI,cACb,OAAO,gBACA3V,EADP,CAEIsV,gBAAkBzJ,EAAOtJ,UAGjC,QACI,OAAOvC,ICtCbua,GAAgB,CAClBvE,aAAe,KACfE,eAAiB,KACjBE,kBAAmB,EAEnB7H,YAAc,GACdK,KAAO,GAEPmI,gBAAkB,KAClBE,iBAAkB,EAClBE,eAAiB,MAmGNgE,GA/FQ,WAAmC,IAAlCnb,EAAiC,uDAAzBua,GAAgB1O,EAAS,uCAErD,OAAOA,EAAO5K,MACV,KAAKmW,GAAaS,kBACd,OAAO,gBACA7X,EADP,CAEIiX,iBAAkB,EAClBF,gBAAkB,KAClBI,eAAiB,OAEzB,KAAKC,GAAaU,qBACd,OAAO,gBACA9X,EADP,CAEI+W,gBAAkBlL,EAAOtJ,QACzB0U,iBAAkB,EAClBrI,KAAO,KAEf,KAAKwI,GAAaW,mBACd,OAAO,gBACA/X,EADP,CAEImX,eAAiBtL,EAAOtJ,QACxB0U,iBAAkB,IAE1B,KAAKG,GAAaQ,oBACd,OAAO,gBACA5X,EADP,CAEI4O,KAAO,KAEf,KAAKwI,GAAaK,oBACd,uBACOzX,EADP,CAEI4O,KAAI,uBAAO5O,EAAM4O,MAAb,CAAkB/C,EAAOtJ,UAC7BwU,gBAAkB,OAE1B,KAAKK,GAAaM,yBACd,IAAMmD,EAAU7a,EAAM4O,KAChB4H,EAAQqE,EAAQpE,WAAU,SAAA9Q,GAAC,OAAEA,EAAEgF,QAAQ/E,KAAKiG,EAAOtJ,QAAQoI,QAAQ/E,MAEzE,OAAG4Q,GAAS,GACRqE,EAAQE,OAAOvE,EAAQ,GAChB,gBACAxW,EADP,CAEI4O,KAAI,aAAOiM,MAIZ,gBACA7a,GAGX,KAAKoX,GAAaO,uBACd,IAAMqD,EAAYhb,EAAM4O,KAClBqM,EAAUD,EAAUvE,WAAU,SAAA9Q,GAAC,OAAEA,EAAEgF,QAAQ/E,KAAKiG,EAAOtJ,QAAQoI,QAAQ/E,MAE7E,OAAGqV,GAAW,GACVD,EAAUD,OAAOE,EAAU,GACpB,gBACAjb,EADP,CAEI4O,KAAI,uBAAOoM,GAAP,CAAiBnP,EAAOtJ,aAI7B,gBACAvC,GAGX,KAAKoX,GAAaI,sBACd,OAAO,gBACAxX,EADP,CAEIuO,YAAc1C,EAAOtJ,UAE7B,KAAK6U,GAAaC,mBACd,OAAO,gBACArX,EADP,CAEIgW,aAAe,KACfE,eAAiB,KACjBE,kBAAmB,IAE3B,KAAKgB,GAAaE,qBACd,OAAO,gBACAtX,EADP,CAEIgW,aAAenK,EAAOtJ,QACtB6T,kBAAmB,IAE3B,KAAKgB,GAAaG,mBACd,OAAO,gBACAvX,EADP,CAEIkW,eAAiBrK,EAAOtJ,QACxB6T,kBAAmB,IAE3B,QACI,OAAOpW,IC1Gbua,GAAgB,CAClB5T,UAAY,KACZE,cAAgB,KAEhBE,aAAe,KACfE,mBAAqB,KACrBE,sBAAuB,EAEvBE,iBAAmB,KACnBE,uBAAyB,KACzBE,0BAA2B,GA8DhB2T,GAzDO,WAAmC,IAAlCpb,EAAiC,uDAAzBua,GAAgB1O,EAAS,uCAEpD,OAAOA,EAAO5K,MACV,KAAKyG,GAAYC,iBACb,OAAO,gBACA3H,EADP,CAEI2G,UAAYkF,EAAOtJ,UAE3B,KAAKmF,GAAYE,qBACb,OAAO,gBACA5H,EADP,CAEI6G,cAAgBgF,EAAOtJ,UAE/B,KAAKmF,GAAYG,mBACb,OAAO,gBACA7H,EADP,CAEImH,sBAAuB,EACvBJ,aAAe,KACfE,mBAAqB,OAE7B,KAAKS,GAAYK,mBACb,OAAO,gBACA/H,EADP,CAEImH,sBAAuB,EACvBF,mBAAqB4E,EAAOtJ,UAEpC,KAAKmF,GAAYI,qBACb,OAAO,gBACA9H,EADP,CAEImH,sBAAuB,EACvBJ,aAAe8E,EAAOtJ,UAE9B,KAAKmF,GAAYM,uBACb,OAAO,gBACAhI,EADP,CAEIyH,0BAA2B,EAC3BJ,iBAAmB,KACnBE,uBAAyB,OAEjC,KAAKG,GAAYO,yBACb,OAAO,gBACAjI,EADP,CAEIyH,0BAA2B,EAC3BJ,iBAAmBwE,EAAOtJ,UAElC,KAAKmF,GAAYQ,uBACb,OAAO,gBACAlI,EADP,CAEIyH,0BAA2B,EAC3BF,uBAAyBsE,EAAOtJ,UAGxC,QACI,OAAOvC,ICxDbqb,GAAgB,CAClB5V,IAAM,OACN6V,aACAC,UAAY,CAAC,aAGXC,GAAcC,aAAgB,CAChCrb,SAAWoa,GACXva,QAAUwa,GACVzV,OAAS0V,GACTjO,KAAOkO,GACPxQ,KAAOyQ,GACP9F,OAASoG,GACTvQ,QAAUwQ,GACV1U,OAAS2U,KAGEM,gBAAeL,GAAcG,ICxBtCG,GAAc,CAChBC,KACAC,MAGSC,GAAQC,aAAYP,GAAYQ,KAAe,WAAf,EAAmBL,KACnDM,GAAYC,aAAaJ,ICFtCK,IAASrY,OACL,kBAAC,IAAD,CAAUgY,MAAOA,IACb,kBAAC,IAAD,CAAaG,UAAWA,IACpB,kBAAC,GAAD,QAGRrJ,SAASwJ,eAAe,SXkHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpa,MAAK,SAAAqa,GACjCA,EAAaC,kB","file":"static/js/main.4a9b6380.chunk.js","sourcesContent":["import {createSelector} from 'reselect';\r\n\r\n\r\nconst selectWebsite = state => state.website;\r\n\r\nexport const selectMenuToggle = createSelector(\r\n    [selectWebsite],\r\n    website => website.menuSwitch,\r\n)","import {createSelector} from 'reselect';\r\n\r\nconst selectAccounts = state => state.accounts;\r\n\r\nexport const selectActiveUser = createSelector(\r\n    [selectAccounts],\r\n    accounts => accounts.activeUser,\r\n);\r\n\r\nexport const selectIsAuthenticated = createSelector(\r\n    [selectAccounts],\r\n    accounts => accounts.activeUser ? true : false,\r\n)\r\n\r\nexport const selectUserError = createSelector(\r\n    [selectAccounts],\r\n    accounts => accounts.userError,\r\n)\r\nexport const selectLoadingUser = createSelector(\r\n    [selectAccounts],\r\n    accounts => accounts.loadingUser,\r\n)\r\nexport const selectTokenError = createSelector(\r\n    [selectAccounts],\r\n    accounts => accounts.tokenError,\r\n)","const websiteTypes = {\r\n    TOGGLE_MENU : 'TOGGLE_MENU',\r\n\r\n}\r\n\r\nexport default websiteTypes;","import websiteTypes from './Website.types';\r\n\r\n\r\nexport const toggleMenu = ()=>{\r\n    return {\r\n        type : websiteTypes.TOGGLE_MENU,\r\n        \r\n    }\r\n}","const accountsTypes = {\r\n    AUTH_TOKEN_START : 'AUTH_TOKEN_START',\r\n    AUTH_TOKEN_SUCCESS : 'AUTH_TOKEN_SUCCESS',\r\n    AUTH_TOKEN_ERROR : 'AUTH_TOKEN_ERROR',\r\n\r\n    USER_START : 'USER_START',\r\n    USER_SUCCESS : 'USER_SUCCESS',\r\n    USER_ERROR : 'USER_ERROR',\r\n\r\n    USER_LOGOUT : 'USER_LOGOUT',\r\n}\r\n\r\nexport default accountsTypes;","import axios from 'axios';\r\n\r\nconst backendAPI = axios.create({\r\n    baseURL : 'https://metroliteapp.pythonanywhere.com',\r\n    timeout : 10000,\r\n})\r\n\r\nexport default backendAPI;","import accountsTypes from './accounts.types';\r\nimport backendAPI from '../../config/backend';\r\n\r\n\r\n\r\n\r\n\r\nconst authTokenStart = ()=>({\r\n    type : accountsTypes.AUTH_TOKEN_START,\r\n})\r\nconst authTokenSuccess = token =>({\r\n    type : accountsTypes.AUTH_TOKEN_SUCCESS,\r\n    payload : token,\r\n})\r\nconst authTokenError = error =>({\r\n    type : accountsTypes.AUTH_TOKEN_ERROR,\r\n    payload : error,\r\n})\r\n\r\nconst userStart = ()=>({\r\n    type : accountsTypes.USER_START,\r\n})\r\nconst userSuccess = user =>({\r\n    type : accountsTypes.USER_SUCCESS,\r\n    payload : user,\r\n})\r\nconst userError = error=>({\r\n    type : accountsTypes.USER_ERROR,\r\n    payload  : error,\r\n})\r\n\r\n\r\nexport const userLogin = authData =>{\r\n    return dispatch =>{\r\n        dispatch(authTokenStart());\r\n        backendAPI.post('/accounts/login/' , authData)\r\n            .then(res=>{\r\n                dispatch(authTokenSuccess(res.data.token));\r\n                dispatch(userStart());\r\n                backendAPI.post('/accounts/staff-from-token/',{token:res.data.token})\r\n                    .then(res2=>dispatch(userSuccess(res2.data)))\r\n                    .catch(err=>dispatch(userError(err.response)));\r\n            })\r\n            .catch(err=>dispatch(authTokenError(err.response)));\r\n    }\r\n}\r\n\r\nexport const logout = ()=>({\r\n    type : accountsTypes.USER_LOGOUT,\r\n})","const outletTypes  = {\r\n    ALL_OUTLETS_START : 'ALL_OUTLETS_START',\r\n    ALL_OUTLETS_SUCCESS : 'ALL_OUTLETS_SUCCESS',\r\n    ALL_OUTLETS_ERROR : 'ALL_OUTLETS_ERROR',\r\n\r\n    SELECT_OUTLET : 'SELECT_OUTLET',\r\n\r\n    SINGLE_OUTLET_START : 'SINGLE_OUTLET_START',\r\n    SINGLE_OUTLET_ERROR : 'SINGLE_OUTLET_ERROR',\r\n    SINGLE_OUTLET_SUCCESS : 'SINGLE_OUTLET_SUCCESS',\r\n}\r\n\r\nexport default outletTypes;","import outletTypes from './Outlet.types';\r\nimport backendAPI from '../../config/backend';\r\n\r\nconst allOutletsStart = ()=>({\r\n    type :  outletTypes.ALL_OUTLETS_START\r\n})\r\nconst allOutletsSuccess = all_outlets =>({\r\n    type : outletTypes.ALL_OUTLETS_SUCCESS,\r\n    payload : all_outlets,\r\n})\r\nconst allOutletsError = error =>({\r\n    type : outletTypes.ALL_OUTLETS_ERROR,\r\n    payload : error,\r\n})\r\nexport const getAllOutlets = ()=>{\r\n    return dispatch =>{\r\n        dispatch(allOutletsStart());\r\n        backendAPI.get('/outlets/list/')\r\n            .then(res=>dispatch(allOutletsSuccess(res.data)))\r\n            .catch(err=>dispatch(allOutletsError(err.response)));\r\n    }\r\n}\r\n\r\nexport const selectOutlet = outlet=>({\r\n    type : outletTypes.SELECT_OUTLET,\r\n    payload : outlet,\r\n})\r\n\r\nconst singleOutletStart = ()=>({\r\n    type :  outletTypes.SINGLE_OUTLET_START\r\n})\r\nconst singleOutletSuccess = all_outlets =>({\r\n    type : outletTypes.SINGLE_OUTLET_SUCCESS,\r\n    payload : all_outlets,\r\n})\r\nconst singleOutletError = error =>({\r\n    type : outletTypes.SINGLE_OUTLET_ERROR,\r\n    payload : error,\r\n})\r\nexport const getsingleOutlet = (outlet_id)=>{\r\n    return dispatch =>{\r\n        dispatch(singleOutletStart());\r\n        backendAPI.get(`/outlets/edit/${outlet_id}/`)\r\n            .then(res=>dispatch(singleOutletSuccess(res.data)))\r\n            .catch(err=>dispatch(singleOutletError(err.response)));\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {NavLink,withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n// importing selectors\r\nimport {\r\n    selectMenuToggle,\r\n} from '../redux/website/Website.selectors';\r\n\r\nimport {\r\n    selectActiveUser,\r\n} from '../redux/accounts/accounts.selectors';\r\n\r\n\r\n// importing actins\r\nimport {\r\n    toggleMenu,\r\n} from '../redux/website/Website.actions';\r\n\r\nimport {\r\n    logout,\r\n} from '../redux/accounts/accounts.actions';\r\nimport {\r\n    getAllOutlets,\r\n} from '../redux/outlet/Outlet.actions';\r\n\r\nclass NavBar extends Component{\r\n    componentDidMount =()=>{\r\n        this.props.getAllOutlets();\r\n    }\r\n\r\n    render =()=>{\r\n        const {\r\n            menuSwitch,\r\n            toggle,\r\n            logout,\r\n            user,\r\n\r\n        } = this.props;\r\n        return(\r\n            <div>\r\n                <nav className={menuSwitch ? \"active\" : \"\"}>\r\n                    <div className=\"brand\">\r\n                        <h1>Metrolite</h1>\r\n                        <p>Choice Your's</p>\r\n                    </div>\r\n                    {\r\n                        user\r\n                        &&\r\n                        <div className=\"user\">\r\n                            <img src={\r\n                                user.display_image\r\n                                ? user.display_image\r\n                                : `https://ui-avatars.com/api/?name=${user.user.first_name}+${user.user.last_name}&background=ffff&color=232ED1&size=150`\r\n                            } \r\n                                alt=\"\"\r\n                            />\r\n                            <h2>{user.user.first_name} {user.user.last_name}</h2>\r\n                            <div className=\"settings\">\r\n                                <button \r\n                                    className='profile-btn'\r\n                                    onClick={()=>this.props.history.push('/profile')}\r\n                                >Profile</button>\r\n                                <button className='logout-btn' onClick={()=>logout()}>Logout</button>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    \r\n                    <div className=\"menu\">\r\n                        <ul>\r\n                            <li><NavLink to='/'>Home</NavLink></li>\r\n                            <li><NavLink to='/outlet'>Outlets</NavLink></li>\r\n                            \r\n                        </ul>\r\n                        <ul>\r\n                            <li><NavLink to='/sales'>Sales</NavLink></li>\r\n                            <li><NavLink to='/inventory'>Inventory</NavLink></li>\r\n                            <li><NavLink to='/'>Usage</NavLink></li>\r\n\r\n                        </ul>\r\n                        \r\n                    </div>\r\n                    \r\n                </nav>\r\n                <button className=\"menu-toggle\" onClick={toggle}>\r\n                     {\r\n                         menuSwitch \r\n                         ? <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                         : <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n                     }\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    menuSwitch : selectMenuToggle(state),\r\n    user : selectActiveUser(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    toggle : ()=>dispatch(toggleMenu()),\r\n    logout : ()=>dispatch(logout()),\r\n    getAllOutlets : ()=>dispatch(getAllOutlets())\r\n})\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps,\r\n    \r\n    )(NavBar)\r\n);","import {createSelector} from 'reselect';\r\n\r\nconst selectOutlet = state => state.outlet;\r\nconst selectAccounts = state => state.accounts;\r\n\r\nexport const selectAllOutlets = createSelector(\r\n    [selectOutlet],\r\n    outlet => outlet.all_outlets,\r\n)\r\nexport const selectLoadingOutlets = createSelector(\r\n    [selectOutlet],\r\n    outlet => outlet.loading_outlets,\r\n)\r\nexport const selectOutletsError = createSelector(\r\n    [selectOutlet],\r\n    outlet => outlet.outlets_error,\r\n)\r\nexport const selectActiveOutlet = createSelector(\r\n    [selectOutlet],\r\n    outlet => outlet.active_outlet,\r\n)\r\nexport const selectUserOutlet = createSelector(\r\n    [selectOutlet,selectAccounts],\r\n    (outlet,accounts) => {\r\n        const {all_outlets} = outlet;\r\n        const {activeUser} = accounts;\r\n        if(all_outlets && activeUser){\r\n            const key = all_outlets.find(i=>i.id===activeUser.outlet);\r\n            \r\n            if(!key) return null;\r\n            return key\r\n        }\r\n        return null;\r\n    },\r\n)\r\n\r\n\r\nexport const selectSingleOutlet = createSelector(\r\n    [selectOutlet],\r\n    outlet => outlet.single_outlet,\r\n)\r\nexport const selectOutletError = createSelector(\r\n    [selectOutlet],\r\n    outlet => outlet.outlet_error,\r\n)\r\nexport const selectLoadingOutlet = createSelector(\r\n    [selectOutlet],\r\n    outlet => outlet.loading_outlet,\r\n)\r\n","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n// importing selectors\r\nimport {\r\n    selectUserOutlet,\r\n\r\n} from '../../redux/outlet/Outlet.selectors';\r\n\r\n\r\n\r\n\r\nclass ActiveOutlet extends Component{\r\n\r\n    render=()=>{\r\n        const {\r\n            outlet,\r\n            \r\n        } = this.props;\r\n        if(!outlet) return <div>hgkjhgkjh</div>\r\n        return(\r\n            <div className=\"active-outlet\">\r\n                <img src={outlet.cover_image_url} alt=\"\"/>\r\n                <h1>\r\n                    {outlet.name}\r\n                </h1>\r\n                <p><i className=\"fa fa-phone-square\" aria-hidden=\"true\"></i> {outlet.contact_number}</p>\r\n                <p><i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i> {outlet.address}</p>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    outlet : selectUserOutlet(state),\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(ActiveOutlet);","import {createSelector} from 'reselect';\r\n\r\nconst selectRecord = state => state.record;\r\n\r\nexport const selectSaleDate = createSelector(\r\n    [selectRecord],\r\n    record => record.sale_date,\r\n)\r\nexport const selectPurchaseDate = createSelector(\r\n    [selectRecord],\r\n    record => record.purchase_date,\r\n)\r\nexport const selectSaleRecords = createSelector(\r\n    [selectRecord],\r\n    record => record.sale_records,\r\n)\r\nexport const selectSaleRecordsError = createSelector(\r\n    [selectRecord],\r\n    record => record.sale_records_error,\r\n)\r\nexport const selectSaleRecordsLoading = createSelector(\r\n    [selectRecord],\r\n    record => record.sale_records_loading,\r\n)\r\nexport const selectPurchaseRecords = createSelector(\r\n    [selectRecord],\r\n    record => record.purchase_records,\r\n)\r\nexport const selectPurchaseRecordsError = createSelector(\r\n    [selectRecord],\r\n    record => record.purchase_records_error,\r\n)\r\nexport const selectPurchaseRecordsLoading = createSelector(\r\n    [selectRecord],\r\n    record => record.purchase_records_loading,\r\n)","const recordTypes = {\r\n    SALE_DATE_CHANGE : 'SALE_DATE_CHANGE',\r\n    PURCHASE_DATE_CHANGE : 'PURCHASE_DATE_CHANGE',\r\n\r\n    SALE_RECORDS_START : 'SALE_RECORDS_START',\r\n    SALE_RECORDS_SUCCESS : \"SALE_RECORDS_SUCCESS\",\r\n    SALE_RECORDS_ERROR : 'SALE_RECORDS_ERROR',\r\n    \r\n    PURCHASE_RECORDS_START : 'PURCHASE_RECORDS_START',\r\n    PURCHASE_RECORDS_SUCCESS : \"PURCHASE_RECORDS_SUCCESS\",\r\n    PURCHASE_RECORDS_ERROR : 'PURCHASE_RECORDS_ERROR',\r\n}\r\n\r\nexport default recordTypes;","import recordTypes from './Record.types';\r\nimport backendAPI from '../../config/backend';\r\n\r\n\r\nexport const changeSaleDate = newDate =>({\r\n    type : recordTypes.SALE_DATE_CHANGE,\r\n    payload : newDate,\r\n})\r\nexport const changePurchaseDate = newDate =>({\r\n    type : recordTypes.PURCHASE_DATE_CHANGE,\r\n    payload : newDate,\r\n})\r\n\r\n\r\nconst saleRecordStart = ()=>({\r\n    type : recordTypes.SALE_RECORDS_START,\r\n\r\n})\r\nconst saleRecordSuccess = records =>({\r\n    type : recordTypes.SALE_RECORDS_SUCCESS,\r\n    payload : records,\r\n})\r\nconst saleRecordError = err =>({\r\n    type : recordTypes.SALE_RECORDS_ERROR,\r\n    payload : err,\r\n})\r\nexport const getSaleRecords = (date,outlet_id) =>{\r\n    return dispatch=>{\r\n        dispatch(saleRecordStart());\r\n        backendAPI.get(`/outlets/${outlet_id}/sale-record/${date}/`)\r\n            .then(res=>dispatch(saleRecordSuccess(res.data)))\r\n            .catch(err=>dispatch(saleRecordError(err.response)));\r\n    }\r\n}\r\n\r\n\r\nconst purchaseRecordStart = ()=>({\r\n    type : recordTypes.PURCHASE_RECORDS_START,\r\n\r\n})\r\nconst purchaseRecordSuccess = records =>({\r\n    type : recordTypes.PURCHASE_RECORDS_SUCCESS,\r\n    payload : records,\r\n})\r\nconst purchaseRecordError = err =>({\r\n    type : recordTypes.PURCHASE_RECORDS_ERROR,\r\n    payload : err,\r\n})\r\nexport const getPurchaseRecords = (date,outlet_id) =>{\r\n    return dispatch=>{\r\n        dispatch(purchaseRecordStart());\r\n        backendAPI.get(`/outlets/${outlet_id}/purchase-record/${date}/`)\r\n            .then(res=>dispatch(purchaseRecordSuccess(res.data)))\r\n            .catch(err=>dispatch(purchaseRecordError(err.response)));\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n\r\n// importing selectors\r\nimport {\r\n   \r\n    selectSaleDate,\r\n    selectSaleRecords,\r\n    selectSaleRecordsError,\r\n    selectSaleRecordsLoading,\r\n\r\n} from '../../redux/record/Record.selectors';\r\nimport {\r\n    selectActiveUser,\r\n} from '../../redux/accounts/accounts.selectors';\r\n\r\n// importing actions\r\nimport {\r\n    getSaleRecords,\r\n    changeSaleDate,\r\n\r\n} from '../../redux/record/Record.actions';\r\n\r\nclass SaleRecord extends Component{\r\n    componentDidMount = ()=>{\r\n        const {getRecords,user,changeDate} = this.props;\r\n        const date = new Date();\r\n        const date_string = `${date.getFullYear()}-${date.getMonth()+1 > 10 ? date.getMonth()+1 : `0${date.getMonth()+1}`}-${date.getDate()}`;\r\n        changeDate(date_string);\r\n        if(user) getRecords(date_string , user.outlet);\r\n    }\r\n\r\n    render=()=>{\r\n        const {\r\n            date,\r\n            changeDate,\r\n            user,\r\n            records,\r\n            error,\r\n            loading,\r\n            getRecords,\r\n\r\n        } = this.props;\r\n        return(\r\n            <div className=\"sale-record\">\r\n                <div className=\"date\">\r\n                    <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\r\n                    <input \r\n                        type=\"date\" \r\n                        name=\"date\" \r\n                        id=\"\"\r\n                        value={date}\r\n                        onChange={e=>{\r\n                            changeDate(e.target.value);\r\n                            getRecords(e.target.value , user.outlet);\r\n                        }}\r\n                        placeholder=\"Choose a Date\"\r\n                    />\r\n                </div>\r\n                <div className=\"sale-record-list\">\r\n                    {\r\n                        loading\r\n                        &&\r\n                        <Loader\r\n                            type=\"Oval\"\r\n                            color=\"#D72638\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={12000} //3 secs\r\n                            style={{marginTop : '7em'}}\r\n                        />\r\n                    }\r\n                    {\r\n                        error\r\n                        &&\r\n                        <div className=\"error\">\r\n                            <h4>\r\n                                {JSON.stringify(error.data)}\r\n                            </h4>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        records\r\n                        &&\r\n                        records.map((record,i)=>{\r\n                            return(\r\n                                <div className=\"single-record\" key={i}>\r\n                                    <h1>\r\n                                        <i className=\"fa fa-inr\" aria-hidden=\"true\"></i>{record.grand_total}\r\n                                    </h1>\r\n                                    <div className=\"datetime\">\r\n                                        \r\n                                        <p><i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i> {record.time.split('.')[0]}</p>\r\n                                    </div>\r\n                                    <div className=\"items\">\r\n                                        {\r\n                                            record.items.map((item,j)=>{\r\n                                                return(\r\n                                                    <div className=\"single-item\" key={j}>\r\n                                                        <h4>\r\n                                                            {item.item.name}\r\n                                                        </h4>\r\n                                                        <h4>\r\n                                                            {item.quantity}\r\n                                                        </h4>\r\n                                                        <h4><i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {item.item.price * item.quantity}</h4>\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapState = state =>({\r\n    records : selectSaleRecords(state),\r\n    error : selectSaleRecordsError(state),\r\n    loading : selectSaleRecordsLoading(state),\r\n    date : selectSaleDate(state),\r\n    user : selectActiveUser(state),\r\n})\r\n\r\nconst mapDispatch = dispatch =>({\r\n    getRecords : (date,outlet_id)=>dispatch(getSaleRecords(date,outlet_id)),\r\n    changeDate : date => dispatch(changeSaleDate(date)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapState,\r\n    mapDispatch,\r\n\r\n)(SaleRecord));","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n// importing selectors'\r\nimport {\r\n    selectPurchaseDate,\r\n    selectPurchaseRecords,\r\n    selectPurchaseRecordsError,\r\n    selectPurchaseRecordsLoading,\r\n\r\n} from '../../redux/record/Record.selectors';\r\nimport {\r\n    selectActiveUser,\r\n\r\n} from '../../redux/accounts/accounts.selectors';\r\n\r\n\r\n// importing actions\r\nimport {\r\n    getPurchaseRecords,\r\n    changePurchaseDate,\r\n\r\n} from '../../redux/record/Record.actions';\r\n\r\nclass PurchaseRecord extends Component{\r\n    componentDidMount = ()=>{\r\n        const {getRecords,user,changeDate} = this.props;\r\n        const date = new Date();\r\n        const date_string = `${date.getFullYear()}-${date.getMonth()+1 > 10 ? date.getMonth()+1 : `0${date.getMonth()+1}`}-${date.getDate()}`;\r\n        changeDate(date_string);\r\n        if(user) getRecords(date_string , user.outlet);\r\n    }\r\n    render=()=>{\r\n        const {\r\n            date,\r\n            changeDate,\r\n            user,\r\n            records,\r\n            error,\r\n            loading,\r\n            getRecords,\r\n\r\n        } = this.props;\r\n        return(\r\n            <div className=\"purchase-record\">\r\n               <div className=\"date\">\r\n                    <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\r\n                    <input \r\n                        type=\"date\" \r\n                        name=\"date\" \r\n                        id=\"\"\r\n                        value={date}\r\n                        onChange={e=>{\r\n                            changeDate(e.target.value);\r\n                            getRecords(e.target.value , user.outlet);\r\n                        }}\r\n                        placeholder=\"Choose a Date\"\r\n                    />\r\n                </div>\r\n                <div className=\"purchase-record-list\">\r\n                    {\r\n                        loading\r\n                        &&\r\n                        <Loader\r\n                            type=\"Oval\"\r\n                            color=\"#D72638\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={12000} //3 secs\r\n                            style={{marginTop : '7em'}}\r\n                        />\r\n                    }\r\n                    {\r\n                        error\r\n                        &&\r\n                        <div className=\"error\">\r\n                            <h4>\r\n                                {JSON.stringify(error.data)}\r\n                            </h4>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        records\r\n                        &&\r\n                        records.map((r,i)=>{\r\n                            return(\r\n                                <div className=\"one-record\" key={i}>\r\n                                    <h1><i className=\"fa fa-inr\" aria-hidden=\"true\"></i>{r.grand_total}</h1>\r\n                                    <div className=\"datetime\">\r\n                                        \r\n                                        <p><i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i> {r.time.split('.')[0]}</p>\r\n                                    </div>\r\n                                    <div className=\"products\">\r\n                                        {\r\n                                            r.products.map((p,j)=>{\r\n                                                return(\r\n                                                    <div className=\"single-product\" key={j}>\r\n                                                        <h4>\r\n                                                            {p.product.name}\r\n                                                        </h4>\r\n                                                        <h4>\r\n                                                            {p.quantity} {p.product.measuring_unit}\r\n                                                        </h4>\r\n                                                        <h4><i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {p.product.price_per_unit * p.quantity}</h4>\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapState = state =>({\r\n    records : selectPurchaseRecords(state),\r\n    loading : selectPurchaseRecordsLoading(state),\r\n    error : selectPurchaseRecordsError(state),\r\n    user : selectActiveUser(state),\r\n    date : selectPurchaseDate(state),\r\n})\r\nconst mapDispatch = dispatch =>({\r\n    changeDate : date =>dispatch(changePurchaseDate(date)),\r\n    getRecords : (date,outlet_id)=>dispatch(getPurchaseRecords(date,outlet_id))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapState,\r\n    mapDispatch,\r\n\r\n)(PurchaseRecord));","import React,{Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Loader from 'react-loader-spinner';\r\nimport {Route,withRouter,NavLink} from 'react-router-dom';\r\n// importing actions\r\nimport {\r\n    toggleMenu,\r\n} from '../redux/website/Website.actions';\r\nimport {\r\n    getsingleOutlet,\r\n\r\n} from '../redux/outlet/Outlet.actions';\r\n\r\n// importing selectors\r\nimport {\r\n    selectSingleOutlet,\r\n    selectOutletError,\r\n    selectLoadingOutlet,\r\n\r\n} from '../redux/outlet/Outlet.selectors';\r\nimport {\r\n    selectActiveUser,\r\n\r\n} from '../redux/accounts/accounts.selectors';\r\n\r\n// importing components\r\nimport ActiveOutlet from '../components/sales/active_outlet';\r\nimport SaleRecord from '../components/home/sale_record';\r\nimport PurchaseRecord from '../components/home/purchase_record';\r\n\r\nclass Home extends Component{\r\n    componentDidMount = ()=>{\r\n        const {\r\n            user,\r\n            getOutlet,\r\n            toggle,\r\n\r\n        } = this.props;\r\n        toggle();\r\n        if(user) getOutlet(user.outlet);\r\n    }\r\n    render=()=>{\r\n        const {\r\n            outlet,\r\n            error,\r\n            loading,\r\n            match,\r\n\r\n        } = this.props;\r\n        return(\r\n            <div className=\"home\">\r\n                <ActiveOutlet />\r\n                <div className=\"current-time\">\r\n                    <p></p>\r\n                </div>\r\n                {\r\n                    outlet\r\n                    &&\r\n                    <div className=\"stats\">\r\n                        <h1 className='sale'>Sale Today : <i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {outlet.sale_today}</h1>\r\n                        <h1 className='purchase'>Purchase Today : <i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {outlet.purchase_today}</h1>\r\n                        <h1 \r\n                            className={\r\n                                outlet.sale_today > outlet.purchase_today\r\n                                ? \"profit\"\r\n                                : \"loss\"\r\n                            }\r\n                        \r\n                        >Overhead : <i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {outlet.sale_today - outlet.purchase_today}</h1>\r\n                    </div>\r\n\r\n                }\r\n                {\r\n                    loading\r\n                    && <Loader \r\n                            type=\"Oval\"\r\n                            color=\"#D72638\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={12000}\r\n                        />\r\n                }\r\n                {\r\n                    error\r\n                    &&\r\n                    <div className=\"error\">\r\n                        <h4>\r\n                            {JSON.stringify(error)}\r\n                        </h4>\r\n                    </div>\r\n                }\r\n                <div className=\"records\">\r\n                    <div className='record-menu'>\r\n                        <NavLink activeClassName=\"on\" to={`${match.path}/sale-records`}><i className=\"fa fa-money\" aria-hidden=\"true\"></i> Sales Record</NavLink>\r\n                        <NavLink activeClassName=\"on\" to={`${match.path}/purchase-records`}><i className=\"fa fa-credit-card-alt\" aria-hidden=\"true\"></i> Purchase Record</NavLink>\r\n\r\n                    </div>\r\n                    <div className=\"route\">\r\n                        <Route exact path={`${match.path}/sale-records`}>\r\n                            <SaleRecord />\r\n                        </Route>\r\n                        <Route  exact path={`${match.path}/purchase-records`}>\r\n                            <PurchaseRecord />\r\n                        </Route>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapState = state =>({\r\n    outlet : selectSingleOutlet(state),\r\n    error : selectOutletError(state),\r\n    loading : selectLoadingOutlet(state),\r\n    user : selectActiveUser(state),\r\n})\r\n\r\nconst mapDisatch = dispatch =>({\r\n    toggle : ()=>dispatch(toggleMenu()),\r\n    getOutlet : outlet_id =>dispatch(getsingleOutlet(outlet_id)),\r\n})\r\n\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapState,\r\n        mapDisatch,\r\n    \r\n    )(Home)\r\n);","import React ,{Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n// importing selectors\r\nimport {\r\n    selectLoadingUser,\r\n    selectUserError,\r\n    selectTokenError,\r\n\r\n} from '../../redux/accounts/accounts.selectors';\r\n\r\n\r\n// importing actions\r\nimport {\r\n    userLogin,\r\n} from '../../redux/accounts/accounts.actions';\r\n\r\n\r\nclass Login extends Component{\r\n\r\n    state = {\r\n        username : '',\r\n        password : '',\r\n    }\r\n    inputChange = e =>{\r\n        this.setState({\r\n            [e.target.name] : e.target.value,\r\n        })\r\n    }\r\n    submit = ()=>{\r\n        const {\r\n            username,\r\n            password,\r\n\r\n        } = this.state;\r\n        const {\r\n            login,\r\n\r\n        } = this.props;\r\n        login({username,password});\r\n    }\r\n    render = ()=>{\r\n        const {\r\n            username,\r\n            password,\r\n        } = this.state;\r\n        const {\r\n            loading,\r\n            userError,\r\n            tokenError,\r\n\r\n        } = this.props;\r\n        \r\n        return(\r\n            <div className=\"login-form\">\r\n                {\r\n                    tokenError &&\r\n                    <div className='error'>\r\n                        <h4>{JSON.stringify(tokenError.data)}</h4>\r\n                    </div>\r\n                }\r\n                {\r\n                    userError &&\r\n                    <div className=\"error\">\r\n                        <h4>{JSON.stringify(userError.data)}</h4>\r\n                    </div>\r\n                }\r\n                <form action=\"\">\r\n                    <div className=\"form-group\">\r\n                        <h3>\r\n                            {\r\n                                loading\r\n                                ? 'Verifying details'\r\n                                : 'Login To Metrolite'\r\n                            }\r\n                        </h3>\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"username\" \r\n                            placeholder=\"Username\"\r\n                            value={username}\r\n                            onChange={this.inputChange}\r\n                            disabled={loading}\r\n                        />\r\n                        <input \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={this.inputChange}\r\n                            disabled={loading}\r\n                        />\r\n                        <button \r\n                            className=\"primary-button\" \r\n                            type='button' \r\n                            onClick={this.submit}\r\n                            disabled={loading}\r\n                        >{\r\n                            loading \r\n                            ? <Loader\r\n                                type=\"Oval\"\r\n                                color=\"#ffff\"\r\n                                height={40}\r\n                                width={40}\r\n                                timeout={12000} //3 secs\r\n        \r\n                            />\r\n                            :'Login'\r\n                        }</button>\r\n                    </div>\r\n                </form>\r\n                {!loading && <div className=\"register-link\">\r\n                    <p>New to Metrolite ? </p>\r\n                    <NavLink to='/register'>Join Here</NavLink>\r\n                </div>}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    loading : selectLoadingUser(state),\r\n    userError : selectUserError(state),\r\n    tokenError : selectTokenError(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch=>({\r\n    login : (authData)=>dispatch(userLogin(authData)),\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(Login);","import React,{Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\n\r\nclass Register extends Component{\r\n\r\n    render =()=>{\r\n        return(\r\n            <div className=\"register-form\">\r\n                <h1>Join Metrolite</h1>\r\n                <form action=\"\">\r\n                    <div className=\"form-group\">\r\n                        <h3>Personal Information</h3>\r\n                    .\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"first_name\" \r\n                            id=\"\"\r\n                            placeholder='Your first name'\r\n                        />\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"last_name\" \r\n                            id=\"\"\r\n                            placeholder='Your last name'\r\n                        />\r\n                        <input \r\n                            type=\"email\" \r\n                            name=\"email\" \r\n                            id=\"\"\r\n                            placeholder='Your email address'\r\n                        />\r\n                        <input \r\n                            type=\"number\" \r\n                            name=\"phone\" \r\n                            id=\"\"\r\n                            min={0}\r\n                            placeholder='Your phone number'\r\n                        />\r\n                        <input \r\n                            type=\"url\" \r\n                            name=\"display_image_url\" \r\n                            id=\"\"\r\n                            \r\n                            placeholder='Your display image link'\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <h3>Authentication</h3>\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"username\" \r\n                            id=\"\"\r\n                            \r\n                            placeholder='Choose a username'\r\n                        />\r\n                        <input \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            id=\"\"\r\n                            \r\n                            placeholder='Choose a password'\r\n                        />\r\n                        <input \r\n                            type=\"password\" \r\n                            name=\"confirm_password\" \r\n                            id=\"\"\r\n                            \r\n                            placeholder='Confirm your password'\r\n                        />\r\n                        <button className=\"primary-button\" type='button'>Register</button>\r\n                        <div className=\"login-link\">\r\n                            <p>Already a member ? </p>\r\n                            <NavLink to='/'>Login Here</NavLink>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    \r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Loader from 'react-loader-spinner';\r\nimport {withRouter} from 'react-router-dom';\r\n// importing selectors\r\nimport {\r\n    selectAllOutlets,\r\n    selectLoadingOutlets,\r\n    selectOutletsError,\r\n    selectActiveOutlet,\r\n\r\n} from '../../redux/outlet/Outlet.selectors';\r\nimport {\r\n    selectActiveUser,\r\n\r\n} from '../../redux/accounts/accounts.selectors';\r\n\r\n// importing actions\r\nimport {\r\n    getAllOutlets,\r\n    selectOutlet,\r\n\r\n} from '../../redux/outlet/Outlet.actions';\r\nclass AllOutlets extends Component {\r\n    componentDidMount = ()=>{\r\n        const {fetch} = this.props;\r\n        fetch();\r\n    }\r\n    componentWillUnmount = ()=>{\r\n        const {choose} = this.props;\r\n        choose(null);\r\n    }\r\n    render = ()=>{\r\n        const {\r\n            outlets,\r\n            loading,\r\n            user,\r\n            error,\r\n            choose,\r\n            activeOutlet,\r\n\r\n        } = this.props;\r\n        return(\r\n            <div className=\"all-outlets\">\r\n                \r\n                <h1>\r\n                    {\r\n                        loading\r\n                        ? 'Food is a religion'\r\n                        : 'All Outlets/Units'\r\n                    }\r\n                </h1>\r\n                \r\n                {\r\n                    error &&\r\n                    <div className=\"error\">\r\n                        <h4>{JSON.stringify(error)}</h4>\r\n                    </div>\r\n                }\r\n                <div className=\"list\">\r\n                    {\r\n                        loading &&\r\n                        <div style={{marginTop : '50%',transform:'translateY(-50%)'}}>\r\n                            <Loader\r\n                                type=\"Oval\"\r\n                                color=\"#D72638\"\r\n                                height={100}\r\n                                width={100}\r\n                                timeout={12000} //3 secs\r\n\r\n                            />\r\n                        </div>\r\n                    }\r\n                    {\r\n                        outlets &&\r\n                        outlets.map((outlet,i)=>{\r\n                            return(\r\n                                <div \r\n                                    className=\"single-outlet\" \r\n                                    key={i}\r\n                                    onClick={()=>{\r\n                                        choose(outlet);\r\n                                        this.props.history.push(`/outlet/${outlet.id}/menus`);\r\n                                    }}\r\n                                >\r\n                                    <img src={outlet.cover_image_url} alt=\"\"/>\r\n                                    {\r\n                                        activeOutlet \r\n                                        && outlet.id === activeOutlet.id\r\n                                        &&\r\n                                        \r\n                                        <div className=\"selected\">\r\n                                            <h4>active</h4>\r\n                                        </div>\r\n                                        \r\n                                    }\r\n                                    <div className=\"info\">\r\n                                        <h4>{outlet.name}</h4>\r\n                                        <p className=\"contact\">\r\n                                            <i className=\"fa fa-phone-square\" aria-hidden=\"true\"></i>\r\n                                            {outlet.contact_number}\r\n                                        </p>\r\n                                        <p className=\"address\">\r\n                                            <i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\r\n                                            {outlet.address}\r\n                                        </p>\r\n                                    </div>\r\n                                    {\r\n                                        outlet.id === user.outlet\r\n                                        &&\r\n                                        <div className=\"my-outlet\">\r\n                                            <p>This is your Outlet</p>\r\n                                        </div>\r\n                                    }\r\n                                    \r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    outlets : selectAllOutlets(state),\r\n    loading : selectLoadingOutlets(state),\r\n    error : selectOutletsError(state),\r\n    user : selectActiveUser(state),\r\n    activeOutlet : selectActiveOutlet(state),\r\n})\r\nconst mapDispatchToProps = dispatch=>({\r\n    fetch : ()=>dispatch(getAllOutlets()),\r\n    choose : (outlet)=>dispatch(selectOutlet(outlet)),\r\n})\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps,\r\n    )(AllOutlets)\r\n);","import {createSelector} from 'reselect';\r\n\r\nconst selectMenu = state => state.menu;\r\n\r\n\r\nexport const selectAllMenus = createSelector(\r\n    [selectMenu],\r\n    menu =>menu.all_menus,\r\n)\r\nexport const selectMenusError = createSelector(\r\n    [selectMenu],\r\n    menu =>menu.menus_error,\r\n)\r\nexport const selectLoadingMenus = createSelector(\r\n    [selectMenu],\r\n    menu =>menu.loading_menus,\r\n)\r\nexport const selectActiveMenu = createSelector(\r\n    [selectMenu],\r\n    menu =>menu.activeMenu,\r\n)","const menuTypes  = {\r\n    MENUS_START : 'MENUS_START',\r\n    MENUS_SUCCESS : 'MENUS_SUCCESS',\r\n    MENUS_ERROR : 'MENUS_ERROR',\r\n\r\n    CHOOSE_MENU : 'CHOOSE_MENU',\r\n}\r\n\r\nexport default menuTypes;","import menuTypes from './Menu.types';\r\nimport backendAPI from '../../config/backend';\r\n\r\n\r\nconst menusStart = ()=>({\r\n    type : menuTypes.MENUS_START,\r\n})\r\nconst menusSuccess = menus =>({\r\n    type : menuTypes.MENUS_SUCCESS,\r\n    payload : menus,\r\n})\r\nconst menusError = err =>({\r\n    type : menuTypes.MENUS_ERROR,\r\n    payload : err,\r\n})\r\n\r\nexport const getAllMenusByOutlet = outlet_id =>{\r\n    return dispatch=>{\r\n        dispatch(menusStart())\r\n        backendAPI.get(`/outlets/${outlet_id}/menus/`)\r\n            .then(res=>dispatch(menusSuccess(res.data)))\r\n            .catch(err=>dispatchEvent(menusError(err)));\r\n    }\r\n}\r\n\r\nexport const chooseMenu = menu =>({\r\n    type : menuTypes.CHOOSE_MENU,\r\n    payload : menu,\r\n})","import {createSelector} from 'reselect';\r\n\r\nconst selectItem = state => state.item;\r\n\r\n\r\nexport const selectAllItems = createSelector(\r\n    [selectItem],\r\n    item=>item.all_items,\r\n)\r\nexport const selectItemsError = createSelector(\r\n    [selectItem],\r\n    item=>item.items_error,\r\n)\r\nexport const selectLoadingItems = createSelector(\r\n    [selectItem],\r\n    item=>item.loading_items,\r\n)\r\nexport const selectFilterItems = createSelector(\r\n    [selectItem],\r\n    item=>item.all_items ? item.all_items.filter(i=>i.name.toLowerCase().includes(item.search_text.toLowerCase())) : null,\r\n)\r\nexport const selectSearchText =createSelector(\r\n    [selectItem],\r\n    item=>item.search_text,\r\n)\r\nexport const selectCartSwitch = createSelector(\r\n    [selectItem],\r\n    item=>item.cartSwitch,\r\n)\r\n\r\nexport const selectItemQuantity = item_id => createSelector(\r\n    [selectItem],\r\n    item=>{\r\n        const {cart} = item;\r\n        const cart_item = cart.find(i=>i.item.id===item_id);\r\n        if(cart_item) return cart_item.quantity;\r\n        return 0;\r\n    }\r\n)\r\n\r\nexport const selectCart = createSelector(\r\n    [selectItem],\r\n    item=>item.cart,\r\n)\r\n\r\nexport const selectCartTotal = createSelector(\r\n    [selectItem],\r\n    item=>{\r\n        let total = 0;\r\n        if(item.cart){\r\n            \r\n            item.cart.forEach(c_i=>{\r\n                total += c_i.item.price*c_i.quantity;\r\n            })\r\n        }\r\n        return total;\r\n    }\r\n)\r\n\r\nexport const selectLatestSale = createSelector(\r\n    [selectItem],\r\n    item=>item.latest_sale,\r\n)\r\nexport const selectSaleError = createSelector(\r\n    [selectItem],\r\n    item=>item.sale_error,\r\n)\r\nexport const selectMakingSale = createSelector(\r\n    [selectItem],\r\n    item=>item.making_sale,\r\n)","const itemTypes = {\r\n    ITEMS_START : 'ITEMS_START',\r\n    ITEMS_SUCCESS : 'ITEMS_SUCCESS',\r\n    ITEMS_ERROR : 'ITEMS_ERROR',\r\n\r\n    SEARCH_ITEM : 'SEARCH_ITEM',\r\n    ADD_ITEM_TO_CART : 'ADD_ITEM_TO_CART',\r\n    INCREASE_ITEM : 'INCREASE_ITEM',\r\n    DECREASE_ITEM : 'DECREASE_ITEM',\r\n    REMOVE_ITEM_FROM_CART : 'REMOVE_ITEM_FROM_CART',\r\n    CLEAR_CART : 'CLEAR_CART',\r\n\r\n    CART_TOGGLE : 'CART_TOGGLE',\r\n\r\n    ADD_SALE_START : 'ADD_SALE_START',\r\n    ADD_SALE_SUCCESS : 'ADD_SALE_SUCCESS',\r\n    ADD_SALE_ERROR : 'ADD_SALE_ERROR',\r\n}\r\n\r\n\r\nexport default itemTypes;","import itemTypes from './Item.types';\r\nimport backendAPI from '../../config/backend';\r\n\r\nconst itemsStart = ()=>({\r\n    type : itemTypes.ITEMS_START,\r\n})\r\nconst itemsSuccess = items =>({\r\n    type : itemTypes.ITEMS_SUCCESS,\r\n    payload : items,\r\n})\r\nconst itemsError = error=>({\r\n    type : itemTypes.ITEMS_ERROR,\r\n    payload : error,\r\n})\r\nexport const getItemsOfmenu = menu_id =>{\r\n    return dispatch =>{\r\n        dispatch(itemsStart());\r\n        backendAPI.get(`/outlets/menu/${menu_id}/items/`)\r\n            .then(res=>dispatch(itemsSuccess(res.data)))\r\n            .catch(err=>dispatch(itemsError(err.response)));\r\n    }\r\n}\r\nexport const searchItem = (text)=>({\r\n    type : itemTypes.SEARCH_ITEM,\r\n    payload : text,\r\n})\r\nexport const toggleCart = ()=>({\r\n    type : itemTypes.CART_TOGGLE,\r\n})\r\n\r\n\r\n\r\nexport const addItemToCart = cart_item =>({\r\n    type : itemTypes.ADD_ITEM_TO_CART,\r\n    payload : cart_item,\r\n})\r\nexport const increaseItem = cart_item =>({\r\n    type : itemTypes.INCREASE_ITEM,\r\n    payload : cart_item,\r\n})\r\nexport const removeItem = cart_item =>({\r\n    type : itemTypes.REMOVE_ITEM_FROM_CART,\r\n    payload : cart_item,\r\n})\r\nexport const clearCart = ()=>({\r\n    type : itemTypes.CLEAR_CART,\r\n\r\n})\r\n\r\n\r\nconst addSaleStart = ()=>({\r\n    type : itemTypes.ADD_SALE_START,\r\n})\r\nconst addSaleSuccess = newSale=>({\r\n    type : itemTypes.ADD_SALE_SUCCESS,\r\n    payload : newSale,\r\n})\r\nconst addSaleError = error =>({\r\n    type : itemTypes.ADD_SALE_ERROR,\r\n    payload : error,\r\n})\r\nexport const addNewSale = (cart , outlet_id) =>{\r\n    return dispatch =>{\r\n        dispatch(addSaleStart());\r\n        backendAPI.post(`/outlets/${outlet_id}/add-sale/`,cart)\r\n            .then(res=>{\r\n                dispatch(addSaleSuccess(res.data))\r\n                dispatch(clearCart());\r\n            })\r\n            .catch(err=>dispatch(addSaleError(err.response)));\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Loader from 'react-loader-spinner';\r\nimport {withRouter} from 'react-router-dom';\r\n// importing selectors\r\nimport {\r\n    selectActiveMenu,\r\n\r\n} from '../../redux/menu/Menu.selectors';\r\nimport {\r\n    selectAllItems,\r\n    selectItemsError,\r\n    selectLoadingItems,\r\n} from '../../redux/item/Item.selectors';\r\n\r\n// importing actions\r\nimport {\r\n    getItemsOfmenu,\r\n} from '../../redux/item/Item.actions';\r\nclass Items extends Component{\r\n    componentWillMount=()=>{\r\n        const {menu,parentmatch} = this.props;\r\n        if(!menu){\r\n            this.props.history.push(parentmatch)\r\n        }else{\r\n            this.props.getItems(menu.id);\r\n        }\r\n        \r\n    }\r\n    componentDidUpdate = oldProps =>{\r\n        const old_menu_id = oldProps.match.params.id;\r\n        const new_menu_id = this.props.match.params.id;\r\n\r\n        \r\n        if(old_menu_id !== new_menu_id){\r\n            this.props.getItems(new_menu_id);\r\n        }\r\n    }\r\n    render=()=>{\r\n        const {\r\n            menu,\r\n            items,\r\n            loading,\r\n            error,\r\n\r\n        } = this.props;\r\n        return(\r\n            <div className=\"items\">\r\n                {\r\n                    menu \r\n                    &&\r\n                    <div className=\"item-list\">\r\n                        <img src={menu.cover_image} alt=\"\"/>\r\n                        <div className=\"menu-info\">\r\n                            <h2>\r\n                                {menu.title}\r\n                            </h2>\r\n                            <p>\r\n                                {menu.descrition}\r\n                            </p>\r\n                        </div>\r\n                        {\r\n                            loading\r\n                            ? <div className=\"all-items\">\r\n                                    <Loader\r\n                                        type=\"Oval\"\r\n                                        color=\"#D72638\"\r\n                                        height={100}\r\n                                        width={100}\r\n                                        timeout={12000}\r\n                                        style={{\r\n                                            margin:'2em auto',\r\n                                        }} //3 secs\r\n            \r\n                                    />\r\n                                </div>\r\n                            : <div className=\"all-items\">\r\n                                    {\r\n                                        error\r\n                                        &&\r\n                                        <div className=\"error\">\r\n                                            <h4>\r\n                                                {JSON.stringify(error)}\r\n                                            </h4>\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        items\r\n                                        &&\r\n                                        items.map((item,i)=>{\r\n                                            return(\r\n                                                <div className=\"single-item\" key={i}>\r\n                                                    <img \r\n                                                        src={item.image ? item.image : `https://ui-avatars.com/api/?name=${item.name}&background=101D42&color=ffff&size=500`} \r\n                                                        alt=\"\"\r\n                                                    />\r\n                                                    <h4>{item.name}</h4>\r\n                                                    <p className=\"price\"><i className=\"fa fa-inr\" aria-hidden=\"true\"></i>{item.price}</p>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    menu : selectActiveMenu(state),\r\n    items : selectAllItems(state),\r\n    loading : selectLoadingItems(state),\r\n    error : selectItemsError(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch=>({\r\n    getItems :(menu_id)=>dispatch(getItemsOfmenu(menu_id)),\r\n})\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps,\r\n    )(Items)\r\n);","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter,Route} from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner';\r\n// importing selectors\r\nimport {\r\n    selectAllMenus,\r\n    selectActiveMenu,\r\n    selectMenusError,\r\n    selectLoadingMenus,\r\n\r\n} from '../../redux/menu/Menu.selectors';\r\n\r\nimport {\r\n    selectActiveOutlet,\r\n\r\n} from '../../redux/outlet/Outlet.selectors'; \r\n\r\n// importing actions\r\nimport {\r\n    getAllMenusByOutlet,\r\n    chooseMenu,\r\n\r\n} from '../../redux/menu/Menu.actions';\r\n// importing components\r\nimport Items from './items';\r\n\r\nclass Menus extends Component {\r\n    componentDidMount = ()=>{\r\n        const outlet_id = this.props.match.params.id;\r\n        const {getMenus} = this.props;\r\n        getMenus(outlet_id);\r\n    }\r\n    componentDidUpdate = oldProps =>{\r\n        const old_outlet_id = oldProps.match.params.id;\r\n        const new_oulet_id = this.props.match.params.id;\r\n\r\n        const {getMenus} = this.props;\r\n        if(old_outlet_id !== new_oulet_id){\r\n            getMenus(new_oulet_id);\r\n        }\r\n    }\r\n    componentDidUnmount=()=>{\r\n        this.props.choose(null);\r\n    }\r\n    showItems = (e,menu)=>{\r\n        const {match,choose} = this.props;\r\n        \r\n        choose(menu);\r\n        this.props.history.push(`${match.url}/${e.target.id}/items`);\r\n    }\r\n    render=()=>{\r\n        const {\r\n            choose,\r\n            menus,\r\n            error,\r\n            loading,\r\n            match,\r\n            choosen\r\n        } = this.props;\r\n        return(\r\n            <div className=\"menus\">\r\n                \r\n                <h1>\r\n                    {\r\n                        loading\r\n                        ? 'Getting Menus'\r\n                        : 'Our Menus'\r\n                    }\r\n                </h1>\r\n                {\r\n                    loading\r\n                    &&\r\n                    <div style={{marginTop : '50%',transform:'translateY(-50%)'}}>\r\n                        <Loader\r\n                            type=\"Oval\"\r\n                            color=\"#D72638\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={12000} //3 secs\r\n\r\n                        />\r\n                    </div>\r\n                }\r\n                {\r\n                    error\r\n                    &&\r\n                    <div className=\"error\">\r\n                        <h4>\r\n                            {JSON.stringify(error)}\r\n                        </h4>\r\n                    </div>\r\n                }\r\n                <div className=\"list\">\r\n                    {\r\n                        menus \r\n                        && menus.map((menu,i)=>{\r\n                            return(\r\n                                <div \r\n                                    className=\"single-menu\"\r\n                                    \r\n                                    key={i} \r\n                                    id={menu.id} \r\n                                    onClick={(e)=>{\r\n                                        this.showItems(e,menu)\r\n                                    }}\r\n                                >\r\n                                    <img src={menu.cover_image} alt=\"\" id={menu.id}/>\r\n                                    {   \r\n                                            choosen &&\r\n                                            choosen.id === menu.id\r\n                                            &&\r\n                                            <div className=\"active-menu\">\r\n                                                <p>\r\n                                                    <i className=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                                                </p>\r\n                                            </div>\r\n                                        }\r\n                                    <div className=\"info\">\r\n                                        <h4>{menu.title}</h4>\r\n                                        <p className=\"type\">{menu.menu_type}</p>\r\n                                        \r\n                                    </div>\r\n\r\n                                    \r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <Route path={`${match.path}/:id/items`}>\r\n                    <Items parentmatch={match.url} />\r\n                </Route>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n    menus : selectAllMenus(state),\r\n    error : selectMenusError(state),\r\n    loading : selectLoadingMenus(state),\r\n\r\n    outlet : selectActiveOutlet(state),\r\n    choosen : selectActiveMenu(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    getMenus : (outlet_id)=>dispatch(getAllMenusByOutlet(outlet_id)),\r\n    choose : (menu)=>dispatch(chooseMenu(menu)),\r\n})\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps,\r\n    )(Menus)\r\n);","import React,{Component} from 'react';\r\nimport {Route,withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n// importing actions\r\nimport {\r\n    toggleMenu,\r\n} from '../../redux/website/Website.actions';\r\n\r\n// importing selectors\r\nimport {\r\n    selectActiveOutlet,\r\n\r\n} from '../../redux/outlet/Outlet.selectors';\r\n\r\n// importing components\r\nimport AllOutlets from './all_outlets';\r\nimport Menus from './menus';\r\n\r\n\r\nclass Outlet extends Component {\r\n    componentDidMount = ()=>{\r\n        const {toggle} = this.props;\r\n        toggle();\r\n    }\r\n\r\n    render = ()=>{\r\n        const {\r\n            match,\r\n            \r\n\r\n        } = this.props;\r\n        return(\r\n            <div className=\"outlet\">\r\n                <Route  path={`${match.path}`}>\r\n                    <AllOutlets />\r\n                    \r\n                </Route>\r\n                <Route path={`${match.path}/:id/menus`}>\r\n                    <Menus />\r\n                </Route>\r\n                \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    activeOutlet : selectActiveOutlet(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggle : ()=>dispatch(toggleMenu()),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(Outlet));","import React , {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// importing actions\r\nimport{\r\n    searchItem,\r\n} from '../../redux/item/Item.actions';\r\n\r\n// importing selector\r\nimport {\r\n    selectSearchText,\r\n} from '../../redux/item/Item.selectors';\r\nclass Search extends Component{\r\n\r\n    render=()=>{\r\n        const {\r\n            searchItem,\r\n            searchText,\r\n        } = this.props;\r\n        return(\r\n            <div className=\"search\">\r\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"\" \r\n                    id=\"\"\r\n                    placeholder=\"Search Item\"\r\n                    value={searchText}\r\n                    onChange={e=>searchItem(e.target.value)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapState = state=>({\r\n    searchText : selectSearchText(state),\r\n})\r\nconst mapDispatch = dispatch=>({\r\n    searchItem : (text)=>dispatch(searchItem(text)),\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    mapDispatch,\r\n\r\n)(Search);","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n// importing selectors\r\nimport {\r\n    selectUserOutlet,\r\n\r\n} from '../../redux/outlet/Outlet.selectors';\r\nimport {\r\n    selectLatestSale,\r\n\r\n} from '../../redux/item/Item.selectors';\r\n\r\n\r\nclass Invoice extends Component{\r\n    state = {\r\n        visible :false,\r\n    }\r\n    \r\n    toggleVisibility = ()=>{\r\n        this.setState({\r\n            visible : !this.state.visible,\r\n        })\r\n    }\r\n    printStyles = `.invoice-body {\r\n        background-color: white;\r\n        width: 55mm;\r\n        border: 2px solid #14773e;\r\n        display: flex;\r\n        flex-flow: column;\r\n        align-items: center; }\r\n        .invoice-body h4 {\r\n          padding: 0.2em 0.3em;\r\n          font-family: \"Yanone Kaffeesatz\", sans-serif;\r\n          text-align: center;\r\n          color: #101D42; }\r\n        .invoice-body .time-stamp {\r\n          width: 100%;\r\n          display: flex;\r\n          font-size: 0.8em;\r\n          justify-content: space-evenly;\r\n          color: #77740a; }\r\n        .invoice-body .invoice-items {\r\n          width: 100%;\r\n          margin: 0.5em 0; }\r\n          .invoice-body .invoice-items .one-item {\r\n            display: flex;\r\n            justify-content: space-evenly;\r\n            margin: 0.3em 0; }\r\n        .invoice-body .gst {\r\n          display: flex;\r\n          justify-content: space-evenly;\r\n          width: 100%; }\r\n        .invoice-body .grand-total {\r\n          font-family: \"Bangers\", cursive;\r\n          font-size: 2em;\r\n          letter-spacing: 1px;\r\n          color: #101D42; }\r\n        .invoice-body .message p {\r\n          font-size: 0.8em; }\r\n        .invoice-body .message h4 {\r\n          font-family: \"Pacifico\", cursive; }\r\n        .invoice-body .contact p {\r\n          font-size: 0.7em;\r\n          text-align: center;\r\n          margin: 0.2em 0; } }`\r\n    printInvoice = ()=>{\r\n        const invoiceHTML = document.querySelector('.invoice-body').innerHTML;\r\n        const printWindow = window.open('','_blank','height=800,width=1200');\r\n        printWindow.document.open();\r\n        printWindow.document.write(\r\n                `   \r\n                    <html>\r\n                        <head>\r\n                            <title>\r\n                                Metrolite Invoice\r\n                            </title>\r\n                            <style media='print'>\r\n                                @import url('https://fonts.googleapis.com/css?family=Montserrat+Subrayada|Pacifico|Yanone+Kaffeesatz&display=swap');\r\n                                @import url('https://fonts.googleapis.com/css?family=Bangers&display=swap');\r\n                                ${this.printStyles}\r\n                            </style>\r\n                            <link href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\r\n                        </head>\r\n                        <body onload=\"window.print()\">\r\n                            <div class='invoice-body'>\r\n                                ${invoiceHTML}\r\n                            </div>\r\n                        </body>\r\n\r\n                    </html>\r\n                `\r\n        );\r\n        printWindow.document.close();\r\n       \r\n        \r\n    }\r\n    render=()=>{\r\n        const {visible} = this.state;\r\n        const {\r\n            outlet,\r\n            latest_sale,\r\n\r\n        } = this.props;\r\n        return(\r\n            <div className=\"invoice\">\r\n                <div className={visible ? \"invoice-body visible\" : \"invoice-body\"}>\r\n                    <h1>Metrolite</h1>\r\n                    <p>Choice Your's</p>\r\n                    <div className=\"print-stuff\">\r\n                        <button \r\n                            className='print-btn'\r\n                            onClick={this.printInvoice}\r\n                        ><i className=\"fa fa-print\" aria-hidden=\"true\"></i></button>\r\n                    </div>\r\n                    <h4>\r\n                        {outlet.name}\r\n                    </h4>\r\n                    <div className=\"time-stamp\">\r\n                        <p><i className=\"fa fa-calendar\" aria-hidden=\"true\"></i> {latest_sale.date}</p>\r\n                        <p><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> {latest_sale.time.split('.')[0]}</p>\r\n                    </div>\r\n                    <div className=\"invoice-items\">\r\n                        {\r\n                            latest_sale.items.map((s_item,i)=>{\r\n                                return(\r\n                                    <div className=\"one-item\" key={i}>\r\n                                        <h4>\r\n                                            {s_item.item.name}\r\n                                        </h4>\r\n                                        <p>\r\n                                            {s_item.quantity}\r\n                                        </p>\r\n                                        <p><i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {s_item.quantity*s_item.item.price}</p>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className=\"gst\">\r\n                        <p>CGST 5%</p>\r\n                        <p>SGST 5%</p>\r\n                        <h4>10%</h4>\r\n                    </div>\r\n                    <h3 className=\"grand-total\"><i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {latest_sale.grand_total.split('.')[0]}</h3>\r\n                    <div className=\"message\">\r\n                        <p>\r\n                            Thank You for Choosing Metrolite\r\n                        </p>\r\n                        <h4>Visit Again</h4>\r\n                    </div>\r\n                    <div className=\"contact\">\r\n                        <p><i className=\"fa fa-phone\" aria-hidden=\"true\"></i> +91 9874457122</p>\r\n                        <p><i className=\"fa fa-envelope-o\" aria-hidden=\"true\"></i> metrolite.kolkata@yahoo.com</p>\r\n                        <p><i className=\"fa fa-globe\" aria-hidden=\"true\"></i> metrolite.in</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className='toggle-invoice' onClick={this.toggleVisibility}><i className=\"fa fa-file-text-o\" aria-hidden=\"true\"></i> {visible ? 'Hide Invoice' : 'Show Invoice'}</button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapState = state =>({\r\n    latest_sale : selectLatestSale(state),\r\n    outlet : selectUserOutlet(state),\r\n})\r\nexport default connect(\r\n    mapState,\r\n\r\n)(Invoice);","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n// importing selectors\r\nimport {\r\n    selectCartSwitch,\r\n    selectCart,\r\n    selectCartTotal,\r\n    selectLatestSale,\r\n    selectSaleError,\r\n    selectMakingSale,\r\n\r\n} from '../../redux/item/Item.selectors';\r\nimport {\r\n    selectActiveUser,\r\n\r\n} from '../../redux/accounts/accounts.selectors';\r\n\r\n// importing actions\r\nimport {\r\n    toggleCart,\r\n    addNewSale,\r\n    clearCart,\r\n\r\n}   from '../../redux/item/Item.actions';\r\n\r\n// importing components\r\nimport Invoice from './invoice';\r\n\r\nclass SaleCart extends Component{\r\n    confirmSale = ()=>{\r\n        const {cart,addSale,user} = this.props;\r\n        let cart_mod = [];\r\n        cart.forEach((c_item)=>{\r\n            const mod_item = {\r\n                id : c_item.item.id,\r\n                quantity : c_item.quantity, \r\n            }\r\n            cart_mod.push(mod_item);\r\n        })\r\n        addSale(cart_mod,user.outlet);\r\n    }\r\n    render=()=>{\r\n        const {\r\n            flip,\r\n            toggle,\r\n            cart,\r\n            total,\r\n            clear,\r\n\r\n            latest_sale,\r\n            sale_error,\r\n            making_sale,\r\n\r\n            \r\n        } = this.props;\r\n        return(\r\n            <div className=\"sale-cart\">\r\n                {\r\n                    flip\r\n                    &&\r\n                    <div className=\"cart-body\">\r\n                        {\r\n                            cart\r\n                            &&\r\n                            cart.map((c_item,i)=>{\r\n                                return(\r\n                                    <div className=\"cart-item\" key={i}>\r\n                                        <h4>\r\n                                            {c_item.item.name}\r\n                                        </h4>\r\n                                        <p>\r\n                                            {c_item.quantity}\r\n                                        </p>\r\n                                        <p><i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {c_item.item.price * c_item.quantity}</p>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        {\r\n                            latest_sale\r\n                            &&\r\n                            <div className=\"latest-sale\">\r\n                                <h2><i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {latest_sale.grand_total.split('.')[0]}</h2>\r\n                                <div className=\"timestamp\">\r\n                                    <p><i className=\"fa fa-clock-o\" aria-hidden=\"true\"></i> {latest_sale.time.split('.')[0]}</p>\r\n                                    <p><i className=\"fa fa-calendar\" aria-hidden=\"true\"></i> {latest_sale.date}</p>\r\n                                </div>\r\n                                <div className=\"items\">\r\n                                    {\r\n                                        latest_sale.items.map((s_item,i)=>{\r\n                                            return(\r\n                                                <div className=\"one-item\" key={i}>\r\n                                                    <h4>\r\n                                                        {s_item.item.name}\r\n                                                    </h4>\r\n                                                    <p>\r\n                                                        {s_item.quantity}\r\n                                                    </p>\r\n                                                    <p><i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {s_item.quantity*s_item.item.price}</p>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                <Invoice />\r\n                                \r\n                            </div>\r\n                        }\r\n                        {\r\n                            sale_error\r\n                            &&\r\n                            <div className=\"error\">\r\n                                <h4>\r\n                                    {JSON.stringify(sale_error)}\r\n                                </h4>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n                {\r\n                    total > 0\r\n                    &&\r\n                    flip\r\n                    &&\r\n                    <h4 className=\"total\"><i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {total}</h4>\r\n                }\r\n                {\r\n                    total > 0\r\n                    &&\r\n                    flip\r\n                    &&\r\n                    <button className='add-sale' disabled={making_sale} onClick={this.confirmSale}>\r\n                        {\r\n                            making_sale\r\n                            ? <Loader\r\n                                type=\"Oval\"\r\n                                color=\"#ffff\"\r\n                                height={30}\r\n                                width={30}\r\n                                timeout={12000}\r\n\r\n                            />\r\n                            :   <i className=\"fa fa-money\" aria-hidden=\"true\"></i>\r\n                        }\r\n                        \r\n                    </button>\r\n                }\r\n                {\r\n                    total > 0 && flip \r\n                    &&\r\n                    <button className=\"clear-cart\" onClick={clear}>\r\n                        <i className=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                }\r\n                <button className=\"cart-toggle\" onClick={toggle}>\r\n                    {\r\n                        flip\r\n                        ? <i className=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\r\n                        : <i className=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>\r\n                    }\r\n                </button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapState = state=>({\r\n    flip : selectCartSwitch(state),\r\n    cart : selectCart(state),\r\n    total : selectCartTotal(state),\r\n    latest_sale : selectLatestSale(state),\r\n    sale_error : selectSaleError(state),\r\n    making_sale : selectMakingSale(state),\r\n    user : selectActiveUser(state),\r\n})\r\nconst mapDispatch = dispatch=>({\r\n    toggle : ()=>dispatch(toggleCart()),\r\n    clear : ()=>dispatch(clearCart()),\r\n    addSale : (cart,outlet_id)=>dispatch(addNewSale(cart,outlet_id)),\r\n})\r\nexport default connect(\r\n    mapState,\r\n    mapDispatch,\r\n\r\n)(SaleCart);","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Loader from 'react-loader-spinner';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\n// importing selectors\r\nimport {\r\n    selectAllItems,\r\n    selectItemsError,\r\n    selectLoadingItems,\r\n    selectFilterItems,\r\n    selectItemQuantity,\r\n\r\n} from '../../redux/item/Item.selectors';\r\n\r\n// importng actions\r\nimport {\r\n    getItemsOfmenu,\r\n    addItemToCart,\r\n    increaseItem,\r\n    removeItem,\r\n\r\n} from '../../redux/item/Item.actions';\r\n\r\n\r\n// importing components\r\nimport Search from './search';\r\nimport SaleCart from './sale_cart';\r\n\r\nclass AllItems extends Component{\r\n    componentDidMount =()=>{\r\n        const {getItems,match} = this.props;\r\n        getItems(match.params.id);\r\n    }\r\n    componentDidUpdate = oldProps =>{\r\n        const old_menu_id = oldProps.match.params.id;\r\n        const new_menu_id = this.props.match.params.id;\r\n\r\n        \r\n        if(old_menu_id !== new_menu_id){\r\n            this.props.getItems(new_menu_id);\r\n        }\r\n    }\r\n    addItem = item =>{\r\n        const {add,quantity,increase} = this.props;\r\n        const q = quantity(item.id);\r\n        if(!q){\r\n            add({\r\n                item,\r\n                quantity : 1,\r\n            })\r\n        }else{\r\n            increase({\r\n                item,\r\n                quantity : q+1,\r\n            })\r\n        }\r\n\r\n    }\r\n    removeItem = item =>{\r\n        const {quantity,increase,remove} = this.props;\r\n        const q = quantity(item.id);\r\n        if(!q){\r\n\r\n        }else if(q > 1){\r\n            increase({\r\n                item,\r\n                quantity : q-1,\r\n            })\r\n        }else{\r\n            remove({item,})\r\n        }\r\n    }\r\n    render=()=>{\r\n        const {\r\n            items,\r\n            error,\r\n            loading,\r\n            filteredItems,\r\n            \r\n            quantity,\r\n\r\n        } = this.props;\r\n        return(\r\n            <div className=\"all-items\">\r\n                <h1>\r\n                    All Items\r\n                    {\r\n                        loading\r\n                        && <Loader\r\n                                type=\"Oval\"\r\n                                color=\"#D72638\"\r\n                                height={50}\r\n                                width={50}\r\n                                timeout={12000}\r\n\r\n                            />\r\n                            \r\n                    }\r\n                </h1>\r\n                {\r\n                    error\r\n                    &&\r\n                    <div className=\"error\">\r\n                        <h4>\r\n                            {\r\n                                JSON.stringify(error)\r\n                            }\r\n                        </h4>\r\n                    </div>\r\n                }\r\n                <div className=\"items-list\">\r\n                    {\r\n                        items\r\n                        &&\r\n                        filteredItems\r\n                        ? filteredItems.map((item,i)=>{\r\n                            return(\r\n                                <div className=\"single-item\" key={i}>\r\n                                    <img \r\n                                        src={\r\n                                                item.image \r\n                                                ? item.image \r\n                                                : `https://ui-avatars.com/api/?name=${item.name}&size=200x150&background=EEE82C`\r\n                                            } \r\n                                        alt=\"\"\r\n                                    />\r\n                                    <div className=\"info\">\r\n                                        <h4>\r\n                                            {item.name}\r\n                                        </h4>\r\n                                        <p><i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {item.price.split('.')[0]}</p>\r\n                                    </div>\r\n                                    <div className=\"controls\">\r\n                                        <button className='q-plus' onClick={()=>this.addItem(item)}><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\r\n                                        <p>{quantity(item.id)}</p>\r\n                                        {\r\n                                            quantity(item.id) !== 0\r\n                                            &&\r\n                                            <button className='q-minus' onClick={()=>this.removeItem(item)}><i className=\"fa fa-minus\" aria-hidden=\"true\"></i></button>\r\n                                        }\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                        : items && items.map((item,i)=>{\r\n                            return(\r\n                                <div className=\"single-item\" key={i}>\r\n                                    <img \r\n                                        src={\r\n                                                item.image \r\n                                                ? item.image \r\n                                                : `https://ui-avatars.com/api/?name=${item.name}&size=200x150&background=EEE82C`\r\n                                            } \r\n                                        alt=\"\"\r\n                                    />\r\n                                    <div className=\"info\">\r\n                                        <h4>\r\n                                            {item.name}\r\n                                        </h4>\r\n                                        <p><i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {item.price.split('.')[0]}</p>\r\n                                    </div>\r\n                                    <div className=\"controls\">\r\n                                        <button className='q-plus'><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\r\n                                        <p>1</p>\r\n                                        <button className='q-minus'><i class=\"fa fa-minus\" aria-hidden=\"true\"></i></button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <Search />\r\n                <SaleCart />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    items : selectAllItems(state),\r\n    filteredItems : selectFilterItems(state),\r\n    error : selectItemsError(state),\r\n    loading : selectLoadingItems(state),\r\n    quantity : item_id => selectItemQuantity(item_id)(state),\r\n})\r\nconst mapDispatchToProps = dispatch=>({\r\n    getItems : (menu_id)=>dispatch(getItemsOfmenu(menu_id)),\r\n    add : cart_item =>dispatch(addItemToCart(cart_item)),\r\n    increase : cart_item=>dispatch(increaseItem(cart_item)),\r\n    remove : cart_item=>dispatch(removeItem(cart_item)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n\r\n)(AllItems));","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Loader from 'react-loader-spinner';\r\nimport {Route,withRouter} from 'react-router-dom';\r\n// importing selectors\r\nimport {\r\n    selectUserOutlet,\r\n\r\n} from '../../redux/outlet/Outlet.selectors';\r\nimport {\r\n    selectActiveUser,\r\n} from '../../redux/accounts/accounts.selectors';\r\nimport {\r\n    selectAllMenus,\r\n    selectLoadingMenus,\r\n    selectMenusError,\r\n    selectActiveMenu,\r\n\r\n} from '../../redux/menu/Menu.selectors';\r\n\r\n// importing actions\r\nimport {\r\n    getAllMenusByOutlet,\r\n    chooseMenu,\r\n\r\n} from '../../redux/menu/Menu.actions';\r\n\r\n\r\n// importing components\r\nimport AllItems from './all_items';\r\n\r\nclass AllMenus extends Component{\r\n    componentDidMount = ()=>{\r\n        const {getMenus,user} = this.props;\r\n        getMenus(user.outlet);\r\n    }\r\n    render=()=>{\r\n        const {\r\n            menus,\r\n            loading,\r\n            activeMenu,\r\n            error,\r\n            choose,\r\n            match,\r\n        } = this.props;\r\n        return(\r\n            <div className=\"all-menus\">\r\n                <div className=\"menu-list\">\r\n                    {\r\n                        error\r\n                        &&\r\n                        <div className=\"error\">\r\n                            <h4>\r\n                                {JSON.stringify(error)}\r\n                            </h4>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        menus\r\n                        &&\r\n                        menus.map((menu,i)=>{\r\n                            return(\r\n                                <div className=\"single-menu\" key={i} \r\n                                    onClick={()=>{\r\n                                        choose(menu);\r\n                                        this.props.history.push(`${match.path}/${menu.id}/items`)\r\n                                    }}>\r\n                                    <img src={menu.cover_image} alt=\"\"/>\r\n                                    <h4>{menu.title}</h4>\r\n                                    {\r\n                                        activeMenu &&\r\n                                        activeMenu.id === menu.id\r\n                                        &&\r\n                                        <div className=\"choosen\">\r\n                                            <i className=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        loading\r\n                        &&\r\n                        <Loader\r\n                            type=\"Oval\"\r\n                            color=\"#D72638\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={12000}\r\n\r\n                        />\r\n\r\n                    }\r\n                </div>\r\n                <Route path={`${match.path}/:id/items`}>\r\n                    <AllItems />\r\n                </Route>\r\n                \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n    menus : selectAllMenus(state),\r\n    activeMenu : selectActiveMenu(state),\r\n    error : selectMenusError(state),\r\n    loading : selectLoadingMenus(state),\r\n    outlet : selectUserOutlet(state),\r\n    user : selectActiveUser(state),\r\n})\r\nconst mapDispatchToProps = dispatch=>({\r\n    getMenus : (outlet_id)=>dispatch(getAllMenusByOutlet(outlet_id)),\r\n    choose : (menu)=>dispatch(chooseMenu(menu)),\r\n\r\n})\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps,\r\n    \r\n    )(AllMenus)\r\n);","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\n\r\n// importing components\r\nimport ActiveOutlet from '../components/sales/active_outlet';\r\nimport AllMenus from '../components/sales/all_menus';\r\n\r\n\r\n\r\n\r\n// importing actions\r\nimport {\r\n    toggleMenu,\r\n\r\n} from '../redux/website/Website.actions';\r\n\r\n\r\nclass Sales extends Component{\r\n\r\n    componentDidMount = ()=>{\r\n        this.props.toggle();\r\n    }\r\n\r\n    render=()=>{\r\n        return(\r\n            <div className=\"sales\">\r\n                <ActiveOutlet />\r\n                <AllMenus />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    toggle : ()=>dispatch(toggleMenu())\r\n})\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps,\r\n)(Sales);","import {createSelector} from 'reselect';\r\n\r\nconst selectVendor = state => state.vendor;\r\n\r\nexport const selectAllVendors = createSelector(\r\n    [selectVendor],\r\n    vendor => vendor.all_vendors,\r\n)\r\nexport const selectVendorsError = createSelector(\r\n    [selectVendor],\r\n    vendor => vendor.vendors_error,\r\n)\r\nexport const selectLoadingVendors = createSelector(\r\n    [selectVendor],\r\n    vendor => vendor.loading_vendors,\r\n)\r\nexport const selectSelectedVendor = createSelector(\r\n    [selectVendor],\r\n    vendor => vendor.selected_vendor,\r\n)","const vendorTypes = {\r\n    ALL_VENDORS_START :'ALL_VENDORS_START',\r\n    ALL_VENDORS_SUCCESS : 'ALL_VENDORS_SUCCESS',\r\n    ALL_VENDORS_ERROR : 'ALL_VENDORS_ERROR',\r\n    CHOOSE_VENDOR : 'CHOOSE_VENDOR',\r\n}\r\n\r\nexport default vendorTypes;","import vendorTypes from './Vendor.types';\r\nimport backendAPI from '../../config/backend';\r\n\r\n\r\nconst vendorsStart = ()=>({\r\n    type : vendorTypes.ALL_VENDORS_START,\r\n})\r\nconst vendorsSuccess = allVendors =>({\r\n    type : vendorTypes.ALL_VENDORS_SUCCESS,\r\n    payload : allVendors,\r\n})\r\nconst vendorsError = error =>({\r\n    type : vendorTypes.ALL_VENDORS_ERROR,\r\n    payload : error,\r\n})\r\nexport const getVendorsOfOutlet = outlet_id =>{\r\n    return dispatch =>{\r\n        dispatch(vendorsStart());\r\n        backendAPI.get(`/outlets/${outlet_id}/vendor/list/`)\r\n            .then(res=>dispatch(vendorsSuccess(res.data)))\r\n            .catch(err=>dispatch(vendorsError(err.response)));\r\n    }\r\n}\r\nexport const chooseVendor = vendor =>({\r\n    type : vendorTypes.CHOOSE_VENDOR,\r\n    payload : vendor,\r\n})","import {createSelector} from 'reselect';\r\n\r\nconst selectProduct = state=>state.product;\r\n\r\nexport const selectAllProducts = createSelector(\r\n    [selectProduct],\r\n    product => product.all_products,\r\n)\r\nexport const selectProductsError = createSelector(\r\n    [selectProduct],\r\n    product => product.products_error,\r\n)\r\nexport const selectLoadingProducts = createSelector(\r\n    [selectProduct],\r\n    product => product.loading_products,\r\n)\r\nexport const selectSearchText = createSelector(\r\n    [selectProduct],\r\n    product => product.search_text,\r\n)\r\n\r\nexport const selectFilteredProducts = createSelector(\r\n    [selectProduct],\r\n    product =>{\r\n        const text = product.search_text;\r\n        if(product.all_products){\r\n            if(text){\r\n                return product.all_products.filter(p=>p.name.toLowerCase().includes(text.toLowerCase()));\r\n            }else{\r\n                return product.all_products;\r\n            }\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n)\r\n\r\nexport const selectProductQuantity = product_id =>createSelector(\r\n    [selectProduct],\r\n    product=>{\r\n        const index = product.cart.findIndex(i=>i.product.id === product_id);\r\n        if(index > -1){\r\n            return product.cart[index].quantity;\r\n        }\r\n        return 0;\r\n    }\r\n)\r\n\r\nexport const selectPurchaseCart = createSelector(\r\n    [selectProduct],\r\n    product => product.cart,\r\n)\r\n\r\nexport const selectPurchaseCartTotal = createSelector(\r\n    [selectProduct],\r\n    product => {\r\n        let total = 0;\r\n        if(product.cart.length > 0){\r\n            product.cart.forEach(pro=>{\r\n                total += pro.product.price_per_unit*pro.quantity;\r\n            })\r\n        }   \r\n        return total;\r\n    }\r\n)\r\nexport const selectLatestPurchase = createSelector(\r\n    [selectProduct],\r\n    product => product.latest_purchase,\r\n)\r\nexport const selectMakingPurchase = createSelector(\r\n    [selectProduct],\r\n    product => product.making_purchase,\r\n)\r\nexport const selectPurchaseError = createSelector(\r\n    [selectProduct],\r\n    product => product.purchase_error,\r\n)","const productTypes = {\r\n    ALL_PRODUCTS_START : 'ALL_PRODUCTS_START',\r\n    ALL_PRODUCTS_SUCCESS : 'ALL_PRODUCTS_SUCCESS',\r\n    ALL_PRODUCTS_ERROR : 'ALL_PRODUCTS_ERROR',\r\n\r\n    CHANGE_PRODUCT_SEARCH : 'CHANGE_PRODUCT_SEARCH',\r\n\r\n    ADD_PRODUCT_TO_CART : 'ADD_PRODUCT_TO_CART',\r\n    REMOVE_PRODUCT_FROM_CART : 'REMOVE_PRODUCT_FROM_CART',\r\n    UPDATE_PRODUCT_IN_CART : 'UPDATE_PRODUCT_IN_CART',\r\n\r\n    CLEAR_PURCHASE_CART : 'CLEAR_PURCHASE_CART',\r\n\r\n    ADD_PRCHASE_START : 'ADD_PURCHASE_START',\r\n    ADD_PURCHASE_SUCCESS : 'ADD_PURCHASE_SUCCESS',\r\n    ADD_PURCHASE_ERROR : 'ADD_PURCHASE_ERROR',\r\n\r\n}\r\n\r\nexport default productTypes;","import productTypes from './Product.types';\r\nimport backendAPI from '../../config/backend';\r\n\r\n\r\nconst productsStart = ()=>({\r\n    type : productTypes.ALL_PRODUCTS_START,\r\n})\r\nconst productsSuccess = products =>({\r\n    type : productTypes.ALL_PRODUCTS_SUCCESS,\r\n    payload : products,\r\n})\r\nconst productsError = error =>({\r\n    type : productTypes.ALL_PRODUCTS_ERROR,\r\n    payload : error,\r\n})\r\nexport const getProductsOfVendor = vendor_id =>{\r\n    return dispatch =>{\r\n        dispatch(productsStart());\r\n        backendAPI.get(`/outlets/vendor/${vendor_id}/products/`)\r\n            .then(res=>dispatch(productsSuccess(res.data)))\r\n            .catch(err=>dispatch(productsError(err.response)));\r\n    }\r\n}\r\nexport const searchProducts = text =>({\r\n    type : productTypes.CHANGE_PRODUCT_SEARCH,\r\n    payload : text,\r\n})\r\n\r\nexport const addProductToCart = product =>({\r\n    type : productTypes.ADD_PRODUCT_TO_CART,\r\n    payload : product,\r\n})\r\nexport const removeProductFromCart = product =>({\r\n    type : productTypes.REMOVE_PRODUCT_FROM_CART,\r\n    payload : product,\r\n})\r\nexport const updateProductInCart = product =>({\r\n    type : productTypes.UPDATE_PRODUCT_IN_CART,\r\n    payload : product,\r\n})\r\nexport const clearPurchaseCart = ()=>({\r\n    type : productTypes.CLEAR_PURCHASE_CART,\r\n})\r\n\r\n\r\nconst addPurchaseStart = ()=>({\r\n    type : productTypes.ADD_PRCHASE_START,\r\n})\r\nconst addPurchaseSuccess = newPurchase=>({\r\n    type : productTypes.ADD_PURCHASE_SUCCESS,\r\n    payload : newPurchase,\r\n})\r\nconst addPurchaseError = error =>({\r\n    type : productTypes.ADD_PURCHASE_ERROR,\r\n    payload  : error,\r\n})\r\nexport const addNewPurchase = (data,outlet_id) =>{\r\n    return dispatch=>{\r\n        dispatch(addPurchaseStart());\r\n        backendAPI.post(`/outlets/${outlet_id}/add-purchase/`,data)\r\n            .then(res=>dispatch(addPurchaseSuccess(res.data)))\r\n            .catch(err=>dispatch(addPurchaseError(err.response)));\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter,Route} from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner';\r\n// importing selectors\r\nimport {\r\n    selectPurchaseCart,\r\n    selectPurchaseCartTotal,\r\n    selectLatestPurchase,\r\n    selectMakingPurchase,\r\n    selectPurchaseError,\r\n\r\n} from '../../redux/product/Product.selectors';\r\nimport {\r\n    selectActiveUser,\r\n} from '../../redux/accounts/accounts.selectors';\r\n\r\n// importing actions\r\nimport {\r\n    removeProductFromCart,\r\n    clearPurchaseCart,\r\n    addNewPurchase,\r\n\r\n} from '../../redux/product/Product.actions';\r\n\r\nclass PurchaseCart extends Component{\r\n    state = {\r\n        visible : false,\r\n    }\r\n    toggleVisibility = ()=>{\r\n        this.setState({\r\n            visible : !this.state.visible,\r\n        })\r\n    }\r\n    createPurchase = ()=>{\r\n        const {cart,user,addPurchase} = this.props;\r\n        const mod_cart = [];\r\n        cart.forEach((cart_p)=>{\r\n            const mod_cart_p = {\r\n                id : cart_p.product.id,\r\n                quantity : cart_p.quantity,\r\n            }\r\n            mod_cart.push(mod_cart_p);\r\n        })\r\n        addPurchase(mod_cart , user.outlet);\r\n    }\r\n    render = ()=>{\r\n        const {\r\n            visible,\r\n\r\n        } = this.state;\r\n        const {\r\n            cart,\r\n            remove,\r\n            clear,\r\n\r\n            total,\r\n\r\n            latest_purchase,\r\n            error,\r\n            loading,\r\n\r\n            \r\n\r\n        } = this.props;\r\n        return (\r\n            <div className=\"purchase-cart\">\r\n                <div className={visible ? \"purchase-cart-body visible\" : \"purchase-cart-body\"}>\r\n                    {\r\n                        cart\r\n                        &&\r\n                        cart.map((cart_p,i)=>{\r\n                            return(\r\n                                <div className=\"cart-product\" key={i}>\r\n                                    <h4>\r\n                                        {cart_p.product.name}\r\n                                    </h4>\r\n                                    <p>{cart_p.quantity} {cart_p.product.measuring_unit}</p>\r\n                                    <h3><i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {cart_p.product.price_per_unit * cart_p.quantity}</h3>\r\n                                    <button className='remove-product' onClick={()=>remove(cart_p)}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></button>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        latest_purchase\r\n                        &&\r\n                        <div className=\"latest-purchase\">\r\n                            <h1><i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {latest_purchase.grand_total.split('.')[0]}</h1>\r\n                            <div className=\"products\">\r\n                                {\r\n                                    latest_purchase.products.map((cart_p , i)=>{\r\n                                        return(\r\n                                            <div className=\"cart-product\" key={i}>\r\n                                                <h4>\r\n                                                    {cart_p.product.name}\r\n                                                </h4>\r\n                                                <p><i className=\"fa fa-times\" aria-hidden=\"true\"></i> {cart_p.quantity}</p>\r\n                                                <p><i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {cart_p.quantity * cart_p.product.price_per_unit}</p>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        error\r\n                        &&\r\n                        <div className=\"error\">\r\n                            <h4>\r\n                                {JSON.stringify(error)}\r\n                            </h4>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                {   \r\n                    total > 0\r\n                    &&\r\n                    visible\r\n                   \r\n                    &&\r\n                    <div className=\"purchase-cart-total\"  >\r\n                        <h4><i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {total}</h4>\r\n                    </div>\r\n                }\r\n                {\r\n                    total > 0\r\n                    &&\r\n                    visible\r\n                    &&\r\n                    <button className=\"clear-purchase-cart\" onClick={clear}>\r\n                        <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                }\r\n                \r\n                <button className=\"purchase-cart-toggle\" onClick={this.toggleVisibility}>\r\n                    {\r\n                        visible\r\n                        ? <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                        : <i className=\"fa fa-cart-plus\" aria-hidden=\"true\"></i>\r\n                         \r\n                    }\r\n                </button>\r\n                <button \r\n                    className={visible ? \"confirm-purchase active\" : \"confirm-purchase\"}\r\n                    disabled={!total || loading}\r\n                    onClick={this.createPurchase}\r\n                >\r\n                    {\r\n                        loading\r\n                        ? <Loader\r\n                            type=\"Oval\"\r\n                            color=\"#ffff\"\r\n                            height={50}\r\n                            width={50}\r\n                            timeout={12000} //3 secs\r\n\r\n                        />\r\n                        : <i className=\"fa fa-file-text\" aria-hidden=\"true\"></i>\r\n                    }\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapState = state=>({\r\n    cart : selectPurchaseCart(state),\r\n    total : selectPurchaseCartTotal(state),\r\n    latest_purchase : selectLatestPurchase(state),\r\n    error : selectPurchaseError(state),\r\n    loading : selectMakingPurchase(state),\r\n    user : selectActiveUser(state),\r\n})\r\n\r\nconst mapDispatch = dispatch=>({\r\n    remove : product => dispatch(removeProductFromCart(product)),\r\n    clear : ()=>dispatch(clearPurchaseCart()),\r\n    addPurchase : (data,outlet_id) =>dispatch(addNewPurchase(data , outlet_id))\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapState,\r\n    mapDispatch,\r\n\r\n)(PurchaseCart));","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// importing selectors\r\nimport {\r\n    \r\n    selectProductQuantity,\r\n\r\n} from '../../redux/product/Product.selectors';\r\n\r\n// importing actions\r\nimport {\r\n    addProductToCart,\r\n    removeProductFromCart,\r\n    updateProductInCart,\r\n\r\n} from '../../redux/product/Product.actions';\r\n\r\nclass Controls extends Component{\r\n    state = {\r\n        quan : 0,\r\n    }\r\n    changeQuantity = e =>{\r\n        this.setState({\r\n            quan : e.target.value,\r\n        })\r\n    }\r\n\r\n    pressAdd = product =>{\r\n        const {add,update,quantity} = this.props;\r\n        const {quan} = this.state;\r\n        const q = quantity(product.id);\r\n        if(q){\r\n            update({\r\n                product,\r\n                quantity : quan,\r\n            })\r\n        }else{\r\n            add({\r\n                product,\r\n                quantity : quan,\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    render=()=>{\r\n        const {\r\n            quantity,\r\n            product,\r\n\r\n        } = this.props;\r\n        const {\r\n            quan,\r\n\r\n        } = this.state;\r\n        return(\r\n            <div className=\"controls\">\r\n                <input \r\n                    className='input'\r\n                    placeholder = 'Type in Quantity'\r\n                    type='number'\r\n                    min={0}\r\n                    value={quan}\r\n                    onChange={this.changeQuantity}\r\n                />\r\n                \r\n                {\r\n                    quantity(product.id)\r\n                    ?  <button className='update-product' onClick={()=>this.pressAdd(product)}><i className=\"fa fa-upload\" aria-hidden=\"true\"></i></button>\r\n                    : <button  onClick={()=>this.pressAdd(product)} disabled={!quan}><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapState = state =>({\r\n    quantity : product_id =>selectProductQuantity(product_id)(state),\r\n})\r\n\r\nconst mapDispatch = dispatch =>({\r\n    add : p=>dispatch(addProductToCart(p)),\r\n    remove : p=>dispatch(removeProductFromCart(p)),\r\n    update : p=>dispatch(updateProductInCart(p)),\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    mapDispatch,\r\n\r\n)(Controls);","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n// importing Selectors\r\nimport {\r\n    selectSelectedVendor,\r\n\r\n} from '../../redux/vendor/Vendor.selectors';\r\nimport {\r\n    selectAllProducts,\r\n    selectLoadingProducts,\r\n    selectProductsError,\r\n    selectFilteredProducts,\r\n    selectSearchText,\r\n    selectProductQuantity,\r\n\r\n} from '../../redux/product/Product.selectors';\r\n\r\n\r\n// importing actions\r\nimport {\r\n    getProductsOfVendor,\r\n    searchProducts,\r\n    addProductToCart,\r\n    removeProductFromCart,\r\n    updateProductInCart,\r\n\r\n} from '../../redux/product/Product.actions';\r\n\r\n\r\n// importing components\r\nimport PurchaseCart from './cart';\r\nimport Controls from './controls';\r\n\r\nclass AllProducts extends Component{\r\n    \r\n    \r\n\r\n    componentDidMount = ()=>{\r\n        const {match : {params : {id,},}, getProducts} = this.props;\r\n        getProducts(id);\r\n    }\r\n\r\n    addProduct = product =>{\r\n        const {add,update,quantity} = this.props;\r\n        const q = quantity(product.id);\r\n        if(q){\r\n            update({\r\n                product,\r\n                quantity : q+1,\r\n            })\r\n        }else{\r\n            add({\r\n                product,\r\n                quantity : 1,\r\n            })\r\n        }\r\n    }\r\n    updateProduct = product =>{\r\n        const {update,remove,quantity} = this.props;\r\n        const q = quantity(product.id);\r\n        if(q >=1){\r\n            update({\r\n                product,\r\n                quantity : q-1,\r\n            })\r\n        }else{\r\n            remove({\r\n                product,\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = oldProps =>{\r\n        const old_ven_id = oldProps.match.params.id;\r\n        const new_ven_id = this.props.match.params.id;\r\n        if(old_ven_id !== new_ven_id) this.props.getProducts(new_ven_id);\r\n    }\r\n\r\n    render = ()=>{\r\n        const {\r\n            vendor,\r\n            loading,\r\n            error,\r\n            search,\r\n            filteredProducts,\r\n            search_text,\r\n            quantity,\r\n\r\n        } = this.props;\r\n\r\n        \r\n        \r\n        return (\r\n            <div className=\"all-products\">\r\n                {\r\n                    vendor\r\n                    &&\r\n                    <div className=\"selected-vendor\">\r\n                        <h1>\r\n                            {vendor.name}\r\n                        </h1>\r\n                        <p><i className=\"fa fa-phone\" aria-hidden=\"true\"></i> {vendor.contact_number}</p>\r\n                        <p><i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i> {vendor.address}</p>\r\n                    </div>\r\n                }\r\n                <div className=\"products-list\">\r\n                    {\r\n                        error\r\n                        &&\r\n                        <div className=\"error\">\r\n                            <h4>\r\n                                {JSON.stringify(error)}\r\n                            </h4>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        loading\r\n                        &&\r\n                        <Loader\r\n                            type=\"Oval\"\r\n                            color=\"#D72638\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={12000} //3 secs\r\n\r\n                        />\r\n                        \r\n                    }\r\n                    {\r\n                        filteredProducts\r\n                        &&\r\n                        filteredProducts.map((p,i)=>{\r\n                            return(\r\n                                <div className=\"product\" key={i}>\r\n                                    <h4>\r\n                                        {p.name}\r\n                                    </h4>\r\n                                    <div className=\"info\">\r\n                                        <p><i className=\"fa fa-inr\" aria-hidden=\"true\"></i> {p.price_per_unit}</p>\r\n                                        <p>Per <i className=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> {p.measuring_unit}</p>\r\n                                    </div>\r\n                                    <Controls  product={p}/>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"product-search\">\r\n                    <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"search_text\" \r\n                        id=\"\"\r\n                        placeholder=\"Search product\"\r\n                        value={search_text}\r\n                        onChange={e=>{\r\n                            search(e.target.value);\r\n\r\n                        }}\r\n\r\n                    />\r\n                </div>\r\n                <PurchaseCart />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapState = state =>({\r\n    vendor : selectSelectedVendor(state),\r\n    products : selectAllProducts(state),\r\n    filteredProducts : selectFilteredProducts(state),\r\n    error : selectProductsError(state),\r\n    loading : selectLoadingProducts(state),\r\n    search_text : selectSearchText(state),\r\n    quantity : product_id => selectProductQuantity(product_id)(state),\r\n})\r\n\r\nconst mapDispatch = dispatch =>({\r\n    getProducts : vendor_id =>dispatch(getProductsOfVendor(vendor_id)),\r\n    search : text=>dispatch(searchProducts(text)),\r\n    add : p => dispatch(addProductToCart(p)),\r\n    remove : p => dispatch(removeProductFromCart(p)),\r\n    update : p => dispatch(updateProductInCart(p)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapState,\r\n    mapDispatch,\r\n\r\n)(AllProducts));","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter,Route} from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner';\r\n// importing selectors\r\nimport {\r\n    selectAllVendors,\r\n    selectVendorsError,\r\n    selectLoadingVendors,\r\n    selectSelectedVendor,\r\n\r\n} from '../../redux/vendor/Vendor.selectors';\r\n\r\nimport {\r\n    selectActiveUser,\r\n\r\n} from '../../redux/accounts/accounts.selectors';\r\n\r\n// importing actions\r\nimport {\r\n    getVendorsOfOutlet,\r\n    chooseVendor,\r\n\r\n} from '../../redux/vendor/Vendor.actions';\r\n\r\n\r\n// importing components\r\nimport AllProducts from './all_products';\r\n\r\nclass AllVendors extends Component{\r\n\r\n    componentDidMount = ()=>{\r\n        const {user,getVendors} = this.props;\r\n        getVendors(user.outlet);\r\n    }\r\n    componentWillUnmount = ()=>{\r\n        const {choose} = this.props;\r\n        choose(null);\r\n    }\r\n\r\n    render = ()=>{\r\n        const {\r\n            vendors,\r\n            loading,\r\n            error,\r\n            choosen,\r\n            match,\r\n            history,\r\n\r\n            choose,\r\n        } = this.props;\r\n        return (\r\n            <div className=\"all-vendors\">\r\n                \r\n                <div className=\"vendor-list\">\r\n                    <h1>\r\n                        All Vendors\r\n                        {\r\n                            loading\r\n                            &&\r\n                            <Loader\r\n                                type=\"Oval\"\r\n                                color=\"#D72638\"\r\n                                height={50}\r\n                                width={50}\r\n                                timeout={12000} //3 secs\r\n\r\n                            />\r\n                        }\r\n                    </h1>\r\n                    {\r\n                        vendors\r\n                        &&\r\n                        vendors.map((vendor,i)=>{\r\n                            return(\r\n                                <div className=\"one-vendor\" key={i} \r\n                                    onClick={()=>{\r\n                                        choose(vendor);\r\n                                        history.push(`${match.path}/${vendor.id}/products`);\r\n                                    }}\r\n                                >\r\n                                    <h3><i className=\"fa fa-user-circle-o\" aria-hidden=\"true\"></i> {vendor.name}</h3>\r\n                                    <p><i className=\"fa fa-phone\" aria-hidden=\"true\"></i> {vendor.contact_number}</p>\r\n                                    <p><i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i> {vendor.address}</p>\r\n                                    {   choosen\r\n                                        &&\r\n                                        choosen.id === vendor.id\r\n                                        &&\r\n                                        <p className=\"active\"><i className=\"fa fa-eye\" aria-hidden=\"true\"></i></p>\r\n                                    }\r\n                                    \r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        error\r\n                        &&\r\n                        <div className=\"error\">\r\n                            <h4>\r\n                                {JSON.stringify(error)}\r\n                            </h4>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <Route path={`${match.path}/:id/products`}>\r\n                    <AllProducts />\r\n                </Route>   \r\n                \r\n            </div>\r\n            \r\n        );\r\n    }\r\n\r\n}\r\nconst mapState = state =>({\r\n    vendors : selectAllVendors(state),\r\n    loading : selectLoadingVendors(state),\r\n    error : selectVendorsError(state),\r\n    choosen : selectSelectedVendor(state),\r\n    user : selectActiveUser(state),\r\n})\r\nconst mapDispatch = dispatch =>({\r\n    getVendors : outlet_id =>dispatch(getVendorsOfOutlet(outlet_id)),\r\n    choose : vendor =>dispatch(chooseVendor(vendor)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapState,\r\n    mapDispatch,\r\n\r\n)(AllVendors));","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\n// importing components\r\nimport  ActiveOutlet from '../components/sales/active_outlet';\r\nimport AllVendors from '../components/inventory/all_vendors';\r\n\r\n// importing actions\r\nimport {\r\n    toggleMenu,\r\n\r\n} from '../redux/website/Website.actions';\r\n\r\nclass Inventory extends Component{\r\n    componentDidMount = ()=>{\r\n        this.props.toggle();\r\n    }\r\n    render = ()=>{\r\n        return (\r\n            <div className=\"inventory\">\r\n                <ActiveOutlet />\r\n                <AllVendors />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatch = dispatch =>({\r\n    toggle : ()=>dispatch(toggleMenu()),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    null,\r\n    mapDispatch,\r\n)(Inventory));","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\n// importing selectors\r\nimport {\r\n    selectActiveUser,\r\n\r\n} from '../../redux/accounts/accounts.selectors';\r\n// importing actions\r\nimport {\r\n    toggleMenu,\r\n} from '../../redux/website/Website.actions';\r\n\r\n\r\nclass Profile extends Component{\r\n    componentDidMount = ()=>{\r\n        const {toggle} = this.props;\r\n        toggle();\r\n    }\r\n    render=()=>{\r\n        const {user} = this.props;\r\n        return(\r\n            <div className=\"profile\">\r\n                {\r\n                    user\r\n                    &&\r\n                    <div className=\"user-data\">\r\n                        <img src={\r\n                                user.display_image\r\n                                ? user.display_image\r\n                                : `https://ui-avatars.com/api/?name=${user.user.first_name}+${user.user.last_name}&background=ffff&color=232ED1&size=250`\r\n                            } \r\n                                alt=\"\"\r\n                            />\r\n                        <h1>{user.user.first_name} {user.user.last_name}</h1>\r\n                        <div className=\"contact-info\">\r\n                            <p><i className=\"fa fa-phone\" aria-hidden=\"true\"></i> {user.contact_number}</p>\r\n                            <p><i className=\"fa fa-envelope\" aria-hidden=\"true\"></i> {user.user.email}</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapState = state =>({\r\n    user : selectActiveUser(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggle : ()=>dispatch(toggleMenu()),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapState,\r\n    mapDispatchToProps,\r\n\r\n)(Profile));","import React,{Component} from 'react';\nimport {BrowserRouter as Router,Route,Switch,Redirect} from 'react-router-dom';\nimport './App.css';\nimport {connect} from 'react-redux';\n// importing components\nimport NavBar from './components/NavBar';\n\n// importing pages\nimport Home from './pages/home';\nimport Login from './pages/user/login';\nimport Register from './pages/user/register';\nimport Outlet from './pages/outlet/outlet';\nimport Sales from './pages/sales';\nimport Inventory from './pages/inventory';\n\n// importing selectors\nimport {\n  selectIsAuthenticated,\n} from './redux/accounts/accounts.selectors';\nimport Profile from './pages/user/profile';\n\nclass App extends Component{\n\n  render = ()=>{\n    const {\n      isAuth,\n    } = this.props;\n    return(\n      \n        <Router>\n          {isAuth && <NavBar/>}\n          <Switch>\n            <Route exact path='/'>\n                {isAuth ? <Redirect to='/home' />: <Login />}\n            </Route>\n            <Route  path='/home'>\n              {isAuth ? <Home /> : <Redirect to='/' />}\n            </Route>\n            <Route exact path='/register'>\n                {isAuth ? <Redirect to='/home' />: <Register/>}\n            </Route>\n            <Route path='/profile'>\n                {isAuth ? <Profile /> : <Redirect to='/' />}\n            </Route>\n            <Route path='/outlet'>\n                {isAuth ? <Outlet /> : <Redirect to='/' />}\n            </Route>\n            <Route path='/sales'>\n                {isAuth ? <Sales /> : <Redirect to='/' />}\n            </Route>\n            <Route path='/inventory'>\n                {isAuth ? <Inventory /> : <Redirect to='/' />}\n            </Route>\n          </Switch>\n        </Router>\n        \n        \n      \n      \n\n    );\n  }\n}\n\nconst mapStateToProps = state =>({\n  isAuth : selectIsAuthenticated(state),\n})\nexport default connect(\n  mapStateToProps,\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import accountsTypes from './accounts.types';\r\n\r\nconst INITIAL_STATE = {\r\n    activeUser : null,\r\n    loadingUser : false,\r\n    userError : null,\r\n\r\n    token : null,\r\n    tokenError : null,\r\n}\r\n\r\nconst accountsReducer = (state = INITIAL_STATE , action)=>{\r\n    switch(action.type){\r\n        case accountsTypes.USER_LOGOUT:\r\n            return {\r\n                ...state,\r\n                activeUser : null,\r\n                userError : null,\r\n                token : null,\r\n                tokenError : null,\r\n            }\r\n        case accountsTypes.AUTH_TOKEN_START:\r\n            return {\r\n                ...state,\r\n                loadingUser : true,\r\n                userError : null,\r\n                tokenError : null,\r\n            }\r\n        \r\n            case accountsTypes.AUTH_TOKEN_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    token : action.payload,\r\n                    loadingUser : false,\r\n                }\r\n            case accountsTypes.AUTH_TOKEN_ERROR:\r\n                return {\r\n                    ...state,\r\n                    tokenError : action.payload,\r\n                    loadingUser : false,\r\n                }\r\n            case accountsTypes.USER_START:\r\n                return {\r\n                    ...state,\r\n                    loadingUser : true,\r\n                }\r\n            case accountsTypes.USER_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    activeUser : action.payload,\r\n                    loadingUser : false,\r\n                }\r\n            case accountsTypes.USER_ERROR:\r\n                return {\r\n                    ...state,\r\n                    userError : action.payload,\r\n                    loadingUser : false,\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default accountsReducer;","import websiteTypes from './Website.types';\r\n\r\nconst INITIAL_STATE  = {\r\n    menuSwitch : false,\r\n\r\n}\r\n\r\n\r\nconst websiteReducer = (state = INITIAL_STATE , action)=>{\r\n    switch(action.type){\r\n        case websiteTypes.TOGGLE_MENU:\r\n            return {\r\n                ...state,\r\n                menuSwitch : !state.menuSwitch,\r\n\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default websiteReducer;","import outletTypes from './Outlet.types';\r\n\r\nconst INITIAL_STATE = {\r\n    all_outlets : null,\r\n    outlets_error : null,\r\n    loading_outlets : false,\r\n\r\n    active_outlet : null,\r\n\r\n    single_outlet : null,\r\n    outlet_error : null,\r\n    loading_outlet : false,\r\n    \r\n}\r\n\r\n\r\nconst outletReducer = (state = INITIAL_STATE,action)=>{\r\n\r\n    switch(action.type){\r\n        case outletTypes.SINGLE_OUTLET_START:\r\n            return {\r\n                ...state,\r\n                loading_outlet : true,\r\n                outlet_error : null,\r\n                single_outlet : null,\r\n            }\r\n        case outletTypes.SINGLE_OUTLET_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading_outlet : false,\r\n                \r\n                single_outlet : action.payload,\r\n            }\r\n        case outletTypes.SINGLE_OUTLET_ERROR:\r\n            return {\r\n                ...state,\r\n                loading_outlet : false,\r\n                outlet_error : action.payload,\r\n            }\r\n        case outletTypes.SELECT_OUTLET:\r\n            return {\r\n                ...state,\r\n                active_outlet : action.payload,\r\n            }\r\n        case outletTypes.ALL_OUTLETS_START:\r\n            return {\r\n                ...state,\r\n                loading_outlets : true,\r\n                outlets_error : null,\r\n            }\r\n        case outletTypes.ALL_OUTLETS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                all_outlets : action.payload,\r\n                loading_outlets : false,\r\n            }\r\n        case outletTypes.ALL_OUTLETS_ERROR:\r\n            return {\r\n                ...state,\r\n                outlets_error : action.payload,\r\n                loading_outlets : false,\r\n            }\r\n\r\n        default :\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport default outletReducer;","import menuTypes from './Menu.types';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    all_menus : null,\r\n    menus_error : null,\r\n    loading_menus : false,\r\n\r\n    activeMenu : null,\r\n}\r\n\r\nconst menuReducer = (state=INITIAL_STATE,action)=>{\r\n    switch(action.type){\r\n        case menuTypes.MENUS_START:\r\n            return {\r\n                ...state,\r\n                loading_menus : true,\r\n                menus_error : false,\r\n            }\r\n        case menuTypes.MENUS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                all_menus : action.payload,\r\n                loading_menus : false,\r\n            }\r\n        case menuTypes.MENUS_ERROR:\r\n            return {\r\n                ...state,\r\n                menus_error : action.payload,\r\n                loading_menus : false,\r\n            }\r\n\r\n        case menuTypes.CHOOSE_MENU:\r\n            return {\r\n                ...state,\r\n                activeMenu : action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default menuReducer;","import itemTypes from './Item.types';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    all_items : null,\r\n    items_error : null,\r\n    loading_items : false,\r\n\r\n    search_text : '',\r\n    cart : [],\r\n    cartSwitch : false,\r\n\r\n    latest_sale : null,\r\n    sale_error : null,\r\n    making_sale : false,\r\n}\r\n\r\nconst itemReducer =(state=INITIAL_STATE,action)=>{\r\n    switch(action.type){\r\n        case itemTypes.ADD_SALE_START:\r\n            return {\r\n                ...state,\r\n                making_sale : true,\r\n                sale_error : null,\r\n                latest_sale : null,\r\n            }\r\n        case itemTypes.ADD_SALE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                latest_sale : action.payload,\r\n                making_sale : false,\r\n            }\r\n        case itemTypes.ADD_SALE_ERROR:\r\n            return {\r\n                ...state,\r\n                sale_error:action.payload,\r\n                making_sale : false,\r\n            }\r\n        case itemTypes.CLEAR_CART:\r\n            return {\r\n                ...state,\r\n                cart : [],\r\n            }\r\n        case itemTypes.CART_TOGGLE:\r\n            return {\r\n                ...state,\r\n                cartSwitch : !state.cartSwitch,\r\n            }\r\n        case itemTypes.ADD_ITEM_TO_CART:\r\n            \r\n            return {\r\n                ...state,\r\n                cart : [...state.cart,action.payload],\r\n                latest_sale : null,\r\n            }\r\n        case itemTypes.INCREASE_ITEM:\r\n            const oldCart = state.cart;\r\n            const newItem = action.payload;\r\n            const index = oldCart.findIndex(i=>i.item.id===newItem.item.id);\r\n            oldCart.splice(index,1)\r\n            return {\r\n                ...state,\r\n                cart : [...oldCart,action.payload],\r\n            }\r\n        \r\n            \r\n        case itemTypes.REMOVE_ITEM_FROM_CART:\r\n            const oldCart_1 = state.cart;\r\n            const item = action.payload;\r\n            const index_1 = oldCart_1.findIndex(i=>i.item.id===item.item.id);\r\n            oldCart_1.splice(index_1,1)\r\n            return {\r\n                ...state,\r\n                cart : [...oldCart_1,]\r\n            }\r\n        case itemTypes.SEARCH_ITEM:\r\n\r\n            return {\r\n                ...state,\r\n                search_text : action.payload,\r\n            }\r\n        case itemTypes.ITEMS_START:\r\n            return {\r\n                ...state,\r\n                loading_items : true,\r\n                items_error : null,\r\n            }\r\n        case itemTypes.ITEMS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                all_items : action.payload,\r\n                loading_items : false,\r\n            }\r\n        case itemTypes.ITEMS_ERROR:\r\n            return {\r\n                ...state,\r\n                items_error : action.payload,\r\n                loading_items : false,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default itemReducer;","import vendorTypes from './Vendor.types';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    all_vendors:null,\r\n    vendors_error : null,\r\n    loading_vendors:false,\r\n\r\n    selected_vendor : null,\r\n}\r\n\r\n\r\nconst vendorReducer = (state=INITIAL_STATE,action)=>{\r\n    \r\n    switch(action.type){\r\n        case vendorTypes.ALL_VENDORS_START:\r\n            return {\r\n                ...state,\r\n                all_vendors : null,\r\n                vendors_error:null,\r\n                loading_vendors : true,\r\n            }\r\n        case vendorTypes.ALL_VENDORS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                all_vendors : action.payload,\r\n                loading_vendors : false,\r\n            }\r\n        case vendorTypes.ALL_VENDORS_ERROR:\r\n            return {\r\n                ...state,\r\n                vendors_error:action.payload,\r\n                loading_vendors : false,\r\n            }\r\n        case vendorTypes.CHOOSE_VENDOR:\r\n            return {\r\n                ...state,\r\n                selected_vendor : action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default vendorReducer;","import productTypes from './Product.types';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    all_products : null,\r\n    products_error : null,\r\n    loading_products : false,\r\n\r\n    search_text : '',\r\n    cart : [],\r\n\r\n    latest_purchase : null,\r\n    making_purchase : false,\r\n    purchase_error : null,\r\n}\r\n\r\n\r\nconst productReducer = (state = INITIAL_STATE , action)=>{\r\n\r\n    switch(action.type){\r\n        case productTypes.ADD_PRCHASE_START:\r\n            return {\r\n                ...state,\r\n                making_purchase : true,\r\n                latest_purchase : null,\r\n                purchase_error : null,\r\n            }\r\n        case productTypes.ADD_PURCHASE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                latest_purchase : action.payload,\r\n                making_purchase : false,\r\n                cart : [],\r\n            }\r\n        case productTypes.ADD_PURCHASE_ERROR:\r\n            return {\r\n                ...state,\r\n                purchase_error : action.payload,\r\n                making_purchase : false,\r\n            }\r\n        case productTypes.CLEAR_PURCHASE_CART:\r\n            return {\r\n                ...state,\r\n                cart : [],\r\n            }\r\n        case productTypes.ADD_PRODUCT_TO_CART:\r\n            return{\r\n                ...state,\r\n                cart : [...state.cart,action.payload],\r\n                latest_purchase : null,\r\n            }\r\n        case productTypes.REMOVE_PRODUCT_FROM_CART:\r\n            const oldCart = state.cart;\r\n            const index = oldCart.findIndex(i=>i.product.id===action.payload.product.id);\r\n            \r\n            if(index > -1){\r\n                oldCart.splice(index , 1)\r\n                return {\r\n                    ...state,\r\n                    cart : [...oldCart,]\r\n\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        case productTypes.UPDATE_PRODUCT_IN_CART:\r\n            const oldCart_1 = state.cart;\r\n            const index_1 = oldCart_1.findIndex(i=>i.product.id===action.payload.product.id);\r\n            \r\n            if(index_1 > -1){\r\n                oldCart_1.splice(index_1 , 1);\r\n                return {\r\n                    ...state,\r\n                    cart : [...oldCart_1,action.payload]\r\n\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        case productTypes.CHANGE_PRODUCT_SEARCH :\r\n            return {\r\n                ...state,\r\n                search_text : action.payload,\r\n            }\r\n        case productTypes.ALL_PRODUCTS_START:\r\n            return {\r\n                ...state,\r\n                all_products : null,\r\n                products_error : null,\r\n                loading_products : true,\r\n            }\r\n        case productTypes.ALL_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                all_products : action.payload,\r\n                loading_products : false,\r\n            }\r\n        case productTypes.ALL_PRODUCTS_ERROR:\r\n            return {\r\n                ...state,\r\n                products_error : action.payload,\r\n                loading_products : false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default productReducer;","import recordTypes from './Record.types';\r\n\r\nconst INITIAL_STATE = {\r\n    sale_date : null,\r\n    purchase_date : null,\r\n\r\n    sale_records : null,\r\n    sale_records_error : null,\r\n    sale_records_loading : false,\r\n\r\n    purchase_records : null,\r\n    purchase_records_error : null,\r\n    purchase_records_loading : false,\r\n    \r\n}\r\n\r\n\r\nconst recordReducer = (state = INITIAL_STATE , action)=>{\r\n\r\n    switch(action.type){\r\n        case recordTypes.SALE_DATE_CHANGE:\r\n            return {\r\n                ...state,\r\n                sale_date : action.payload,\r\n            }\r\n        case recordTypes.PURCHASE_DATE_CHANGE:\r\n            return {\r\n                ...state,\r\n                purchase_date : action.payload,\r\n            }\r\n        case recordTypes.SALE_RECORDS_START:\r\n            return {\r\n                ...state,\r\n                sale_records_loading : true,\r\n                sale_records : null,\r\n                sale_records_error : null,\r\n            }\r\n        case recordTypes.SALE_RECORDS_ERROR:\r\n            return {\r\n                ...state,\r\n                sale_records_loading : false,\r\n                sale_records_error : action.payload,\r\n            }\r\n        case recordTypes.SALE_RECORDS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                sale_records_loading : false,\r\n                sale_records : action.payload,\r\n            }\r\n        case recordTypes.PURCHASE_RECORDS_START:\r\n            return {\r\n                ...state,\r\n                purchase_records_loading : true,\r\n                purchase_records : null,\r\n                purchase_records_error : null,\r\n            }\r\n        case recordTypes.PURCHASE_RECORDS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                purchase_records_loading : false,\r\n                purchase_records : action.payload,\r\n            }\r\n        case recordTypes.PURCHASE_RECORDS_ERROR:\r\n            return {\r\n                ...state,\r\n                purchase_records_loading : false,\r\n                purchase_records_error : action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default recordReducer;\r\n","import {combineReducers} from 'redux';\r\nimport {persistReducer} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n// importing reducers\r\nimport accountsReducer from './accounts/accounts.reducer';\r\nimport  websiteReducer from './website/Website.reducer';\r\nimport outletReducer from './outlet/Outlet.reducer';\r\nimport menuReducer from './menu/Menu.reducer';\r\nimport itemReducer from './item/Item.reducer';\r\nimport vendorReducer from './vendor/Vendor.reducer';\r\nimport productReducer from './product/Product.reducer';\r\nimport recordReducer from './record/Record.reducer';\r\n\r\nconst persistConfig = {\r\n    key : 'root',\r\n    storage,\r\n    whitelist : ['accounts'],\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    accounts : accountsReducer,\r\n    website : websiteReducer,\r\n    outlet : outletReducer,\r\n    menu : menuReducer,\r\n    item : itemReducer,\r\n    vendor : vendorReducer,\r\n    product : productReducer,\r\n    record : recordReducer,\r\n});\r\n\r\nexport default persistReducer(persistConfig,rootReducer);\r\n","import {createStore,applyMiddleware} from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport {persistStore} from 'redux-persist';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middlewares = [\r\n    thunk,\r\n    logger,\r\n]\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(...middlewares));\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {PersistGate} from 'redux-persist/integration/react';\nimport {Provider} from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {store,persistor} from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}